<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services https://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.project_dir">/home/maksim/Desktop/uvdesk</parameter>
    <parameter key="kernel.environment">dev</parameter>
    <parameter key="kernel.runtime_environment">%env(default:kernel.environment:APP_RUNTIME_ENV)%</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.build_dir">/home/maksim/Desktop/uvdesk/var/cache/dev</parameter>
    <parameter key="kernel.cache_dir">/home/maksim/Desktop/uvdesk/var/cache/dev</parameter>
    <parameter key="kernel.logs_dir">/home/maksim/Desktop/uvdesk/var/log</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="UVDeskCoreFrameworkBundle">Webkul\UVDesk\CoreFrameworkBundle\UVDeskCoreFrameworkBundle</parameter>
      <parameter key="UVDeskAutomationBundle">Webkul\UVDesk\AutomationBundle\UVDeskAutomationBundle</parameter>
      <parameter key="UVDeskExtensionFrameworkBundle">Webkul\UVDesk\ExtensionFrameworkBundle\UVDeskExtensionFrameworkBundle</parameter>
      <parameter key="UVDeskMailboxBundle">Webkul\UVDesk\MailboxBundle\UVDeskMailboxBundle</parameter>
      <parameter key="UVDeskSupportCenterBundle">Webkul\UVDesk\SupportCenterBundle\UVDeskSupportCenterBundle</parameter>
      <parameter key="UVDeskApiBundle">Webkul\UVDesk\ApiBundle\UVDeskApiBundle</parameter>
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
      <parameter key="DoctrineBundle">Doctrine\Bundle\DoctrineBundle\DoctrineBundle</parameter>
      <parameter key="DoctrineFixturesBundle">Doctrine\Bundle\FixturesBundle\DoctrineFixturesBundle</parameter>
      <parameter key="KnpPaginatorBundle">Knp\Bundle\PaginatorBundle\KnpPaginatorBundle</parameter>
      <parameter key="SensioFrameworkExtraBundle">Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle</parameter>
      <parameter key="TwigBundle">Symfony\Bundle\TwigBundle\TwigBundle</parameter>
      <parameter key="WebProfilerBundle">Symfony\Bundle\WebProfilerBundle\WebProfilerBundle</parameter>
      <parameter key="MonologBundle">Symfony\Bundle\MonologBundle\MonologBundle</parameter>
      <parameter key="DebugBundle">Symfony\Bundle\DebugBundle\DebugBundle</parameter>
      <parameter key="MakerBundle">Symfony\Bundle\MakerBundle\MakerBundle</parameter>
      <parameter key="DoctrineMigrationsBundle">Doctrine\Bundle\MigrationsBundle\DoctrineMigrationsBundle</parameter>
      <parameter key="SecurityBundle">Symfony\Bundle\SecurityBundle\SecurityBundle</parameter>
      <parameter key="SwiftmailerBundle">Symfony\Bundle\SwiftmailerBundle\SwiftmailerBundle</parameter>
      <parameter key="TwigExtraBundle">Twig\Extra\TwigExtraBundle\TwigExtraBundle</parameter>
    </parameter>
    <parameter key="kernel.bundles_metadata" type="collection">
      <parameter key="UVDeskCoreFrameworkBundle" type="collection">
        <parameter key="path">/home/maksim/Desktop/uvdesk/vendor/uvdesk/core-framework</parameter>
        <parameter key="namespace">Webkul\UVDesk\CoreFrameworkBundle</parameter>
      </parameter>
      <parameter key="UVDeskAutomationBundle" type="collection">
        <parameter key="path">/home/maksim/Desktop/uvdesk/vendor/uvdesk/automation-bundle</parameter>
        <parameter key="namespace">Webkul\UVDesk\AutomationBundle</parameter>
      </parameter>
      <parameter key="UVDeskExtensionFrameworkBundle" type="collection">
        <parameter key="path">/home/maksim/Desktop/uvdesk/vendor/uvdesk/extension-framework</parameter>
        <parameter key="namespace">Webkul\UVDesk\ExtensionFrameworkBundle</parameter>
      </parameter>
      <parameter key="UVDeskMailboxBundle" type="collection">
        <parameter key="path">/home/maksim/Desktop/uvdesk/vendor/uvdesk/mailbox-component</parameter>
        <parameter key="namespace">Webkul\UVDesk\MailboxBundle</parameter>
      </parameter>
      <parameter key="UVDeskSupportCenterBundle" type="collection">
        <parameter key="path">/home/maksim/Desktop/uvdesk/vendor/uvdesk/support-center-bundle</parameter>
        <parameter key="namespace">Webkul\UVDesk\SupportCenterBundle</parameter>
      </parameter>
      <parameter key="UVDeskApiBundle" type="collection">
        <parameter key="path">/home/maksim/Desktop/uvdesk/vendor/uvdesk/api-bundle</parameter>
        <parameter key="namespace">Webkul\UVDesk\ApiBundle</parameter>
      </parameter>
      <parameter key="FrameworkBundle" type="collection">
        <parameter key="path">/home/maksim/Desktop/uvdesk/vendor/symfony/framework-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\FrameworkBundle</parameter>
      </parameter>
      <parameter key="DoctrineBundle" type="collection">
        <parameter key="path">/home/maksim/Desktop/uvdesk/vendor/doctrine/doctrine-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\DoctrineBundle</parameter>
      </parameter>
      <parameter key="DoctrineFixturesBundle" type="collection">
        <parameter key="path">/home/maksim/Desktop/uvdesk/vendor/doctrine/doctrine-fixtures-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\FixturesBundle</parameter>
      </parameter>
      <parameter key="KnpPaginatorBundle" type="collection">
        <parameter key="path">/home/maksim/Desktop/uvdesk/vendor/knplabs/knp-paginator-bundle</parameter>
        <parameter key="namespace">Knp\Bundle\PaginatorBundle</parameter>
      </parameter>
      <parameter key="SensioFrameworkExtraBundle" type="collection">
        <parameter key="path">/home/maksim/Desktop/uvdesk/vendor/sensio/framework-extra-bundle/src</parameter>
        <parameter key="namespace">Sensio\Bundle\FrameworkExtraBundle</parameter>
      </parameter>
      <parameter key="TwigBundle" type="collection">
        <parameter key="path">/home/maksim/Desktop/uvdesk/vendor/symfony/twig-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\TwigBundle</parameter>
      </parameter>
      <parameter key="WebProfilerBundle" type="collection">
        <parameter key="path">/home/maksim/Desktop/uvdesk/vendor/symfony/web-profiler-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\WebProfilerBundle</parameter>
      </parameter>
      <parameter key="MonologBundle" type="collection">
        <parameter key="path">/home/maksim/Desktop/uvdesk/vendor/symfony/monolog-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\MonologBundle</parameter>
      </parameter>
      <parameter key="DebugBundle" type="collection">
        <parameter key="path">/home/maksim/Desktop/uvdesk/vendor/symfony/debug-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\DebugBundle</parameter>
      </parameter>
      <parameter key="MakerBundle" type="collection">
        <parameter key="path">/home/maksim/Desktop/uvdesk/vendor/symfony/maker-bundle/src</parameter>
        <parameter key="namespace">Symfony\Bundle\MakerBundle</parameter>
      </parameter>
      <parameter key="DoctrineMigrationsBundle" type="collection">
        <parameter key="path">/home/maksim/Desktop/uvdesk/vendor/doctrine/doctrine-migrations-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\MigrationsBundle</parameter>
      </parameter>
      <parameter key="SecurityBundle" type="collection">
        <parameter key="path">/home/maksim/Desktop/uvdesk/vendor/symfony/security-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SecurityBundle</parameter>
      </parameter>
      <parameter key="SwiftmailerBundle" type="collection">
        <parameter key="path">/home/maksim/Desktop/uvdesk/vendor/symfony/swiftmailer-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SwiftmailerBundle</parameter>
      </parameter>
      <parameter key="TwigExtraBundle" type="collection">
        <parameter key="path">/home/maksim/Desktop/uvdesk/vendor/twig/extra-bundle</parameter>
        <parameter key="namespace">Twig\Extra\TwigExtraBundle</parameter>
      </parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">App_KernelDevDebugContainer</parameter>
    <parameter key="env(DATABASE_URL)"></parameter>
    <parameter key="app_locales">en|fr|it|de|da|ar|es|tr|zh|pl|he</parameter>
    <parameter key="assets_default_agent_profile_image_path">bundles/uvdeskcoreframework/images/uv-avatar-batman.png</parameter>
    <parameter key="assets_default_customer_profile_image_path">bundles/uvdeskcoreframework/images/uv-avatar-ironman.png</parameter>
    <parameter key="assets_default_helpdesk_profile_image_path">bundles/uvdeskcoreframework/images/uv-avatar-uvdesk.png</parameter>
    <parameter key="uvdesk_site_path.member_prefix">member</parameter>
    <parameter key="uvdesk_site_path.knowledgebase_customer_prefix">customer</parameter>
    <parameter key="max_post_size">8388608</parameter>
    <parameter key="max_file_uploads">20</parameter>
    <parameter key="upload_max_filesize">2097152</parameter>
    <parameter key="locale">en</parameter>
    <parameter key="uvdesk.version">v1.1.7</parameter>
    <parameter key="uvdesk.core.version">v1.1.6</parameter>
    <parameter key="uvdesk.site_url">localhost:8000</parameter>
    <parameter key="uvdesk.upload_manager.id">Webkul\UVDesk\CoreFrameworkBundle\FileSystem\UploadManagers\Localhost</parameter>
    <parameter key="uvdesk.support_email.id">support@localhost</parameter>
    <parameter key="uvdesk.support_email.name">UVDesk Community</parameter>
    <parameter key="uvdesk.support_email.mailer_id">default</parameter>
    <parameter key="uvdesk.support_email.mailer_type">default</parameter>
    <parameter key="uvdesk.default.ticket.type">support</parameter>
    <parameter key="uvdesk.default.ticket.status">open</parameter>
    <parameter key="uvdesk.default.ticket.priority">low</parameter>
    <parameter key="uvdesk.default.templates.email">mail.html.twig</parameter>
    <parameter key="uvdesk_extensions.dir">/home/maksim/Desktop/uvdesk/apps</parameter>
    <parameter key="uvdesk.emails.delimiter">&lt;-- Please add content above this line --&gt;</parameter>
    <parameter key="uvdesk.emails.enable_delimiter">false</parameter>
    <parameter key="uvdesk.mailboxes" type="collection"/>
    <parameter key="event_dispatcher.event_aliases" type="collection">
      <parameter key="Symfony\Component\Console\Event\ConsoleCommandEvent">console.command</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleErrorEvent">console.error</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleSignalEvent">console.signal</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleTerminateEvent">console.terminate</parameter>
      <parameter key="Symfony\Component\Form\Event\PreSubmitEvent">form.pre_submit</parameter>
      <parameter key="Symfony\Component\Form\Event\SubmitEvent">form.submit</parameter>
      <parameter key="Symfony\Component\Form\Event\PostSubmitEvent">form.post_submit</parameter>
      <parameter key="Symfony\Component\Form\Event\PreSetDataEvent">form.pre_set_data</parameter>
      <parameter key="Symfony\Component\Form\Event\PostSetDataEvent">form.post_set_data</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ControllerArgumentsEvent">kernel.controller_arguments</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ControllerEvent">kernel.controller</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ResponseEvent">kernel.response</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\FinishRequestEvent">kernel.finish_request</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\RequestEvent">kernel.request</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ViewEvent">kernel.view</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ExceptionEvent">kernel.exception</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\TerminateEvent">kernel.terminate</parameter>
      <parameter key="Symfony\Component\Security\Core\Event\AuthenticationSuccessEvent">security.authentication.success</parameter>
      <parameter key="Symfony\Component\Security\Core\Event\AuthenticationFailureEvent">security.authentication.failure</parameter>
      <parameter key="Symfony\Component\Security\Http\Event\InteractiveLoginEvent">security.interactive_login</parameter>
      <parameter key="Symfony\Component\Security\Http\Event\SwitchUserEvent">security.switch_user</parameter>
    </parameter>
    <parameter key="fragment.renderer.hinclude.global_template">null</parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="kernel.secret">%env(APP_SECRET)%</parameter>
    <parameter key="kernel.http_method_override">false</parameter>
    <parameter key="kernel.trusted_hosts" type="collection"/>
    <parameter key="kernel.default_locale">en</parameter>
    <parameter key="kernel.enabled_locales" type="collection"/>
    <parameter key="kernel.error_controller">error_controller</parameter>
    <parameter key="debug.file_link_format">null</parameter>
    <parameter key="asset.request_context.base_path">null</parameter>
    <parameter key="asset.request_context.secure">null</parameter>
    <parameter key="translator.logging">false</parameter>
    <parameter key="translator.default_path">/home/maksim/Desktop/uvdesk/translations</parameter>
    <parameter key="debug.error_handler.throw_at">-1</parameter>
    <parameter key="debug.container.dump">/home/maksim/Desktop/uvdesk/var/cache/dev/App_KernelDevDebugContainer.xml</parameter>
    <parameter key="router.request_context.host">localhost</parameter>
    <parameter key="router.request_context.scheme">http</parameter>
    <parameter key="router.request_context.base_url"></parameter>
    <parameter key="router.resource">kernel::loadRoutes</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">443</parameter>
    <parameter key="serializer.mapping.cache.file">/home/maksim/Desktop/uvdesk/var/cache/dev/serialization.php</parameter>
    <parameter key="cache.prefix.seed">_/home/maksim/Desktop/uvdesk.App_KernelDevDebugContainer</parameter>
    <parameter key="session.metadata.storage_key">_sf2_meta</parameter>
    <parameter key="session.storage.options" type="collection">
      <parameter key="cache_limiter" type="string">0</parameter>
      <parameter key="cookie_secure">auto</parameter>
      <parameter key="cookie_httponly">true</parameter>
      <parameter key="cookie_samesite">lax</parameter>
      <parameter key="gc_probability">1</parameter>
    </parameter>
    <parameter key="session.save_path">null</parameter>
    <parameter key="session.metadata.update_threshold">0</parameter>
    <parameter key="form.type_extension.csrf.enabled">true</parameter>
    <parameter key="form.type_extension.csrf.field_name">_token</parameter>
    <parameter key="validator.mapping.cache.file">/home/maksim/Desktop/uvdesk/var/cache/dev/validation.php</parameter>
    <parameter key="validator.translation_domain">validators</parameter>
    <parameter key="profiler_listener.only_exceptions">false</parameter>
    <parameter key="profiler_listener.only_main_requests">false</parameter>
    <parameter key="profiler.storage.dsn">file:/home/maksim/Desktop/uvdesk/var/cache/dev/profiler</parameter>
    <parameter key="doctrine.dbal.logger.chain.class">Doctrine\DBAL\Logging\LoggerChain</parameter>
    <parameter key="doctrine.dbal.logger.profiling.class">Doctrine\DBAL\Logging\DebugStack</parameter>
    <parameter key="doctrine.dbal.logger.class">Symfony\Bridge\Doctrine\Logger\DbalLogger</parameter>
    <parameter key="doctrine.dbal.configuration.class">Doctrine\DBAL\Configuration</parameter>
    <parameter key="doctrine.data_collector.class">Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector</parameter>
    <parameter key="doctrine.dbal.connection.event_manager.class">Symfony\Bridge\Doctrine\ContainerAwareEventManager</parameter>
    <parameter key="doctrine.dbal.connection_factory.class">Doctrine\Bundle\DoctrineBundle\ConnectionFactory</parameter>
    <parameter key="doctrine.dbal.events.mysql_session_init.class">Doctrine\DBAL\Event\Listeners\MysqlSessionInit</parameter>
    <parameter key="doctrine.dbal.events.oracle_session_init.class">Doctrine\DBAL\Event\Listeners\OracleSessionInit</parameter>
    <parameter key="doctrine.class">Doctrine\Bundle\DoctrineBundle\Registry</parameter>
    <parameter key="doctrine.entity_managers" type="collection">
      <parameter key="default">doctrine.orm.default_entity_manager</parameter>
    </parameter>
    <parameter key="doctrine.default_entity_manager">default</parameter>
    <parameter key="doctrine.dbal.connection_factory.types" type="collection"/>
    <parameter key="doctrine.connections" type="collection">
      <parameter key="default">doctrine.dbal.default_connection</parameter>
    </parameter>
    <parameter key="doctrine.default_connection">default</parameter>
    <parameter key="doctrine.orm.configuration.class">Doctrine\ORM\Configuration</parameter>
    <parameter key="doctrine.orm.entity_manager.class">Doctrine\ORM\EntityManager</parameter>
    <parameter key="doctrine.orm.manager_configurator.class">Doctrine\Bundle\DoctrineBundle\ManagerConfigurator</parameter>
    <parameter key="doctrine.orm.cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine.orm.cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine.orm.cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine.orm.cache.memcache_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcache_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcache_instance.class">Memcache</parameter>
    <parameter key="doctrine.orm.cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine.orm.cache.memcached_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcached_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcached_instance.class">Memcached</parameter>
    <parameter key="doctrine.orm.cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine.orm.cache.redis_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.redis_port">6379</parameter>
    <parameter key="doctrine.orm.cache.redis_instance.class">Redis</parameter>
    <parameter key="doctrine.orm.cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine.orm.cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine.orm.cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine.orm.metadata.driver_chain.class">Doctrine\Persistence\Mapping\Driver\MappingDriverChain</parameter>
    <parameter key="doctrine.orm.metadata.annotation.class">Doctrine\ORM\Mapping\Driver\AnnotationDriver</parameter>
    <parameter key="doctrine.orm.metadata.xml.class">Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver</parameter>
    <parameter key="doctrine.orm.metadata.yml.class">Doctrine\ORM\Mapping\Driver\SimplifiedYamlDriver</parameter>
    <parameter key="doctrine.orm.metadata.php.class">Doctrine\ORM\Mapping\Driver\PHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.staticphp.class">Doctrine\ORM\Mapping\Driver\StaticPHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.attribute.class">Doctrine\ORM\Mapping\Driver\AttributeDriver</parameter>
    <parameter key="doctrine.orm.proxy_cache_warmer.class">Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer</parameter>
    <parameter key="form.type_guesser.doctrine.class">Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</parameter>
    <parameter key="doctrine.orm.validator.unique.class">Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator</parameter>
    <parameter key="doctrine.orm.validator_initializer.class">Symfony\Bridge\Doctrine\Validator\DoctrineInitializer</parameter>
    <parameter key="doctrine.orm.security.user.provider.class">Symfony\Bridge\Doctrine\Security\User\EntityUserProvider</parameter>
    <parameter key="doctrine.orm.listeners.resolve_target_entity.class">Doctrine\ORM\Tools\ResolveTargetEntityListener</parameter>
    <parameter key="doctrine.orm.listeners.attach_entity_listeners.class">Doctrine\ORM\Tools\AttachEntityListenersListener</parameter>
    <parameter key="doctrine.orm.naming_strategy.default.class">Doctrine\ORM\Mapping\DefaultNamingStrategy</parameter>
    <parameter key="doctrine.orm.naming_strategy.underscore.class">Doctrine\ORM\Mapping\UnderscoreNamingStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.default.class">Doctrine\ORM\Mapping\DefaultQuoteStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.ansi.class">Doctrine\ORM\Mapping\AnsiQuoteStrategy</parameter>
    <parameter key="doctrine.orm.entity_listener_resolver.class">Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_cache_factory.class">Doctrine\ORM\Cache\DefaultCacheFactory</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_region.class">Doctrine\ORM\Cache\Region\DefaultRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.filelock_region.class">Doctrine\ORM\Cache\Region\FileLockRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_chain.class">Doctrine\ORM\Cache\Logging\CacheLoggerChain</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_statistics.class">Doctrine\ORM\Cache\Logging\StatisticsCacheLogger</parameter>
    <parameter key="doctrine.orm.second_level_cache.cache_configuration.class">Doctrine\ORM\Cache\CacheConfiguration</parameter>
    <parameter key="doctrine.orm.second_level_cache.regions_configuration.class">Doctrine\ORM\Cache\RegionsConfiguration</parameter>
    <parameter key="doctrine.orm.auto_generate_proxy_classes">true</parameter>
    <parameter key="doctrine.orm.proxy_dir">/home/maksim/Desktop/uvdesk/var/cache/dev/doctrine/orm/Proxies</parameter>
    <parameter key="doctrine.orm.proxy_namespace">Proxies</parameter>
    <parameter key="knp_paginator.template.pagination">@KnpPaginator/Pagination/sliding.html.twig</parameter>
    <parameter key="knp_paginator.template.filtration">@KnpPaginator/Pagination/filtration.html.twig</parameter>
    <parameter key="knp_paginator.template.sortable">@KnpPaginator/Pagination/sortable_link.html.twig</parameter>
    <parameter key="knp_paginator.page_range">5</parameter>
    <parameter key="knp_paginator.page_limit">null</parameter>
    <parameter key="twig.form.resources" type="collection">
      <parameter>form_div_layout.html.twig</parameter>
    </parameter>
    <parameter key="twig.default_path">/home/maksim/Desktop/uvdesk/templates</parameter>
    <parameter key="web_profiler.debug_toolbar.intercept_redirects">false</parameter>
    <parameter key="web_profiler.debug_toolbar.mode">2</parameter>
    <parameter key="monolog.use_microseconds">true</parameter>
    <parameter key="monolog.swift_mailer.handlers" type="collection"/>
    <parameter key="monolog.handlers_to_channels" type="collection">
      <parameter key="monolog.handler.console" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
          <parameter>doctrine</parameter>
          <parameter>console</parameter>
        </parameter>
      </parameter>
      <parameter key="monolog.handler.main" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="env(VAR_DUMPER_SERVER)">127.0.0.1:9912</parameter>
    <parameter key="doctrine_migrations.name">Application Migrations</parameter>
    <parameter key="doctrine_migrations.dir_name">/home/maksim/Desktop/uvdesk/migrations</parameter>
    <parameter key="doctrine_migrations.namespace">DoctrineMigrations</parameter>
    <parameter key="doctrine_migrations.table_name">migration_versions</parameter>
    <parameter key="doctrine_migrations.column_name">version</parameter>
    <parameter key="doctrine_migrations.column_length">14</parameter>
    <parameter key="doctrine_migrations.executed_at_column_name">executed_at</parameter>
    <parameter key="doctrine_migrations.all_or_nothing">false</parameter>
    <parameter key="doctrine_migrations.custom_template">null</parameter>
    <parameter key="doctrine_migrations.organize_migrations">false</parameter>
    <parameter key="security.role_hierarchy.roles" type="collection">
      <parameter key="ROLE_AGENT" type="collection">
        <parameter>ROLE_AGENT</parameter>
      </parameter>
      <parameter key="ROLE_ADMIN" type="collection">
        <parameter>ROLE_AGENT</parameter>
        <parameter>ROLE_ADMIN</parameter>
      </parameter>
      <parameter key="ROLE_SUPER_ADMIN" type="collection">
        <parameter>ROLE_ADMIN</parameter>
        <parameter>ROLE_SUPER_ADMIN</parameter>
      </parameter>
      <parameter key="ROLE_CUSTOMER" type="collection">
        <parameter>ROLE_CUSTOMER</parameter>
      </parameter>
    </parameter>
    <parameter key="security.access.denied_url">null</parameter>
    <parameter key="security.authentication.manager.erase_credentials">true</parameter>
    <parameter key="security.authentication.session_strategy.strategy">migrate</parameter>
    <parameter key="security.access.always_authenticate_before_granting">false</parameter>
    <parameter key="security.authentication.hide_user_not_found">true</parameter>
    <parameter key="security.firewalls" type="collection">
      <parameter>dev</parameter>
      <parameter>back_support</parameter>
      <parameter>uvdesk_api</parameter>
      <parameter>customer</parameter>
    </parameter>
    <parameter key="security.back_support._indexed_authenticators" type="collection"/>
    <parameter key="security.uvdesk_api._indexed_authenticators" type="collection"/>
    <parameter key="security.customer._indexed_authenticators" type="collection"/>
    <parameter key="swiftmailer.mailer.default.transport.name">dynamic</parameter>
    <parameter key="swiftmailer.spool.default.memory.path">/home/maksim/Desktop/uvdesk/var/cache/dev/swiftmailer/spool/default</parameter>
    <parameter key="swiftmailer.mailer.default.spool.enabled">true</parameter>
    <parameter key="swiftmailer.mailer.default.plugin.impersonate">null</parameter>
    <parameter key="swiftmailer.mailer.default.single_address">null</parameter>
    <parameter key="swiftmailer.mailer.default.delivery.enabled">true</parameter>
    <parameter key="swiftmailer.spool.enabled">true</parameter>
    <parameter key="swiftmailer.delivery.enabled">true</parameter>
    <parameter key="swiftmailer.single_address">null</parameter>
    <parameter key="swiftmailer.mailers" type="collection">
      <parameter key="default">swiftmailer.mailer.default</parameter>
    </parameter>
    <parameter key="swiftmailer.default_mailer">default</parameter>
    <parameter key="data_collector.templates" type="collection">
      <parameter key="data_collector.request" type="collection">
        <parameter>request</parameter>
        <parameter>@WebProfiler/Collector/request.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.time" type="collection">
        <parameter>time</parameter>
        <parameter>@WebProfiler/Collector/time.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.memory" type="collection">
        <parameter>memory</parameter>
        <parameter>@WebProfiler/Collector/memory.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.validator" type="collection">
        <parameter>validator</parameter>
        <parameter>@WebProfiler/Collector/validator.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.ajax" type="collection">
        <parameter>ajax</parameter>
        <parameter>@WebProfiler/Collector/ajax.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.form" type="collection">
        <parameter>form</parameter>
        <parameter>@WebProfiler/Collector/form.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.exception" type="collection">
        <parameter>exception</parameter>
        <parameter>@WebProfiler/Collector/exception.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.logger" type="collection">
        <parameter>logger</parameter>
        <parameter>@WebProfiler/Collector/logger.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.events" type="collection">
        <parameter>events</parameter>
        <parameter>@WebProfiler/Collector/events.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.router" type="collection">
        <parameter>router</parameter>
        <parameter>@WebProfiler/Collector/router.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.cache" type="collection">
        <parameter>cache</parameter>
        <parameter>@WebProfiler/Collector/cache.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.translation" type="collection">
        <parameter>translation</parameter>
        <parameter>@WebProfiler/Collector/translation.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.security" type="collection">
        <parameter>security</parameter>
        <parameter>@Security/Collector/security.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.twig" type="collection">
        <parameter>twig</parameter>
        <parameter>@WebProfiler/Collector/twig.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.http_client" type="collection">
        <parameter>http_client</parameter>
        <parameter>@WebProfiler/Collector/http_client.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.doctrine" type="collection">
        <parameter>db</parameter>
        <parameter>@Doctrine/Collector/db.html.twig</parameter>
      </parameter>
      <parameter key="swiftmailer.data_collector" type="collection">
        <parameter>swiftmailer</parameter>
        <parameter>@Swiftmailer/Collector/swiftmailer.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.dump" type="collection">
        <parameter>dump</parameter>
        <parameter>@Debug/Profiler/dump.html.twig</parameter>
      </parameter>
      <parameter key="mailer.data_collector" type="collection">
        <parameter>mailer</parameter>
        <parameter>@WebProfiler/Collector/mailer.html.twig</parameter>
      </parameter>
      <parameter key="notifier.data_collector" type="collection">
        <parameter>notifier</parameter>
        <parameter>@WebProfiler/Collector/notifier.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.config" type="collection">
        <parameter>config</parameter>
        <parameter>@WebProfiler/Collector/config.html.twig</parameter>
      </parameter>
    </parameter>
    <parameter key="console.command.ids" type="collection">
      <parameter>console.command.public_alias.App\Console\EnvironmentVariables</parameter>
      <parameter>console.command.public_alias.App\Console\Wizard\ConfigureHelpdesk</parameter>
      <parameter>console.command.public_alias.App\Console\Wizard\DefaultUser</parameter>
      <parameter>console.command.public_alias.App\Console\Wizard\MigrateDatabase</parameter>
      <parameter>console.command.public_alias.Webkul\UVDesk\CoreFrameworkBundle\Guides\BootstrappingProject</parameter>
      <parameter>console.command.public_alias.Webkul\UVDesk\ExtensionFrameworkBundle\Console\BuildExtensions</parameter>
      <parameter>console.command.public_alias.Webkul\UVDesk\MailboxBundle\Console\RefreshMailboxCommand</parameter>
    </parameter>
  </parameters>
  <services>
    <service id="service_container" class="Symfony\Component\DependencyInjection\ContainerInterface" public="true" synthetic="true"/>
    <service id="kernel" class="App\Kernel" public="true" synthetic="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="routing.route_loader"/>
    </service>
    <service id="App\Console\EnvironmentVariables" class="App\Console\EnvironmentVariables" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="App\Console\Wizard\ConfigureHelpdesk" class="App\Console\Wizard\ConfigureHelpdesk" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="App\Console\Wizard\DefaultUser" class="App\Console\Wizard\DefaultUser" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
    </service>
    <service id="App\Console\Wizard\MigrateDatabase" class="App\Console\Wizard\MigrateDatabase" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Controller\BaseController" class="App\Controller\BaseController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.App\Controller\BaseController"/>
      </call>
    </service>
    <service id="App\Controller\ConfigureHelpdesk" class="App\Controller\ConfigureHelpdesk" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.App\Controller\ConfigureHelpdesk"/>
      </call>
    </service>
    <service id="App\Controller\ImageCache\ImageCacheController" class="App\Controller\ImageCache\ImageCacheController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Service\UrlImageCacheService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.App\Controller\ImageCache\ImageCacheController"/>
      </call>
    </service>
    <service id="App\Controller\ImageCache\ImageManager" class="App\Controller\ImageCache\ImageManager" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="App\DataFixtures\AppFixtures" class="App\DataFixtures\AppFixtures" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\EventListener\ExceptionSubscriber" class="App\EventListener\ExceptionSubscriber" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="App\Routing\RoutingResource" class="App\Routing\RoutingResource" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Definition\RoutingResourceInterface"/>
    </service>
    <service id="App\Service\UrlImageCacheService" class="App\Service\UrlImageCacheService" autowire="true" autoconfigure="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Controller\Account" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Account" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UVDeskService"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\FileSystem\FileSystem"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\FileUploadService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\Account"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Controller\AccountXHR" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\AccountXHR" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="translator.data_collector"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\AccountXHR"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Controller\Authentication" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Authentication" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      <argument type="service" id="security.authentication_utils"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\ReCaptchaService"/>
      <argument type="service" id="kernel"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\Authentication"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Controller\Customer" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Customer" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\FileSystem\FileSystem"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\Customer"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Controller\CustomerXHR" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\CustomerXHR" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="translator.data_collector"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\CustomerXHR"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Controller\Email" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Email" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      <argument type="service" id="translator.data_collector"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\Email"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Controller\EmailSettings" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\EmailSettings" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\SwiftMailer\SwiftMailer"/>
      <argument type="service" id="Webkul\UVDesk\MailboxBundle\Services\MailboxService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\EmailSettings"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Controller\EmailSettingsXHR" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\EmailSettingsXHR" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\SwiftMailer\SwiftMailer"/>
      <argument type="service" id="kernel"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\EmailSettingsXHR"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Controller\Group" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Group" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      <argument type="service" id="translator.data_collector"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\Group"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Controller\GroupXHR" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\GroupXHR" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      <argument type="service" id="translator.data_collector"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\GroupXHR"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Controller\Microsoft\MicrosoftApps" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Microsoft\MicrosoftApps" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\Microsoft\MicrosoftApps"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Controller\Microsoft\MicrosoftAppsXHR" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Microsoft\MicrosoftAppsXHR" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\Microsoft\MicrosoftAppsXHR"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Controller\Privilege" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Privilege" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UVDeskService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\Privilege"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Controller\PrivilegeXHR" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\PrivilegeXHR" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      <argument type="service" id="translator.data_collector"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\PrivilegeXHR"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Controller\Report" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Report" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UVDeskService"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\ReportService"/>
      <argument type="service" id="knp_paginator"/>
      <argument type="service" id="translator.data_collector"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\Report"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Controller\SavedReplies" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\SavedReplies" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      <argument type="service" id="translator.data_collector"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\SavedReplies"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Controller\SwiftMailer" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\SwiftMailer" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\SwiftMailer\SwiftMailer"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\SwiftMailer"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Controller\SwiftMailerXHR" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\SwiftMailerXHR" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\SwiftMailer\SwiftMailer"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\SwiftMailerXHR"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Controller\Team" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Team" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      <argument type="service" id="translator.data_collector"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\Team"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Controller\TeamXHR" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\TeamXHR" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      <argument type="service" id="translator.data_collector"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\TeamXHR"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Controller\Theme" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Theme" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.data_collector"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\Theme"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Controller\Thread" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Thread" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\TicketService"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\EmailService"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\FileUploadService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\Thread"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Controller\ThreadXHR" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\ThreadXHR" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\TicketService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\ThreadXHR"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Controller\Ticket" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Ticket" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\TicketService"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\EmailService"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="service_container"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\Ticket"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Controller\TicketXHR" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\TicketXHR" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\TicketService"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\EmailService"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\TicketXHR"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\AsideTemplate" class="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\AsideTemplate" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Framework\ExtendableComponentInterface"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      <call method="addPanelSidebar">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Account"/>
      </call>
      <call method="addPanelSidebar">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Apps"/>
      </call>
      <call method="addPanelSidebar">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Branding"/>
      </call>
      <call method="addPanelSidebar">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Productivity"/>
      </call>
      <call method="addPanelSidebar">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Reports"/>
      </call>
      <call method="addPanelSidebar">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Settings"/>
      </call>
      <call method="addPanelSidebar">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Users"/>
      </call>
      <call method="addPanelSidebar">
        <argument type="service" id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Sidebars\Knowledgebase"/>
      </call>
      <call method="addPanelSidebarItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Account\Profile"/>
      </call>
      <call method="addPanelSidebarItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Productivity\SavedReplies"/>
      </call>
      <call method="addPanelSidebarItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Productivity\Tags"/>
      </call>
      <call method="addPanelSidebarItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Productivity\TicketTypes"/>
      </call>
      <call method="addPanelSidebarItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Reports\AgentActivity"/>
      </call>
      <call method="addPanelSidebarItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Reports\Kudos"/>
      </call>
      <call method="addPanelSidebarItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Settings\Branding"/>
      </call>
      <call method="addPanelSidebarItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Settings\EmailSettings"/>
      </call>
      <call method="addPanelSidebarItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Settings\EmailTemplates"/>
      </call>
      <call method="addPanelSidebarItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Settings\MicrosoftApps"/>
      </call>
      <call method="addPanelSidebarItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Settings\SwiftMailer"/>
      </call>
      <call method="addPanelSidebarItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Themes\Helpdesk"/>
      </call>
      <call method="addPanelSidebarItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Users\Agents"/>
      </call>
      <call method="addPanelSidebarItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Users\Customers"/>
      </call>
      <call method="addPanelSidebarItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Users\Groups"/>
      </call>
      <call method="addPanelSidebarItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Users\Privileges"/>
      </call>
      <call method="addPanelSidebarItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Users\Teams"/>
      </call>
      <call method="addPanelSidebarItem">
        <argument type="service" id="Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Panel\Items\Productivity\PreparedResponses"/>
      </call>
      <call method="addPanelSidebarItem">
        <argument type="service" id="Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Panel\Items\Productivity\Workflows"/>
      </call>
      <call method="addPanelSidebarItem">
        <argument type="service" id="Webkul\UVDesk\MailboxBundle\UIComponents\Dashboard\Panel\Items\Settings\Mailboxes"/>
      </call>
      <call method="addPanelSidebarItem">
        <argument type="service" id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Knowledgebase\Announcement"/>
      </call>
      <call method="addPanelSidebarItem">
        <argument type="service" id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Knowledgebase\Articles"/>
      </call>
      <call method="addPanelSidebarItem">
        <argument type="service" id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Knowledgebase\Categories"/>
      </call>
      <call method="addPanelSidebarItem">
        <argument type="service" id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Knowledgebase\Folders"/>
      </call>
      <call method="addPanelSidebarItem">
        <argument type="service" id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Knowledgebase\MarketingModule"/>
      </call>
      <call method="addPanelSidebarItem">
        <argument type="service" id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Settings\BlockSpam"/>
      </call>
      <call method="addPanelSidebarItem">
        <argument type="service" id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Themes\SupportCenter"/>
      </call>
      <call method="addPanelSidebarItem">
        <argument type="service" id="Webkul\UVDesk\ApiBundle\UIComponents\Dashboard\Panel\Items\Settings\ApiSettings"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Dashboard" class="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Dashboard" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Framework\ExtendableComponentInterface"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\DashboardTemplate"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\NavigationTemplate"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\HomepageTemplate"/>
      <call method="appendNavigation">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Navigation\Home"/>
      </call>
      <call method="appendNavigation">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Navigation\Reports"/>
      </call>
      <call method="appendNavigation">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Navigation\Ticket"/>
      </call>
      <call method="appendNavigation">
        <argument type="service" id="Webkul\UVDesk\ExtensionFrameworkBundle\UIComponents\Dashboard\Navigation\Apps"/>
      </call>
      <call method="appendNavigation">
        <argument type="service" id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Navigation\Knowledgebase"/>
      </call>
      <call method="appendHomepageSection">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Sections\Productivity"/>
      </call>
      <call method="appendHomepageSection">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Sections\Reports"/>
      </call>
      <call method="appendHomepageSection">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Sections\Settings"/>
      </call>
      <call method="appendHomepageSection">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Sections\Users"/>
      </call>
      <call method="appendHomepageSection">
        <argument type="service" id="Webkul\UVDesk\ExtensionFrameworkBundle\UIComponents\Dashboard\Homepage\Sections\Apps"/>
      </call>
      <call method="appendHomepageSection">
        <argument type="service" id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Sections\Knowledgebase"/>
      </call>
      <call method="appendHomepageSectionItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\AgentActivity"/>
      </call>
      <call method="appendHomepageSectionItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Agents"/>
      </call>
      <call method="appendHomepageSectionItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Branding"/>
      </call>
      <call method="appendHomepageSectionItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Customers"/>
      </call>
      <call method="appendHomepageSectionItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\EmailSettings"/>
      </call>
      <call method="appendHomepageSectionItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\EmailTemplates"/>
      </call>
      <call method="appendHomepageSectionItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Groups"/>
      </call>
      <call method="appendHomepageSectionItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Kudos"/>
      </call>
      <call method="appendHomepageSectionItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\MicrosoftApps"/>
      </call>
      <call method="appendHomepageSectionItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Privileges"/>
      </call>
      <call method="appendHomepageSectionItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\SavedReplies"/>
      </call>
      <call method="appendHomepageSectionItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\SwiftMailer"/>
      </call>
      <call method="appendHomepageSectionItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Tags"/>
      </call>
      <call method="appendHomepageSectionItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Teams"/>
      </call>
      <call method="appendHomepageSectionItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\TicketTypes"/>
      </call>
      <call method="appendHomepageSectionItem">
        <argument type="service" id="Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Homepage\Items\PreparedResponses"/>
      </call>
      <call method="appendHomepageSectionItem">
        <argument type="service" id="Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Homepage\Items\Workflows"/>
      </call>
      <call method="appendHomepageSectionItem">
        <argument type="service" id="Webkul\UVDesk\ExtensionFrameworkBundle\UIComponents\Dashboard\Homepage\Items\ExploreApps"/>
      </call>
      <call method="appendHomepageSectionItem">
        <argument type="service" id="Webkul\UVDesk\MailboxBundle\UIComponents\Dashboard\Homepage\Items\Mailbox"/>
      </call>
      <call method="appendHomepageSectionItem">
        <argument type="service" id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\Announcement"/>
      </call>
      <call method="appendHomepageSectionItem">
        <argument type="service" id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\Articles"/>
      </call>
      <call method="appendHomepageSectionItem">
        <argument type="service" id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\Categories"/>
      </call>
      <call method="appendHomepageSectionItem">
        <argument type="service" id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\Folders"/>
      </call>
      <call method="appendHomepageSectionItem">
        <argument type="service" id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\MarketingModule"/>
      </call>
      <call method="appendHomepageSectionItem">
        <argument type="service" id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\SpamSettings"/>
      </call>
      <call method="appendHomepageSectionItem">
        <argument type="service" id="Webkul\UVDesk\ApiBundle\UIComponents\Dashboard\Homepage\Items\ApiSettings"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\DashboardTemplate" class="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\DashboardTemplate" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Framework\ExtendableComponentInterface"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\HomepageTemplate" class="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\HomepageTemplate" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Framework\ExtendableComponentInterface"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\NavigationTemplate" class="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\NavigationTemplate" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Framework\ExtendableComponentInterface"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\SearchTemplate" class="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\SearchTemplate" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Framework\ExtendableComponentInterface"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      <call method="appendSearchItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\AgentActivity"/>
      </call>
      <call method="appendSearchItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Agents"/>
      </call>
      <call method="appendSearchItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Apps"/>
      </call>
      <call method="appendSearchItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Branding"/>
      </call>
      <call method="appendSearchItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\EmailSettings"/>
      </call>
      <call method="appendSearchItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\EmailTemplates"/>
      </call>
      <call method="appendSearchItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Groups"/>
      </call>
      <call method="appendSearchItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Kudos"/>
      </call>
      <call method="appendSearchItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Privileges"/>
      </call>
      <call method="appendSearchItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\SavedReplies"/>
      </call>
      <call method="appendSearchItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Tags"/>
      </call>
      <call method="appendSearchItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Teams"/>
      </call>
      <call method="appendSearchItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\TicketTypes"/>
      </call>
      <call method="appendSearchItem">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Tickets"/>
      </call>
      <call method="appendSearchItem">
        <argument type="service" id="Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Search\PreparedResponses"/>
      </call>
      <call method="appendSearchItem">
        <argument type="service" id="Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Search\Workflows"/>
      </call>
      <call method="appendSearchItem">
        <argument type="service" id="Webkul\UVDesk\ExtensionFrameworkBundle\UIComponents\Dashboard\Search\Apps"/>
      </call>
      <call method="appendSearchItem">
        <argument type="service" id="Webkul\UVDesk\MailboxBundle\UIComponents\Dashboard\Search\Mailbox"/>
      </call>
      <call method="appendSearchItem">
        <argument type="service" id="Webkul\UVDesk\MailboxBundle\UIComponents\Dashboard\Search\SwiftMailer"/>
      </call>
      <call method="appendSearchItem">
        <argument type="service" id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\Announcement"/>
      </call>
      <call method="appendSearchItem">
        <argument type="service" id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\Articles"/>
      </call>
      <call method="appendSearchItem">
        <argument type="service" id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\Categories"/>
      </call>
      <call method="appendSearchItem">
        <argument type="service" id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\Customers"/>
      </call>
      <call method="appendSearchItem">
        <argument type="service" id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\Folders"/>
      </call>
      <call method="appendSearchItem">
        <argument type="service" id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\MarketingModule"/>
      </call>
      <call method="appendSearchItem">
        <argument type="service" id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\SpamSettings"/>
      </call>
      <call method="appendSearchItem">
        <argument type="service" id="Webkul\UVDesk\ApiBundle\UIComponents\Dashboard\Search\ApiSettings"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\DataProxies\CreateTicketDataClass" class="Webkul\UVDesk\CoreFrameworkBundle\DataProxies\CreateTicketDataClass" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Definition\RouteLoader" class="Webkul\UVDesk\CoreFrameworkBundle\Definition\RouteLoader" autowire="true" autoconfigure="true">
      <tag name="routing.loader"/>
      <argument type="service" id="service_container"/>
      <call method="addRoutingResource">
        <argument type="service" id="App\Routing\RoutingResource"/>
        <argument type="collection">
          <argument type="collection"/>
        </argument>
      </call>
      <call method="addRoutingResource">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Routing\RoutingResource"/>
        <argument type="collection">
          <argument type="collection"/>
        </argument>
      </call>
      <call method="addRoutingResource">
        <argument type="service" id="Webkul\UVDesk\AutomationBundle\Routing\RoutingResource"/>
        <argument type="collection">
          <argument type="collection"/>
        </argument>
      </call>
      <call method="addRoutingResource">
        <argument type="service" id="Webkul\UVDesk\ExtensionFrameworkBundle\Routing\RoutingResource"/>
        <argument type="collection">
          <argument type="collection"/>
        </argument>
      </call>
      <call method="addRoutingResource">
        <argument type="service" id="Webkul\UVDesk\MailboxBundle\Routing\RoutingResource"/>
        <argument type="collection">
          <argument type="collection"/>
        </argument>
      </call>
      <call method="addRoutingResource">
        <argument type="service" id="Webkul\UVDesk\SupportCenterBundle\Routing\RoutingResource"/>
        <argument type="collection">
          <argument type="collection"/>
        </argument>
      </call>
      <call method="addRoutingResource">
        <argument type="service" id="Webkul\UVDesk\ApiBundle\Routing\RoutingResource"/>
        <argument type="collection">
          <argument type="collection"/>
        </argument>
      </call>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\EventListener\Console\Console" class="Webkul\UVDesk\CoreFrameworkBundle\EventListener\Console\Console" autowire="true" autoconfigure="true">
      <tag name="kernel.event_listener" event="console.command"/>
      <tag name="kernel.event_listener" event="console.terminate"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\EventListener\Doctrine\Lifecycle" class="Webkul\UVDesk\CoreFrameworkBundle\EventListener\Doctrine\Lifecycle" autowire="true" autoconfigure="true">
      <tag name="doctrine.event_listener" event="prePersist"/>
      <tag name="doctrine.event_listener" event="preUpdate"/>
      <tag name="doctrine.event_listener" event="postLoad"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\EventListener\Swiftmailer" class="Webkul\UVDesk\CoreFrameworkBundle\EventListener\Swiftmailer" autowire="true" autoconfigure="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Extension\TwigExtension" class="Webkul\UVDesk\CoreFrameworkBundle\Extension\TwigExtension" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\FileSystem\FileSystem" class="Webkul\UVDesk\CoreFrameworkBundle\FileSystem\FileSystem" autowire="true" autoconfigure="true">
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\FileSystem\UploadManagers\Localhost" class="Webkul\UVDesk\CoreFrameworkBundle\FileSystem\UploadManagers\Localhost" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Fixtures\AgentGroups" class="Webkul\UVDesk\CoreFrameworkBundle\Fixtures\AgentGroups" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Fixtures\AgentPrivileges" class="Webkul\UVDesk\CoreFrameworkBundle\Fixtures\AgentPrivileges" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Fixtures\EmailTemplates" class="Webkul\UVDesk\CoreFrameworkBundle\Fixtures\EmailTemplates" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Fixtures\HelpdeskBranding" class="Webkul\UVDesk\CoreFrameworkBundle\Fixtures\HelpdeskBranding" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Fixtures\TicketPriorities" class="Webkul\UVDesk\CoreFrameworkBundle\Fixtures\TicketPriorities" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Fixtures\TicketStatuses" class="Webkul\UVDesk\CoreFrameworkBundle\Fixtures\TicketStatuses" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Fixtures\TicketTypes" class="Webkul\UVDesk\CoreFrameworkBundle\Fixtures\TicketTypes" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Fixtures\UserRoles" class="Webkul\UVDesk\CoreFrameworkBundle\Fixtures\UserRoles" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Form\CreateTicket" class="Webkul\UVDesk\CoreFrameworkBundle\Form\CreateTicket" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Form\Mailbox" class="Webkul\UVDesk\CoreFrameworkBundle\Form\Mailbox" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Form\UserProfile" class="Webkul\UVDesk\CoreFrameworkBundle\Form\UserProfile" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Framework\EventDispatcher" class="Webkul\UVDesk\CoreFrameworkBundle\Framework\EventDispatcher" autowire="true" autoconfigure="true">
      <tag name="event_dispatcher.dispatcher"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <call method="addEventListener">
        <argument type="service" id="Webkul\UVDesk\MailboxBundle\EventListener\Swiftmailer"/>
        <argument type="collection">
          <argument type="collection">
            <argument key="event">swiftmailer.configuration.updated</argument>
            <argument key="method">onSwiftMailerConfigurationUpdated</argument>
          </argument>
          <argument type="collection">
            <argument key="event">swiftmailer.configuration.removed</argument>
            <argument key="method">onSwiftMailerConfigurationRemoved</argument>
          </argument>
        </argument>
      </call>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Framework\ExtendableComponentManager" class="Webkul\UVDesk\CoreFrameworkBundle\Framework\ExtendableComponentManager" autowire="true" autoconfigure="true">
      <argument type="service" id="service_container"/>
      <call method="addComponent">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\AsideTemplate"/>
      </call>
      <call method="addComponent">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Dashboard"/>
      </call>
      <call method="addComponent">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\DashboardTemplate"/>
      </call>
      <call method="addComponent">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\HomepageTemplate"/>
      </call>
      <call method="addComponent">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\NavigationTemplate"/>
      </call>
      <call method="addComponent">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\SearchTemplate"/>
      </call>
      <call method="addComponent">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Tickets\QuickActionButtonCollection"/>
      </call>
      <call method="addComponent">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Tickets\WidgetCollection"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Guides\BootstrappingProject" class="Webkul\UVDesk\CoreFrameworkBundle\Guides\BootstrappingProject" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Agent\MailAgent" class="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Agent\MailAgent">
      <tag name="uvdesk.automations.prepared_response.actions"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Agent\TransferTickets" class="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Agent\TransferTickets">
      <tag name="uvdesk.automations.prepared_response.actions"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Customer\MailCustomer" class="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Customer\MailCustomer">
      <tag name="uvdesk.automations.prepared_response.actions"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\AddNote" class="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\AddNote">
      <tag name="uvdesk.automations.prepared_response.actions"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\Delete" class="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\Delete">
      <tag name="uvdesk.automations.prepared_response.actions"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\MailAgent" class="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\MailAgent">
      <tag name="uvdesk.automations.prepared_response.actions"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\MailCustomer" class="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\MailCustomer">
      <tag name="uvdesk.automations.prepared_response.actions"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\MailGroup" class="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\MailGroup">
      <tag name="uvdesk.automations.prepared_response.actions"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\MailLastCollaborator" class="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\MailLastCollaborator">
      <tag name="uvdesk.automations.prepared_response.actions"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\MailTeam" class="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\MailTeam">
      <tag name="uvdesk.automations.prepared_response.actions"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\MarkSpam" class="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\MarkSpam">
      <tag name="uvdesk.automations.prepared_response.actions"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\UpdateAgent" class="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\UpdateAgent">
      <tag name="uvdesk.automations.prepared_response.actions"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\UpdateGroup" class="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\UpdateGroup">
      <tag name="uvdesk.automations.prepared_response.actions"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\UpdatePriority" class="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\UpdatePriority">
      <tag name="uvdesk.automations.prepared_response.actions"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\UpdateStatus" class="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\UpdateStatus">
      <tag name="uvdesk.automations.prepared_response.actions"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\UpdateTag" class="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\UpdateTag">
      <tag name="uvdesk.automations.prepared_response.actions"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\UpdateTeam" class="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\UpdateTeam">
      <tag name="uvdesk.automations.prepared_response.actions"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\UpdateType" class="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\UpdateType">
      <tag name="uvdesk.automations.prepared_response.actions"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Providers\UserProvider" class="Webkul\UVDesk\CoreFrameworkBundle\Providers\UserProvider" autowire="true" autoconfigure="true">
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id=".session.do-not-use"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\ReCaptchaService"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Repository\AgentActivityRepository" class="Webkul\UVDesk\CoreFrameworkBundle\Repository\AgentActivityRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Repository\EmailTemplatesRepository" class="Webkul\UVDesk\CoreFrameworkBundle\Repository\EmailTemplatesRepository" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Repository\Microsoft\MicrosoftAccountRepository" class="Webkul\UVDesk\CoreFrameworkBundle\Repository\Microsoft\MicrosoftAccountRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Repository\Microsoft\MicrosoftAppRepository" class="Webkul\UVDesk\CoreFrameworkBundle\Repository\Microsoft\MicrosoftAppRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Repository\RecaptchaRepository" class="Webkul\UVDesk\CoreFrameworkBundle\Repository\RecaptchaRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Repository\SavedRepliesRepository" class="Webkul\UVDesk\CoreFrameworkBundle\Repository\SavedRepliesRepository" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Repository\SupportGroupRepository" class="Webkul\UVDesk\CoreFrameworkBundle\Repository\SupportGroupRepository" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Repository\SupportPrivilegeRepository" class="Webkul\UVDesk\CoreFrameworkBundle\Repository\SupportPrivilegeRepository" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Repository\SupportTeamRepository" class="Webkul\UVDesk\CoreFrameworkBundle\Repository\SupportTeamRepository" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Repository\ThreadRepository" class="Webkul\UVDesk\CoreFrameworkBundle\Repository\ThreadRepository" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Repository\TicketRatingRepository" class="Webkul\UVDesk\CoreFrameworkBundle\Repository\TicketRatingRepository" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Repository\TicketRepository" class="Webkul\UVDesk\CoreFrameworkBundle\Repository\TicketRepository" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Repository\UserRepository" class="Webkul\UVDesk\CoreFrameworkBundle\Repository\UserRepository" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Routing\RoutingResource" class="Webkul\UVDesk\CoreFrameworkBundle\Routing\RoutingResource" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Definition\RoutingResourceInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Security\TicketVoter" class="Webkul\UVDesk\CoreFrameworkBundle\Security\TicketVoter" autowire="true" autoconfigure="true">
      <tag name="security.voter"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Services\EmailService" class="Webkul\UVDesk\CoreFrameworkBundle\Services\EmailService" autowire="true" autoconfigure="true">
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id=".session.do-not-use"/>
      <argument type="service" id="Webkul\UVDesk\MailboxBundle\Services\MailboxService"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\MicrosoftIntegration"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Services\FileUploadService" class="Webkul\UVDesk\CoreFrameworkBundle\Services\FileUploadService" autowire="true" autoconfigure="true">
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Services\MicrosoftIntegration" class="Webkul\UVDesk\CoreFrameworkBundle\Services\MicrosoftIntegration" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Services\ReCaptchaService" class="Webkul\UVDesk\CoreFrameworkBundle\Services\ReCaptchaService" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Services\ReportService" class="Webkul\UVDesk\CoreFrameworkBundle\Services\ReportService" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Services\TicketService" class="Webkul\UVDesk\CoreFrameworkBundle\Services\TicketService" autowire="true" autoconfigure="true">
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\FileUploadService"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      <argument type="service" id="Webkul\UVDesk\MailboxBundle\Services\MailboxService"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Services\UVDeskService" class="Webkul\UVDesk\CoreFrameworkBundle\Services\UVDeskService" autowire="true" autoconfigure="true">
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService" class="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService" autowire="true" autoconfigure="true">
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Services\ValidationService" class="Webkul\UVDesk\CoreFrameworkBundle\Services\ValidationService" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\SwiftMailer\Event\ConfigurationRemovedEvent" class="Webkul\UVDesk\CoreFrameworkBundle\SwiftMailer\Event\ConfigurationRemovedEvent" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\SwiftMailer\Event\ConfigurationUpdatedEvent" class="Webkul\UVDesk\CoreFrameworkBundle\SwiftMailer\Event\ConfigurationUpdatedEvent" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\SwiftMailer\SwiftMailer" class="Webkul\UVDesk\CoreFrameworkBundle\SwiftMailer\SwiftMailer" autowire="true" autoconfigure="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Tickets\QuickActionButtonCollection" class="Webkul\UVDesk\CoreFrameworkBundle\Tickets\QuickActionButtonCollection" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Framework\ExtendableComponentInterface"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\DashboardTemplate"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      <call method="add">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Ticket\QuickActionButtons\SavedReplies"/>
        <argument type="collection">
          <argument type="collection"/>
        </argument>
      </call>
      <call method="add">
        <argument type="service" id="Webkul\UVDesk\AutomationBundle\UIComponents\Ticket\QuickActionButtons\PreparedResponses"/>
        <argument type="collection">
          <argument type="collection"/>
        </argument>
      </call>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Tickets\WidgetCollection" class="Webkul\UVDesk\CoreFrameworkBundle\Tickets\WidgetCollection" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Framework\ExtendableComponentInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\AgentActivity" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\AgentActivity" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Agents" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Agents" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Branding" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Branding" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Customers" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Customers" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\EmailSettings" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\EmailSettings" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\EmailTemplates" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\EmailTemplates" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Groups" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Groups" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Kudos" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Kudos" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\MicrosoftApps" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\MicrosoftApps" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Privileges" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Privileges" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\SavedReplies" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\SavedReplies" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\SwiftMailer" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\SwiftMailer" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Tags" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Tags" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Teams" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Teams" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\TicketTypes" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\TicketTypes" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Sections\Productivity" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Sections\Productivity" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Sections\Reports" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Sections\Reports" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Sections\Settings" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Sections\Settings" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Sections\Users" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Sections\Users" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Navigation\Home" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Navigation\Home" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\NavigationInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Navigation\Reports" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Navigation\Reports" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\NavigationInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Navigation\Ticket" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Navigation\Ticket" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\NavigationInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Account\Profile" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Account\Profile" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Productivity\SavedReplies" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Productivity\SavedReplies" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Productivity\Tags" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Productivity\Tags" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Productivity\TicketTypes" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Productivity\TicketTypes" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Reports\AgentActivity" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Reports\AgentActivity" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Reports\Kudos" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Reports\Kudos" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Settings\Branding" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Settings\Branding" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Settings\EmailSettings" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Settings\EmailSettings" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Settings\EmailTemplates" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Settings\EmailTemplates" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Settings\MicrosoftApps" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Settings\MicrosoftApps" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Settings\SwiftMailer" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Settings\SwiftMailer" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Themes\Helpdesk" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Themes\Helpdesk" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Users\Agents" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Users\Agents" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Users\Customers" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Users\Customers" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Users\Groups" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Users\Groups" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Users\Privileges" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Users\Privileges" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Users\Teams" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Users\Teams" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Account" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Account" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Apps" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Apps" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Branding" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Branding" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Productivity" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Productivity" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Reports" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Reports" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Settings" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Settings" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Users" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Users" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\AgentActivity" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\AgentActivity" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Agents" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Agents" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Apps" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Apps" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Branding" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Branding" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\EmailSettings" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\EmailSettings" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\EmailTemplates" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\EmailTemplates" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Groups" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Groups" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Kudos" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Kudos" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Privileges" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Privileges" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\SavedReplies" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\SavedReplies" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Tags" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Tags" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Teams" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Teams" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\TicketTypes" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\TicketTypes" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Tickets" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Tickets" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Ticket\QuickActionButtons\SavedReplies" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Ticket\QuickActionButtons\SavedReplies" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Tickets\QuickActionButtonInterface"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\UVDeskCoreFrameworkBundle" class="Webkul\UVDesk\CoreFrameworkBundle\UVDeskCoreFrameworkBundle" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Utils\HTMLFilter" class="Webkul\UVDesk\CoreFrameworkBundle\Utils\HTMLFilter" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Utils\Microsoft\Graph\Me" class="Webkul\UVDesk\CoreFrameworkBundle\Utils\Microsoft\Graph\Me" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Utils\SwiftMailer\Configuration\Gmail" class="Webkul\UVDesk\CoreFrameworkBundle\Utils\SwiftMailer\Configuration\Gmail" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Utils\SwiftMailer\Configuration\SMTP" class="Webkul\UVDesk\CoreFrameworkBundle\Utils\SwiftMailer\Configuration\SMTP" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Utils\SwiftMailer\Configuration\Yahoo" class="Webkul\UVDesk\CoreFrameworkBundle\Utils\SwiftMailer\Configuration\Yahoo" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Utils\TokenGenerator" class="Webkul\UVDesk\CoreFrameworkBundle\Utils\TokenGenerator" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Agent\MailAgent" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Agent\MailAgent">
      <tag name="uvdesk.automations.workflow.actions"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Agent\TransferTickets" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Agent\TransferTickets">
      <tag name="uvdesk.automations.workflow.actions"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Customer\MailCustomer" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Customer\MailCustomer">
      <tag name="uvdesk.automations.workflow.actions"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\AddNote" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\AddNote">
      <tag name="uvdesk.automations.workflow.actions"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\MailAgent" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\MailAgent">
      <tag name="uvdesk.automations.workflow.actions"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\MailCustomer" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\MailCustomer">
      <tag name="uvdesk.automations.workflow.actions"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\MailGroup" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\MailGroup">
      <tag name="uvdesk.automations.workflow.actions"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\MailLastCollaborator" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\MailLastCollaborator">
      <tag name="uvdesk.automations.workflow.actions"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\MailTeam" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\MailTeam">
      <tag name="uvdesk.automations.workflow.actions"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\MarkSpam" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\MarkSpam">
      <tag name="uvdesk.automations.workflow.actions"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\RoundRobinTicketAssignment" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\RoundRobinTicketAssignment">
      <tag name="uvdesk.automations.workflow.actions"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\UpdateAgent" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\UpdateAgent">
      <tag name="uvdesk.automations.workflow.actions"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\UpdateGroup" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\UpdateGroup">
      <tag name="uvdesk.automations.workflow.actions"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\UpdateLabel" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\UpdateLabel">
      <tag name="uvdesk.automations.workflow.actions"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\UpdatePriority" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\UpdatePriority">
      <tag name="uvdesk.automations.workflow.actions"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\UpdateStatus" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\UpdateStatus">
      <tag name="uvdesk.automations.workflow.actions"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\UpdateTag" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\UpdateTag">
      <tag name="uvdesk.automations.workflow.actions"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\UpdateTeam" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\UpdateTeam">
      <tag name="uvdesk.automations.workflow.actions"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\UpdateType" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\UpdateType">
      <tag name="uvdesk.automations.workflow.actions"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\User\MailUser" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\User\MailUser">
      <tag name="uvdesk.automations.workflow.actions"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Agent\Create" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Agent\Create">
      <tag name="uvdesk.automations.workflow.events"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Agent\Delete" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Agent\Delete">
      <tag name="uvdesk.automations.workflow.events"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Agent\ForgotPassword" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Agent\ForgotPassword">
      <tag name="uvdesk.automations.workflow.events"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Agent\Update" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Agent\Update">
      <tag name="uvdesk.automations.workflow.events"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Customer\Create" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Customer\Create">
      <tag name="uvdesk.automations.workflow.events"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Customer\Delete" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Customer\Delete">
      <tag name="uvdesk.automations.workflow.events"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Customer\ForgotPassword" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Customer\ForgotPassword">
      <tag name="uvdesk.automations.workflow.events"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Customer\Update" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Customer\Update">
      <tag name="uvdesk.automations.workflow.events"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\Agent" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\Agent">
      <tag name="uvdesk.automations.workflow.events"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\AgentReply" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\AgentReply">
      <tag name="uvdesk.automations.workflow.events"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\Collaborator" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\Collaborator">
      <tag name="uvdesk.automations.workflow.events"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\CollaboratorReply" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\CollaboratorReply">
      <tag name="uvdesk.automations.workflow.events"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\Create" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\Create">
      <tag name="uvdesk.automations.workflow.events"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\CustomerReply" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\CustomerReply">
      <tag name="uvdesk.automations.workflow.events"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\Delete" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\Delete">
      <tag name="uvdesk.automations.workflow.events"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\Group" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\Group">
      <tag name="uvdesk.automations.workflow.events"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\Note" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\Note">
      <tag name="uvdesk.automations.workflow.events"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\Priority" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\Priority">
      <tag name="uvdesk.automations.workflow.events"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\Status" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\Status">
      <tag name="uvdesk.automations.workflow.events"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\Team" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\Team">
      <tag name="uvdesk.automations.workflow.events"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\ThreadUpdate" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\ThreadUpdate">
      <tag name="uvdesk.automations.workflow.events"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\Type" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\Type">
      <tag name="uvdesk.automations.workflow.events"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\User\ForgotPassword" class="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\User\ForgotPassword">
      <tag name="uvdesk.automations.workflow.events"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\AutomationBundle\Controller\Automations\PreparedResponse" class="Webkul\UVDesk\AutomationBundle\Controller\Automations\PreparedResponse" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      <argument type="service" id="translator.data_collector"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\AutomationBundle\Controller\Automations\PreparedResponse"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\AutomationBundle\Controller\Automations\PreparedResponseXHR" class="Webkul\UVDesk\AutomationBundle\Controller\Automations\PreparedResponseXHR" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      <argument type="service" id="Webkul\UVDesk\AutomationBundle\EventListener\PreparedResponseListener"/>
      <argument type="service" id="translator.data_collector"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\AutomationBundle\Controller\Automations\PreparedResponseXHR"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\AutomationBundle\Controller\Automations\Workflow" class="Webkul\UVDesk\AutomationBundle\Controller\Automations\Workflow" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      <argument type="service" id="Webkul\UVDesk\AutomationBundle\EventListener\WorkflowListener"/>
      <argument type="service" id="translator.data_collector"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\AutomationBundle\Controller\Automations\Workflow"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\AutomationBundle\Controller\Automations\WorkflowXHR" class="Webkul\UVDesk\AutomationBundle\Controller\Automations\WorkflowXHR" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      <argument type="service" id="Webkul\UVDesk\AutomationBundle\EventListener\WorkflowListener"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\TicketService"/>
      <argument type="service" id="translator.data_collector"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\AutomationBundle\Controller\Automations\WorkflowXHR"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\AutomationBundle\Event\ActivityEvent" class="Webkul\UVDesk\AutomationBundle\Event\ActivityEvent" autowire="true" autoconfigure="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Webkul\UVDesk\AutomationBundle\EventListener\PreparedResponseListener" class="Webkul\UVDesk\AutomationBundle\EventListener\PreparedResponseListener" autowire="true" autoconfigure="true">
      <tag name="kernel.event_listener" event="uvdesk.automation.prepared_response.execute" method="executePreparedResponse"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="registerPreparedResponseAction">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Agent\MailAgent"/>
      </call>
      <call method="registerPreparedResponseAction">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Agent\TransferTickets"/>
      </call>
      <call method="registerPreparedResponseAction">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Customer\MailCustomer"/>
      </call>
      <call method="registerPreparedResponseAction">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\AddNote"/>
      </call>
      <call method="registerPreparedResponseAction">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\Delete"/>
      </call>
      <call method="registerPreparedResponseAction">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\MailAgent"/>
      </call>
      <call method="registerPreparedResponseAction">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\MailCustomer"/>
      </call>
      <call method="registerPreparedResponseAction">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\MailGroup"/>
      </call>
      <call method="registerPreparedResponseAction">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\MailLastCollaborator"/>
      </call>
      <call method="registerPreparedResponseAction">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\MailTeam"/>
      </call>
      <call method="registerPreparedResponseAction">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\MarkSpam"/>
      </call>
      <call method="registerPreparedResponseAction">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\UpdateAgent"/>
      </call>
      <call method="registerPreparedResponseAction">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\UpdateGroup"/>
      </call>
      <call method="registerPreparedResponseAction">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\UpdatePriority"/>
      </call>
      <call method="registerPreparedResponseAction">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\UpdateStatus"/>
      </call>
      <call method="registerPreparedResponseAction">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\UpdateTag"/>
      </call>
      <call method="registerPreparedResponseAction">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\UpdateTeam"/>
      </call>
      <call method="registerPreparedResponseAction">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\UpdateType"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\AutomationBundle\EventListener\WorkflowListener" class="Webkul\UVDesk\AutomationBundle\EventListener\WorkflowListener" autowire="true" autoconfigure="true">
      <tag name="kernel.event_listener" event="uvdesk.automation.workflow.execute" method="executeWorkflow"/>
      <tag name="kernel.event_listener" event="uvdesk.automation.report_app.workflow.execute" method="executeReplyEvent"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\TicketService"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      <call method="registerWorkflowEvent">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Agent\Create"/>
      </call>
      <call method="registerWorkflowEvent">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Agent\Delete"/>
      </call>
      <call method="registerWorkflowEvent">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Agent\ForgotPassword"/>
      </call>
      <call method="registerWorkflowEvent">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Agent\Update"/>
      </call>
      <call method="registerWorkflowEvent">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Customer\Create"/>
      </call>
      <call method="registerWorkflowEvent">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Customer\Delete"/>
      </call>
      <call method="registerWorkflowEvent">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Customer\ForgotPassword"/>
      </call>
      <call method="registerWorkflowEvent">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Customer\Update"/>
      </call>
      <call method="registerWorkflowEvent">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\Agent"/>
      </call>
      <call method="registerWorkflowEvent">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\AgentReply"/>
      </call>
      <call method="registerWorkflowEvent">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\Collaborator"/>
      </call>
      <call method="registerWorkflowEvent">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\CollaboratorReply"/>
      </call>
      <call method="registerWorkflowEvent">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\Create"/>
      </call>
      <call method="registerWorkflowEvent">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\CustomerReply"/>
      </call>
      <call method="registerWorkflowEvent">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\Delete"/>
      </call>
      <call method="registerWorkflowEvent">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\Group"/>
      </call>
      <call method="registerWorkflowEvent">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\Note"/>
      </call>
      <call method="registerWorkflowEvent">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\Priority"/>
      </call>
      <call method="registerWorkflowEvent">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\Status"/>
      </call>
      <call method="registerWorkflowEvent">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\Team"/>
      </call>
      <call method="registerWorkflowEvent">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\ThreadUpdate"/>
      </call>
      <call method="registerWorkflowEvent">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\Ticket\Type"/>
      </call>
      <call method="registerWorkflowEvent">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Events\User\ForgotPassword"/>
      </call>
      <call method="registerWorkflowEvent">
        <argument type="service" id="Webkul\UVDesk\MailboxBundle\Workflow\Events\Email\EmailRecieved"/>
      </call>
      <call method="registerWorkflowAction">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Agent\MailAgent"/>
      </call>
      <call method="registerWorkflowAction">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Agent\TransferTickets"/>
      </call>
      <call method="registerWorkflowAction">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Customer\MailCustomer"/>
      </call>
      <call method="registerWorkflowAction">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\AddNote"/>
      </call>
      <call method="registerWorkflowAction">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\MailAgent"/>
      </call>
      <call method="registerWorkflowAction">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\MailCustomer"/>
      </call>
      <call method="registerWorkflowAction">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\MailGroup"/>
      </call>
      <call method="registerWorkflowAction">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\MailLastCollaborator"/>
      </call>
      <call method="registerWorkflowAction">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\MailTeam"/>
      </call>
      <call method="registerWorkflowAction">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\MarkSpam"/>
      </call>
      <call method="registerWorkflowAction">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\RoundRobinTicketAssignment"/>
      </call>
      <call method="registerWorkflowAction">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\UpdateAgent"/>
      </call>
      <call method="registerWorkflowAction">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\UpdateGroup"/>
      </call>
      <call method="registerWorkflowAction">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\UpdateLabel"/>
      </call>
      <call method="registerWorkflowAction">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\UpdatePriority"/>
      </call>
      <call method="registerWorkflowAction">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\UpdateStatus"/>
      </call>
      <call method="registerWorkflowAction">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\UpdateTag"/>
      </call>
      <call method="registerWorkflowAction">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\UpdateTeam"/>
      </call>
      <call method="registerWorkflowAction">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\Ticket\UpdateType"/>
      </call>
      <call method="registerWorkflowAction">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Workflow\Actions\User\MailUser"/>
      </call>
      <call method="registerWorkflowAction">
        <argument type="service" id="Webkul\UVDesk\MailboxBundle\Workflow\Actions\Email\FromEmail"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\AutomationBundle\Fixtures\AutomationWorkflowFixtures" class="Webkul\UVDesk\AutomationBundle\Fixtures\AutomationWorkflowFixtures" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="Webkul\UVDesk\AutomationBundle\Form\DefaultForm" class="Webkul\UVDesk\AutomationBundle\Form\DefaultForm" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Webkul\UVDesk\AutomationBundle\Repository\PreparedResponsesRepository" class="Webkul\UVDesk\AutomationBundle\Repository\PreparedResponsesRepository" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\AutomationBundle\Repository\WorkflowEventsRepository" class="Webkul\UVDesk\AutomationBundle\Repository\WorkflowEventsRepository" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\AutomationBundle\Repository\WorkflowRepository" class="Webkul\UVDesk\AutomationBundle\Repository\WorkflowRepository" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\AutomationBundle\Routing\RoutingResource" class="Webkul\UVDesk\AutomationBundle\Routing\RoutingResource" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Definition\RoutingResourceInterface"/>
    </service>
    <service id="Webkul\UVDesk\AutomationBundle\Services\AutomationService" class="Webkul\UVDesk\AutomationBundle\Services\AutomationService" autowire="true" autoconfigure="true">
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Homepage\Items\PreparedResponses" class="Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Homepage\Items\PreparedResponses" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Homepage\Items\Workflows" class="Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Homepage\Items\Workflows" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Panel\Items\Productivity\PreparedResponses" class="Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Panel\Items\Productivity\PreparedResponses" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Panel\Items\Productivity\Workflows" class="Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Panel\Items\Productivity\Workflows" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Search\PreparedResponses" class="Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Search\PreparedResponses" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Search\Workflows" class="Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Search\Workflows" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\AutomationBundle\UIComponents\Ticket\QuickActionButtons\PreparedResponses" class="Webkul\UVDesk\AutomationBundle\UIComponents\Ticket\QuickActionButtons\PreparedResponses" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Tickets\QuickActionButtonInterface"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="Webkul\UVDesk\AutomationBundle\UVDeskAutomationBundle" class="Webkul\UVDesk\AutomationBundle\UVDeskAutomationBundle" autowire="true" autoconfigure="true"/>
    <service id="uvdesk.automations" class="Webkul\UVDesk\AutomationBundle\Services\AutomationService" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="Webkul\UVDesk\ExtensionFrameworkBundle\Application\Routine\ApiRoutine" class="Webkul\UVDesk\ExtensionFrameworkBundle\Application\Routine\ApiRoutine" autowire="true" autoconfigure="true">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="Webkul\UVDesk\ExtensionFrameworkBundle\Application\Routine\RenderDashboardRoutine" class="Webkul\UVDesk\ExtensionFrameworkBundle\Application\Routine\RenderDashboardRoutine" autowire="true" autoconfigure="true">
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\DashboardTemplate"/>
    </service>
    <service id="Webkul\UVDesk\ExtensionFrameworkBundle\Configurators\Configurator" class="Webkul\UVDesk\ExtensionFrameworkBundle\Configurators\Configurator" autowire="true" autoconfigure="true">
      <argument type="service" id="service_container"/>
      <argument type="service" id="Webkul\UVDesk\ExtensionFrameworkBundle\Definition\MappingResource"/>
      <call method="autoconfigure"/>
    </service>
    <service id="Webkul\UVDesk\ExtensionFrameworkBundle\Console\BuildExtensions" class="Webkul\UVDesk\ExtensionFrameworkBundle\Console\BuildExtensions" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="Webkul\UVDesk\ExtensionFrameworkBundle\Controller\Application" class="Webkul\UVDesk\ExtensionFrameworkBundle\Controller\Application" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\ExtensionFrameworkBundle\Controller\Application"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\ExtensionFrameworkBundle\Controller\Dashboard" class="Webkul\UVDesk\ExtensionFrameworkBundle\Controller\Dashboard" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\ExtensionFrameworkBundle\Controller\Dashboard"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\ExtensionFrameworkBundle\Definition\MappingResource" class="Webkul\UVDesk\ExtensionFrameworkBundle\Definition\MappingResource" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\ExtensionFrameworkBundle\Definition\Package\PackageMetadata" class="Webkul\UVDesk\ExtensionFrameworkBundle\Definition\Package\PackageMetadata" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\ExtensionFrameworkBundle\Definition\PackageManager" class="Webkul\UVDesk\ExtensionFrameworkBundle\Definition\PackageManager" autowire="true" autoconfigure="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Webkul\UVDesk\ExtensionFrameworkBundle\Definition\RouteLoader" class="Webkul\UVDesk\ExtensionFrameworkBundle\Definition\RouteLoader" autowire="true" autoconfigure="true">
      <tag name="routing.loader"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="Webkul\UVDesk\ExtensionFrameworkBundle\EventListener\Console" class="Webkul\UVDesk\ExtensionFrameworkBundle\EventListener\Console" autowire="true" autoconfigure="true">
      <tag name="kernel.event_listener" event="console.command"/>
      <tag name="kernel.event_listener" event="console.terminate"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="Webkul\UVDesk\ExtensionFrameworkBundle\Definition\MappingResource"/>
    </service>
    <service id="Webkul\UVDesk\ExtensionFrameworkBundle\EventListener\Kernel" class="Webkul\UVDesk\ExtensionFrameworkBundle\EventListener\Kernel" autowire="true" autoconfigure="true">
      <tag name="kernel.event_listener" event="kernel.request"/>
      <tag name="kernel.event_listener" event="kernel.controller_arguments"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="Webkul\UVDesk\ExtensionFrameworkBundle\Definition\MappingResource"/>
    </service>
    <service id="Webkul\UVDesk\ExtensionFrameworkBundle\Routing\RoutingResource" class="Webkul\UVDesk\ExtensionFrameworkBundle\Routing\RoutingResource" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Definition\RoutingResourceInterface"/>
    </service>
    <service id="Webkul\UVDesk\ExtensionFrameworkBundle\UIComponents\Dashboard\Homepage\Items\ExploreApps" class="Webkul\UVDesk\ExtensionFrameworkBundle\UIComponents\Dashboard\Homepage\Items\ExploreApps" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\ExtensionFrameworkBundle\UIComponents\Dashboard\Homepage\Sections\Apps" class="Webkul\UVDesk\ExtensionFrameworkBundle\UIComponents\Dashboard\Homepage\Sections\Apps" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionInterface"/>
    </service>
    <service id="Webkul\UVDesk\ExtensionFrameworkBundle\UIComponents\Dashboard\Navigation\Apps" class="Webkul\UVDesk\ExtensionFrameworkBundle\UIComponents\Dashboard\Navigation\Apps" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\NavigationInterface"/>
    </service>
    <service id="Webkul\UVDesk\ExtensionFrameworkBundle\UIComponents\Dashboard\Search\Apps" class="Webkul\UVDesk\ExtensionFrameworkBundle\UIComponents\Dashboard\Search\Apps" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\ExtensionFrameworkBundle\UVDeskExtensionFrameworkBundle" class="Webkul\UVDesk\ExtensionFrameworkBundle\UVDeskExtensionFrameworkBundle" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\ExtensionFrameworkBundle\Utils\ApplicationCollection" class="Webkul\UVDesk\ExtensionFrameworkBundle\Utils\ApplicationCollection" lazy="true" autowire="true" autoconfigure="true">
      <argument type="service" id="service_container"/>
      <argument type="service" id="Webkul\UVDesk\ExtensionFrameworkBundle\Definition\MappingResource"/>
      <argument type="service" id="Webkul\UVDesk\ExtensionFrameworkBundle\Utils\PackageCollection"/>
      <call method="organizeCollection"/>
    </service>
    <service id="Webkul\UVDesk\ExtensionFrameworkBundle\Utils\PackageCollection" class="Webkul\UVDesk\ExtensionFrameworkBundle\Utils\PackageCollection" lazy="true" autowire="true" autoconfigure="true">
      <argument type="service" id="service_container"/>
      <argument type="service" id="Webkul\UVDesk\ExtensionFrameworkBundle\Definition\MappingResource"/>
      <call method="organizeCollection"/>
    </service>
    <service id="Webkul\UVDesk\MailboxBundle\Console\RefreshMailboxCommand" class="Webkul\UVDesk\MailboxBundle\Console\RefreshMailboxCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\MicrosoftIntegration"/>
      <argument type="service" id="Webkul\UVDesk\MailboxBundle\Services\MailboxService"/>
    </service>
    <service id="Webkul\UVDesk\MailboxBundle\Controller\MailboxChannel" class="Webkul\UVDesk\MailboxBundle\Controller\MailboxChannel" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\MailboxBundle\Controller\MailboxChannel"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\MailboxBundle\Controller\MailboxChannelXHR" class="Webkul\UVDesk\MailboxBundle\Controller\MailboxChannelXHR" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="Webkul\UVDesk\MailboxBundle\Services\MailboxService"/>
      <argument type="service" id="translator.data_collector"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\MailboxBundle\Controller\MailboxChannelXHR"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\MailboxBundle\EventListener\Mailer" class="Webkul\UVDesk\MailboxBundle\EventListener\Mailer" autowire="true" autoconfigure="true">
      <argument type="service" id="Webkul\UVDesk\MailboxBundle\Services\MailboxService"/>
    </service>
    <service id="Webkul\UVDesk\MailboxBundle\EventListener\Swiftmailer" class="Webkul\UVDesk\MailboxBundle\EventListener\Swiftmailer" autowire="true" autoconfigure="true">
      <tag name="uvdesk.event_listener" event="swiftmailer.configuration.updated" method="onSwiftMailerConfigurationUpdated"/>
      <tag name="uvdesk.event_listener" event="swiftmailer.configuration.removed" method="onSwiftMailerConfigurationRemoved"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\SwiftMailer\SwiftMailer"/>
      <argument type="service" id="Webkul\UVDesk\MailboxBundle\Services\MailboxService"/>
    </service>
    <service id="Webkul\UVDesk\MailboxBundle\Routing\RoutingResource" class="Webkul\UVDesk\MailboxBundle\Routing\RoutingResource" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Definition\RoutingResourceInterface"/>
    </service>
    <service id="Webkul\UVDesk\MailboxBundle\Services\MailboxService" class="Webkul\UVDesk\MailboxBundle\Services\MailboxService" autowire="true" autoconfigure="true">
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\SwiftMailer\SwiftMailer"/>
    </service>
    <service id="Webkul\UVDesk\MailboxBundle\UIComponents\Dashboard\Homepage\Items\Mailbox" class="Webkul\UVDesk\MailboxBundle\UIComponents\Dashboard\Homepage\Items\Mailbox" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\MailboxBundle\UIComponents\Dashboard\Panel\Items\Settings\Mailboxes" class="Webkul\UVDesk\MailboxBundle\UIComponents\Dashboard\Panel\Items\Settings\Mailboxes" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\MailboxBundle\UIComponents\Dashboard\Search\Mailbox" class="Webkul\UVDesk\MailboxBundle\UIComponents\Dashboard\Search\Mailbox" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\MailboxBundle\UIComponents\Dashboard\Search\SwiftMailer" class="Webkul\UVDesk\MailboxBundle\UIComponents\Dashboard\Search\SwiftMailer" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\MailboxBundle\UVDeskMailboxBundle" class="Webkul\UVDesk\MailboxBundle\UVDeskMailboxBundle" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\MailboxBundle\Utils\IMAP\Transport\Type\Gmail" class="Webkul\UVDesk\MailboxBundle\Utils\IMAP\Transport\Type\Gmail" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\MailboxBundle\Utils\IMAP\Transport\Type\IMAP" class="Webkul\UVDesk\MailboxBundle\Utils\IMAP\Transport\Type\IMAP" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\MailboxBundle\Utils\IMAP\Transport\Type\Outlook" class="Webkul\UVDesk\MailboxBundle\Utils\IMAP\Transport\Type\Outlook" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\MailboxBundle\Utils\IMAP\Transport\Type\OutlookModernAuth" class="Webkul\UVDesk\MailboxBundle\Utils\IMAP\Transport\Type\OutlookModernAuth" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\MailboxBundle\Utils\IMAP\Transport\Type\Webhook" class="Webkul\UVDesk\MailboxBundle\Utils\IMAP\Transport\Type\Webhook" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\MailboxBundle\Utils\IMAP\Transport\Type\Yahoo" class="Webkul\UVDesk\MailboxBundle\Utils\IMAP\Transport\Type\Yahoo" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\MailboxBundle\Utils\Imap\Transport\Custom" class="Webkul\UVDesk\MailboxBundle\Utils\Imap\Transport\Custom" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\MailboxBundle\Utils\Imap\Transport\Gmail" class="Webkul\UVDesk\MailboxBundle\Utils\Imap\Transport\Gmail" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\MailboxBundle\Utils\Imap\Transport\Yahoo" class="Webkul\UVDesk\MailboxBundle\Utils\Imap\Transport\Yahoo" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\MailboxBundle\Utils\Mailbox\Mailbox" class="Webkul\UVDesk\MailboxBundle\Utils\Mailbox\Mailbox" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\MailboxBundle\Utils\MailboxConfiguration" class="Webkul\UVDesk\MailboxBundle\Utils\MailboxConfiguration" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\MailboxBundle\Utils\SMTP\Transport\Type\Gmail" class="Webkul\UVDesk\MailboxBundle\Utils\SMTP\Transport\Type\Gmail" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\MailboxBundle\Utils\SMTP\Transport\Type\Outlook" class="Webkul\UVDesk\MailboxBundle\Utils\SMTP\Transport\Type\Outlook" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\MailboxBundle\Utils\SMTP\Transport\Type\OutlookModernAuth" class="Webkul\UVDesk\MailboxBundle\Utils\SMTP\Transport\Type\OutlookModernAuth" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\MailboxBundle\Utils\SMTP\Transport\Type\SMTP" class="Webkul\UVDesk\MailboxBundle\Utils\SMTP\Transport\Type\SMTP" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\MailboxBundle\Utils\SMTP\Transport\Type\Yahoo" class="Webkul\UVDesk\MailboxBundle\Utils\SMTP\Transport\Type\Yahoo" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\MailboxBundle\Workflow\Actions\Email\FromEmail" class="Webkul\UVDesk\MailboxBundle\Workflow\Actions\Email\FromEmail">
      <tag name="uvdesk.automations.workflow.actions"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\MailboxBundle\Workflow\Events\Email\EmailRecieved" class="Webkul\UVDesk\MailboxBundle\Workflow\Events\Email\EmailRecieved">
      <tag name="uvdesk.automations.workflow.events"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="uvdesk.mailbox" class="Webkul\UVDesk\MailboxBundle\Services\MailboxService" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\SwiftMailer\SwiftMailer"/>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\Controller\Announcement" class="Webkul\UVDesk\SupportCenterBundle\Controller\Announcement" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\SupportCenterBundle\Controller\Announcement"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\Controller\Article" class="Webkul\UVDesk\SupportCenterBundle\Controller\Article" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UVDeskService"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="translator.data_collector"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\SupportCenterBundle\Controller\Article"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\Controller\Branding" class="Webkul\UVDesk\SupportCenterBundle\Controller\Branding" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\FileSystem\FileSystem"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UVDeskService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\SupportCenterBundle\Controller\Branding"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\Controller\Category" class="Webkul\UVDesk\SupportCenterBundle\Controller\Category" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      <argument type="service" id="translator.data_collector"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\SupportCenterBundle\Controller\Category"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\Controller\Customer" class="Webkul\UVDesk\SupportCenterBundle\Controller\Customer" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\FileSystem\FileSystem"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\FileUploadService"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\EmailService"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UVDeskService"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Providers\UserProvider"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\SupportCenterBundle\Controller\Customer"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\Controller\Folder" class="Webkul\UVDesk\SupportCenterBundle\Controller\Folder" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\FileSystem\FileSystem"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\FileUploadService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\SupportCenterBundle\Controller\Folder"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\Controller\KnowledgebaseXHR" class="Webkul\UVDesk\SupportCenterBundle\Controller\KnowledgebaseXHR" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      <argument type="service" id="translator.data_collector"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\SupportCenterBundle\Controller\KnowledgebaseXHR"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\Controller\MarketingModule" class="Webkul\UVDesk\SupportCenterBundle\Controller\MarketingModule" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\FileUploadService"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UVDeskService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\SupportCenterBundle\Controller\MarketingModule"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\Controller\Ticket" class="Webkul\UVDesk\SupportCenterBundle\Controller\Ticket" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UVDeskService"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\TicketService"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\ReCaptchaService"/>
      <argument type="service" id="kernel"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\SupportCenterBundle\Controller\Ticket"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\Controller\Website" class="Webkul\UVDesk\SupportCenterBundle\Controller\Website" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="service_container"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\SupportCenterBundle\Controller\Website"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\Fixtures\EmailTemplates" class="Webkul\UVDesk\SupportCenterBundle\Fixtures\EmailTemplates" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\Fixtures\KnowledgebaseWebsite" class="Webkul\UVDesk\SupportCenterBundle\Fixtures\KnowledgebaseWebsite" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\Form\AccountValidation" class="Webkul\UVDesk\SupportCenterBundle\Form\AccountValidation" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\Form\ForgotPassword" class="Webkul\UVDesk\SupportCenterBundle\Form\ForgotPassword" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\Form\SolutionModal" class="Webkul\UVDesk\SupportCenterBundle\Form\SolutionModal" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\Form\Ticket" class="Webkul\UVDesk\SupportCenterBundle\Form\Ticket" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\Repository\AnnouncementRepository" class="Webkul\UVDesk\SupportCenterBundle\Repository\AnnouncementRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\Repository\Article" class="Webkul\UVDesk\SupportCenterBundle\Repository\Article" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\SupportCenterBundle\Repository\MarketingModuleRepository" class="Webkul\UVDesk\SupportCenterBundle\Repository\MarketingModuleRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\Repository\SolutionCategory" class="Webkul\UVDesk\SupportCenterBundle\Repository\SolutionCategory" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\SupportCenterBundle\Repository\Solutions" class="Webkul\UVDesk\SupportCenterBundle\Repository\Solutions" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\SupportCenterBundle\Routing\RoutingResource" class="Webkul\UVDesk\SupportCenterBundle\Routing\RoutingResource" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Definition\RoutingResourceInterface"/>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\Announcement" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\Announcement" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\Articles" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\Articles" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\Categories" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\Categories" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\Folders" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\Folders" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\MarketingModule" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\MarketingModule" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\SpamSettings" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\SpamSettings" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Sections\Knowledgebase" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Sections\Knowledgebase" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionInterface"/>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Navigation\Knowledgebase" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Navigation\Knowledgebase" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\NavigationInterface"/>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Knowledgebase\Announcement" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Knowledgebase\Announcement" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Knowledgebase\Articles" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Knowledgebase\Articles" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Knowledgebase\Categories" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Knowledgebase\Categories" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Knowledgebase\Folders" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Knowledgebase\Folders" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Knowledgebase\MarketingModule" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Knowledgebase\MarketingModule" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Settings\BlockSpam" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Settings\BlockSpam" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Themes\SupportCenter" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Themes\SupportCenter" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Sidebars\Knowledgebase" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Sidebars\Knowledgebase" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarInterface"/>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\Announcement" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\Announcement" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\Articles" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\Articles" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\Categories" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\Categories" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\Customers" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\Customers" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\Folders" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\Folders" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\MarketingModule" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\MarketingModule" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\SpamSettings" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\SpamSettings" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\SupportCenterBundle\UVDeskSupportCenterBundle" class="Webkul\UVDesk\SupportCenterBundle\UVDeskSupportCenterBundle" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\ApiBundle\API\Agents" class="Webkul\UVDesk\ApiBundle\API\Agents" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\ApiBundle\API\Agents"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\ApiBundle\API\Customers" class="Webkul\UVDesk\ApiBundle\API\Customers" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\ApiBundle\API\Customers"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\ApiBundle\API\Group" class="Webkul\UVDesk\ApiBundle\API\Group" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\ApiBundle\API\Group"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\ApiBundle\API\Me" class="Webkul\UVDesk\ApiBundle\API\Me" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\ApiBundle\API\Me"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\ApiBundle\API\Sessions" class="Webkul\UVDesk\ApiBundle\API\Sessions" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\ApiBundle\API\Sessions"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\ApiBundle\API\Team" class="Webkul\UVDesk\ApiBundle\API\Team" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\ApiBundle\API\Team"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\ApiBundle\API\Threads" class="Webkul\UVDesk\ApiBundle\API\Threads" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\ApiBundle\API\Threads"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\ApiBundle\API\TicketTypes" class="Webkul\UVDesk\ApiBundle\API\TicketTypes" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\ApiBundle\API\TicketTypes"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\ApiBundle\API\Tickets" class="Webkul\UVDesk\ApiBundle\API\Tickets" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\ApiBundle\API\Tickets"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\ApiBundle\Controller\ApiSettings" class="Webkul\UVDesk\ApiBundle\Controller\ApiSettings" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.Webkul\UVDesk\ApiBundle\Controller\ApiSettings"/>
      </call>
    </service>
    <service id="Webkul\UVDesk\ApiBundle\Entity\ApiAccessCredential" class="Webkul\UVDesk\ApiBundle\Entity\ApiAccessCredential" autowire="true" autoconfigure="true"/>
    <service id="Webkul\UVDesk\ApiBundle\EventListeners\API\KernelException" class="Webkul\UVDesk\ApiBundle\EventListeners\API\KernelException" autowire="true" autoconfigure="true">
      <tag name="kernel.event_listener" event="kernel.exception"/>
      <argument type="service" id="security.firewall.map"/>
    </service>
    <service id="Webkul\UVDesk\ApiBundle\EventListeners\API\KernelRequest" class="Webkul\UVDesk\ApiBundle\EventListeners\API\KernelRequest" autowire="true" autoconfigure="true">
      <tag name="kernel.event_listener" event="kernel.request"/>
      <tag name="kernel.event_listener" event="kernel.response"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.firewall.map"/>
    </service>
    <service id="Webkul\UVDesk\ApiBundle\Providers\ApiCredentials" class="Webkul\UVDesk\ApiBundle\Providers\ApiCredentials" autowire="true" autoconfigure="true">
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Webkul\UVDesk\ApiBundle\Repository\ApiAccessCredentialRepository" class="Webkul\UVDesk\ApiBundle\Repository\ApiAccessCredentialRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Webkul\UVDesk\ApiBundle\Routing\RoutingResource" class="Webkul\UVDesk\ApiBundle\Routing\RoutingResource" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Definition\RoutingResourceInterface"/>
    </service>
    <service id="Webkul\UVDesk\ApiBundle\Security\Guards\APIGuard" class="Webkul\UVDesk\ApiBundle\Security\Guards\APIGuard" autowire="true" autoconfigure="true">
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
    </service>
    <service id="Webkul\UVDesk\ApiBundle\UIComponents\Dashboard\Homepage\Items\ApiSettings" class="Webkul\UVDesk\ApiBundle\UIComponents\Dashboard\Homepage\Items\ApiSettings" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\ApiBundle\UIComponents\Dashboard\Panel\Items\Settings\ApiSettings" class="Webkul\UVDesk\ApiBundle\UIComponents\Dashboard\Panel\Items\Settings\ApiSettings" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\ApiBundle\UIComponents\Dashboard\Search\ApiSettings" class="Webkul\UVDesk\ApiBundle\UIComponents\Dashboard\Search\ApiSettings" autowire="true" autoconfigure="true">
      <tag name="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface"/>
    </service>
    <service id="Webkul\UVDesk\ApiBundle\UVDeskApiBundle" class="Webkul\UVDesk\ApiBundle\UVDeskApiBundle" autowire="true" autoconfigure="true"/>
    <service id="argument_metadata_factory" class="Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory"/>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>UTF-8</argument>
      <argument>false</argument>
    </service>
    <service id="streamed_response_listener" class="Symfony\Component\HttpKernel\EventListener\StreamedResponseListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="request_stack"/>
      <argument>en</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
      <argument>false</argument>
      <argument type="collection"/>
    </service>
    <service id="validate_request_listener" class="Symfony\Component\HttpKernel\EventListener\ValidateRequestListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="disallow_search_engine_index_response_listener" class="Symfony\Component\HttpKernel\EventListener\DisallowRobotsIndexingListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="error_controller" class="Symfony\Component\HttpKernel\Controller\ErrorController" public="true">
      <argument type="service" id="http_kernel"/>
      <argument>error_controller</argument>
      <argument type="service" id="error_handler.error_renderer.serializer"/>
    </service>
    <service id="exception_listener" class="Symfony\Component\HttpKernel\EventListener\ErrorListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument>error_controller</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
      <argument>true</argument>
      <argument type="collection"/>
    </service>
    <service id="parameter_bag" class="Symfony\Component\DependencyInjection\ParameterBag\ContainerBag">
      <argument type="service" id="service_container"/>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\HttpKernel" public="true">
      <tag name="container.hot_path"/>
      <tag name="container.preload" class="Symfony\Component\Runtime\Runner\Symfony\HttpKernelRunner"/>
      <tag name="container.preload" class="Symfony\Component\Runtime\Runner\Symfony\ResponseRunner"/>
      <tag name="container.preload" class="Symfony\Component\Runtime\SymfonyRuntime"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="debug.controller_resolver"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="debug.argument_resolver"/>
    </service>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack" public="true"/>
    <service id="http_cache" class="Symfony\Bundle\FrameworkBundle\HttpCache\HttpCache">
      <tag name="container.hot_path"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="http_cache.store"/>
      <argument>null</argument>
      <argument type="collection">
        <argument key="debug">true</argument>
      </argument>
    </service>
    <service id="http_cache.store" class="Symfony\Component\HttpKernel\HttpCache\Store">
      <argument>/home/maksim/Desktop/uvdesk/var/cache/dev/http_cache</argument>
    </service>
    <service id="url_helper" class="Symfony\Component\HttpFoundation\UrlHelper">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.default" on-invalid="ignore"/>
    </service>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate" public="true">
      <tag name="container.no_preload"/>
      <argument type="tagged_iterator" tag="kernel.cache_warmer"/>
      <argument>true</argument>
      <argument>/home/maksim/Desktop/uvdesk/var/cache/dev/App_KernelDevDebugContainerDeprecations.log</argument>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer" public="true">
      <tag name="container.private" package="symfony/framework-bundle" version="5.2"/>
      <argument type="tagged_iterator" tag="kernel.cache_clearer"/>
    </service>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem" public="true">
      <tag name="container.private" package="symfony/framework-bundle" version="5.2"/>
    </service>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator">
      <argument type="service" id="kernel"/>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpKernel\UriSigner">
      <argument>%env(APP_SECRET)%</argument>
    </service>
    <service id="config_cache_factory" class="Symfony\Component\Config\ResourceCheckerConfigCacheFactory">
      <argument type="tagged_iterator" tag="config_cache.resource_checker"/>
    </service>
    <service id="dependency_injection.config.container_parameters_resource_checker" class="Symfony\Component\DependencyInjection\Config\ContainerParametersResourceChecker">
      <tag name="config_cache.resource_checker" priority="-980"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="config.resource.self_checking_resource_checker" class="Symfony\Component\Config\Resource\SelfCheckingResourceChecker">
      <tag name="config_cache.resource_checker" priority="-990"/>
    </service>
    <service id="services_resetter" class="Symfony\Component\HttpKernel\DependencyInjection\ServicesResetter" public="true">
      <argument type="iterator">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="http_client" type="service" id=".debug.http_client" on-invalid="ignore_uninitialized"/>
        <argument key="mailer.message_logger_listener" type="service" id="mailer.message_logger_listener" on-invalid="ignore_uninitialized"/>
        <argument key="debug.stopwatch" type="service" id="debug.stopwatch" on-invalid="ignore_uninitialized"/>
        <argument key="debug.event_dispatcher" type="service" id="debug.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="session_listener" type="service" id="session_listener" on-invalid="ignore_uninitialized"/>
        <argument key="form.choice_list_factory.cached" type="service" id="form.choice_list_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator_expression_language" type="service" id="cache.validator_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="profiler" type="service" id="profiler" on-invalid="ignore_uninitialized"/>
        <argument key="debug.validator" type="service" id="debug.validator" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.entity" type="service" id="form.type.entity" on-invalid="ignore_uninitialized"/>
        <argument key="twig" type="service" id="twig" on-invalid="ignore_uninitialized"/>
        <argument key="twig.form.engine" type="service" id="twig.form.engine" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.main" type="service" id="monolog.handler.main" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.console" type="service" id="monolog.handler.console" on-invalid="ignore_uninitialized"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.firewall" type="service" id="debug.security.firewall" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.email_sender.listener" type="service" id="swiftmailer.email_sender.listener" on-invalid="ignore_uninitialized"/>
        <argument key=".debug.http_client" type="service" id=".debug.http_client" on-invalid="ignore_uninitialized"/>
      </argument>
      <argument type="collection">
        <argument key="cache.app" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.system" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.validator" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.serializer" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.annotations" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.property_info" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="http_client" type="collection">
          <argument>?reset</argument>
        </argument>
        <argument key="mailer.message_logger_listener" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.stopwatch" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.event_dispatcher" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="session_listener" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="form.choice_list_factory.cached" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.validator_expression_language" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="profiler" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.validator" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="doctrine" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="form.type.entity" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="twig" type="collection">
          <argument>resetGlobals</argument>
        </argument>
        <argument key="twig.form.engine" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="monolog.handler.main" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="monolog.handler.console" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="security.token_storage" type="collection">
          <argument>disableUsageTracking</argument>
          <argument>setToken</argument>
        </argument>
        <argument key="cache.security_expression_language" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.security.firewall" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="swiftmailer.email_sender.listener" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key=".debug.http_client" type="collection">
          <argument>reset</argument>
        </argument>
      </argument>
    </service>
    <service id="reverse_container" class="Symfony\Component\DependencyInjection\ReverseContainer">
      <argument type="service" id="service_container"/>
      <argument type="service" id=".service_locator.XXv1IfR"/>
    </service>
    <service id="locale_aware_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleAwareListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="iterator">
        <argument type="service" id="slugger"/>
        <argument type="service" id="translator.default"/>
      </argument>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="container.env_var_processor" class="Symfony\Component\DependencyInjection\EnvVarProcessor">
      <tag name="container.env_var_processor"/>
      <argument type="service" id="service_container"/>
      <argument type="tagged_iterator" tag="container.env_var_loader"/>
    </service>
    <service id="slugger" class="Symfony\Component\String\Slugger\AsciiSlugger">
      <tag name="kernel.locale_aware"/>
      <argument>en</argument>
    </service>
    <service id="container.getenv" class="Closure">
      <tag name="routing.expression_language_function" function="env"/>
      <argument type="collection">
        <argument type="service" id="service_container"/>
        <argument>getEnv</argument>
      </argument>
      <factory class="Closure" method="fromCallable"/>
    </service>
    <service id="container.env" class="Symfony\Component\String\LazyString" abstract="true">
      <argument type="service" id="container.getenv"/>
      <factory class="Symfony\Component\String\LazyString" method="fromCallable"/>
    </service>
    <service id="config_builder.warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ConfigBuilderCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler">
      <argument type="service" id=".service_locator.lLv4pWF"/>
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
    </service>
    <service id="fragment.uri_generator" class="Symfony\Component\HttpKernel\Fragment\FragmentUriGenerator">
      <argument>/_fragment</argument>
      <argument type="service" id="uri_signer"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="inline"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="error_handler.error_renderer.html" class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer">
      <argument type="service">
        <service>
          <argument type="service" id="request_stack"/>
          <argument>true</argument>
          <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="isDebug"/>
        </service>
      </argument>
      <argument>UTF-8</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <argument>/home/maksim/Desktop/uvdesk</argument>
      <argument type="service">
        <service>
          <argument type="service" id="request_stack"/>
          <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="getAndCleanOutputBuffer"/>
        </service>
      </argument>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="console.error_listener" class="Symfony\Component\Console\EventListener\ErrorListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="console"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="monolog.logger.console" on-invalid="null"/>
    </service>
    <service id="console.suggest_missing_package_subscriber" class="Symfony\Bundle\FrameworkBundle\EventListener\SuggestMissingPackageSubscriber">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.no_preload"/>
    </service>
    <service id="console.command.about" class="Symfony\Bundle\FrameworkBundle\Command\AboutCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>about</argument>
      </call>
      <call method="setDescription">
        <argument>Display information about the current project</argument>
      </call>
    </service>
    <service id="console.command.assets_install" class="Symfony\Bundle\FrameworkBundle\Command\AssetsInstallCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="filesystem"/>
      <argument>/home/maksim/Desktop/uvdesk</argument>
      <call method="setName">
        <argument>assets:install</argument>
      </call>
      <call method="setDescription">
        <argument>Install bundle's web assets under a public directory</argument>
      </call>
    </service>
    <service id="console.command.cache_clear" class="Symfony\Bundle\FrameworkBundle\Command\CacheClearCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache_clearer"/>
      <argument type="service" id="filesystem"/>
      <call method="setName">
        <argument>cache:clear</argument>
      </call>
      <call method="setDescription">
        <argument>Clear the cache</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_clear" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolClearCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache.global_clearer"/>
      <argument type="collection">
        <argument>cache.app</argument>
        <argument>cache.system</argument>
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
        <argument>cache.annotations</argument>
        <argument>cache.property_info</argument>
        <argument>cache.validator_expression_language</argument>
        <argument>cache.doctrine.orm.default.result</argument>
        <argument>cache.doctrine.orm.default.query</argument>
        <argument>cache.security_expression_language</argument>
      </argument>
      <call method="setName">
        <argument>cache:pool:clear</argument>
      </call>
      <call method="setDescription">
        <argument>Clear cache pools</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_prune" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolPruneCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="collection"/>
      <call method="setName">
        <argument>cache:pool:prune</argument>
      </call>
      <call method="setDescription">
        <argument>Prune cache pools</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_delete" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolDeleteCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache.global_clearer"/>
      <argument type="collection">
        <argument>cache.app</argument>
        <argument>cache.system</argument>
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
        <argument>cache.annotations</argument>
        <argument>cache.property_info</argument>
        <argument>cache.validator_expression_language</argument>
        <argument>cache.doctrine.orm.default.result</argument>
        <argument>cache.doctrine.orm.default.query</argument>
        <argument>cache.security_expression_language</argument>
      </argument>
      <call method="setName">
        <argument>cache:pool:delete</argument>
      </call>
      <call method="setDescription">
        <argument>Delete an item from a cache pool</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_list" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolListCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="collection">
        <argument>cache.app</argument>
        <argument>cache.system</argument>
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
        <argument>cache.annotations</argument>
        <argument>cache.property_info</argument>
        <argument>cache.validator_expression_language</argument>
        <argument>cache.doctrine.orm.default.result</argument>
        <argument>cache.doctrine.orm.default.query</argument>
        <argument>cache.security_expression_language</argument>
      </argument>
      <call method="setName">
        <argument>cache:pool:list</argument>
      </call>
      <call method="setDescription">
        <argument>List available cache pools</argument>
      </call>
    </service>
    <service id="console.command.cache_warmup" class="Symfony\Bundle\FrameworkBundle\Command\CacheWarmupCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache_warmer"/>
      <call method="setName">
        <argument>cache:warmup</argument>
      </call>
      <call method="setDescription">
        <argument>Warm up an empty cache</argument>
      </call>
    </service>
    <service id="console.command.config_debug" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>debug:config</argument>
      </call>
      <call method="setDescription">
        <argument>Dump the current configuration for an extension</argument>
      </call>
    </service>
    <service id="console.command.config_dump_reference" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDumpReferenceCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>config:dump-reference</argument>
      </call>
      <call method="setDescription">
        <argument>Dump the default configuration for an extension</argument>
      </call>
    </service>
    <service id="console.command.container_debug" class="Symfony\Bundle\FrameworkBundle\Command\ContainerDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>debug:container</argument>
      </call>
      <call method="setDescription">
        <argument>Display current services for an application</argument>
      </call>
    </service>
    <service id="console.command.container_lint" class="Symfony\Bundle\FrameworkBundle\Command\ContainerLintCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>lint:container</argument>
      </call>
      <call method="setDescription">
        <argument>Ensure that arguments injected into services match type declarations</argument>
      </call>
    </service>
    <service id="console.command.debug_autowiring" class="Symfony\Bundle\FrameworkBundle\Command\DebugAutowiringCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument>null</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:autowiring</argument>
      </call>
      <call method="setDescription">
        <argument>List classes/interfaces you can use for autowiring</argument>
      </call>
    </service>
    <service id="console.command.dotenv_debug" class="Symfony\Component\Dotenv\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument>dev</argument>
      <argument>/home/maksim/Desktop/uvdesk</argument>
      <call method="setName">
        <argument>debug:dotenv</argument>
      </call>
      <call method="setDescription">
        <argument>Lists all dotenv files with variables and values</argument>
      </call>
    </service>
    <service id="console.command.event_dispatcher_debug" class="Symfony\Bundle\FrameworkBundle\Command\EventDispatcherDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id=".service_locator.FkiYa_u"/>
      <call method="setName">
        <argument>debug:event-dispatcher</argument>
      </call>
      <call method="setDescription">
        <argument>Display configured listeners for an application</argument>
      </call>
    </service>
    <service id="console.command.router_debug" class="Symfony\Bundle\FrameworkBundle\Command\RouterDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:router</argument>
      </call>
      <call method="setDescription">
        <argument>Display current routes for an application</argument>
      </call>
    </service>
    <service id="console.command.router_match" class="Symfony\Bundle\FrameworkBundle\Command\RouterMatchCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="router.default"/>
      <argument type="tagged_iterator" tag="routing.expression_language_provider"/>
      <call method="setName">
        <argument>router:match</argument>
      </call>
      <call method="setDescription">
        <argument>Help debug routes by simulating a path info match</argument>
      </call>
    </service>
    <service id="console.command.translation_debug" class="Symfony\Bundle\FrameworkBundle\Command\TranslationDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>/home/maksim/Desktop/uvdesk/translations</argument>
      <argument>/home/maksim/Desktop/uvdesk/templates</argument>
      <argument type="collection">
        <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations</argument>
        <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations</argument>
        <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations</argument>
        <argument>/home/maksim/Desktop/uvdesk/vendor/uvdesk/core-framework/Resources/translations</argument>
        <argument>/home/maksim/Desktop/uvdesk/vendor/uvdesk/support-center-bundle/Resources/translations</argument>
        <argument>/home/maksim/Desktop/uvdesk/vendor/knplabs/knp-paginator-bundle/translations</argument>
      </argument>
      <argument type="collection">
        <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/twig-bridge/Resources/views/Email</argument>
        <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/twig-bridge/Resources/views/Form</argument>
      </argument>
      <argument type="collection"/>
      <call method="setName">
        <argument>debug:translation</argument>
      </call>
      <call method="setDescription">
        <argument>Display translation messages information</argument>
      </call>
    </service>
    <service id="console.command.translation_extract" class="Symfony\Bundle\FrameworkBundle\Command\TranslationUpdateCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="translation.writer"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>en</argument>
      <argument>/home/maksim/Desktop/uvdesk/translations</argument>
      <argument>/home/maksim/Desktop/uvdesk/templates</argument>
      <argument type="collection">
        <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations</argument>
        <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations</argument>
        <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations</argument>
        <argument>/home/maksim/Desktop/uvdesk/vendor/uvdesk/core-framework/Resources/translations</argument>
        <argument>/home/maksim/Desktop/uvdesk/vendor/uvdesk/support-center-bundle/Resources/translations</argument>
        <argument>/home/maksim/Desktop/uvdesk/vendor/knplabs/knp-paginator-bundle/translations</argument>
      </argument>
      <argument type="collection">
        <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/twig-bridge/Resources/views/Email</argument>
        <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/twig-bridge/Resources/views/Form</argument>
      </argument>
      <argument type="collection"/>
      <call method="setName">
        <argument>translation:extract</argument>
      </call>
      <call method="setAliases">
        <argument type="collection">
          <argument>translation:update</argument>
        </argument>
      </call>
      <call method="setDescription">
        <argument>Extract missing translations keys from code to translation files.</argument>
      </call>
    </service>
    <service id="console.command.validator_debug" class="Symfony\Component\Validator\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="debug.validator"/>
      <call method="setName">
        <argument>debug:validator</argument>
      </call>
      <call method="setDescription">
        <argument>Display validation constraints for classes</argument>
      </call>
    </service>
    <service id="console.command.translation_pull" class="Symfony\Component\Translation\Command\TranslationPullCommand">
      <tag name="console.command" command="translation:pull"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="translation.provider_collection"/>
      <argument type="service" id="translation.writer"/>
      <argument type="service" id="translation.reader"/>
      <argument>en</argument>
      <argument type="collection"/>
      <argument type="collection"/>
      <call method="setName">
        <argument>translation:pull</argument>
      </call>
      <call method="setDescription">
        <argument>Pull translations from a given provider.</argument>
      </call>
    </service>
    <service id="console.command.translation_push" class="Symfony\Component\Translation\Command\TranslationPushCommand">
      <tag name="console.command" command="translation:push"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="translation.provider_collection"/>
      <argument type="service" id="translation.reader"/>
      <argument type="collection"/>
      <argument type="collection"/>
      <call method="setName">
        <argument>translation:push</argument>
      </call>
      <call method="setDescription">
        <argument>Push translations to a given provider.</argument>
      </call>
    </service>
    <service id="console.command.xliff_lint" class="Symfony\Component\Translation\Command\XliffLintCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>lint:xliff</argument>
      </call>
      <call method="setDescription">
        <argument>Lint an XLIFF file and outputs encountered errors</argument>
      </call>
    </service>
    <service id="console.command.yaml_lint" class="Symfony\Bundle\FrameworkBundle\Command\YamlLintCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>lint:yaml</argument>
      </call>
      <call method="setDescription">
        <argument>Lint a YAML file and outputs encountered errors</argument>
      </call>
    </service>
    <service id="console.command.form_debug" class="Symfony\Component\Form\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="form.registry"/>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Core\Type</argument>
        <argument>Webkul\UVDesk\CoreFrameworkBundle\Form</argument>
        <argument>Webkul\UVDesk\AutomationBundle\Form</argument>
        <argument>Webkul\UVDesk\SupportCenterBundle\Form</argument>
        <argument>Symfony\Bridge\Doctrine\Form\Type</argument>
      </argument>
      <argument type="collection">
        <argument>Webkul\UVDesk\CoreFrameworkBundle\Form\CreateTicket</argument>
        <argument>Webkul\UVDesk\CoreFrameworkBundle\Form\Mailbox</argument>
        <argument>Webkul\UVDesk\CoreFrameworkBundle\Form\UserProfile</argument>
        <argument>Webkul\UVDesk\AutomationBundle\Form\DefaultForm</argument>
        <argument>Webkul\UVDesk\SupportCenterBundle\Form\AccountValidation</argument>
        <argument>Webkul\UVDesk\SupportCenterBundle\Form\ForgotPassword</argument>
        <argument>Webkul\UVDesk\SupportCenterBundle\Form\SolutionModal</argument>
        <argument>Webkul\UVDesk\SupportCenterBundle\Form\Ticket</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\FormType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\ChoiceType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\FileType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\ColorType</argument>
        <argument>Symfony\Bridge\Doctrine\Form\Type\EntityType</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension</argument>
        <argument>Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension</argument>
        <argument>Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser</argument>
        <argument>Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</argument>
      </argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:form</argument>
      </call>
      <call method="setDescription">
        <argument>Display form type information</argument>
      </call>
    </service>
    <service id="console.command.secrets_set" class="Symfony\Bundle\FrameworkBundle\Command\SecretsSetCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="null"/>
      <call method="setName">
        <argument>secrets:set</argument>
      </call>
      <call method="setDescription">
        <argument>Set a secret in the vault</argument>
      </call>
    </service>
    <service id="console.command.secrets_remove" class="Symfony\Bundle\FrameworkBundle\Command\SecretsRemoveCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="null"/>
      <call method="setName">
        <argument>secrets:remove</argument>
      </call>
      <call method="setDescription">
        <argument>Remove a secret from the vault</argument>
      </call>
    </service>
    <service id="console.command.secrets_generate_key" class="Symfony\Bundle\FrameworkBundle\Command\SecretsGenerateKeysCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:generate-keys</argument>
      </call>
      <call method="setDescription">
        <argument>Generate new encryption keys</argument>
      </call>
    </service>
    <service id="console.command.secrets_list" class="Symfony\Bundle\FrameworkBundle\Command\SecretsListCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:list</argument>
      </call>
      <call method="setDescription">
        <argument>List all secrets</argument>
      </call>
    </service>
    <service id="console.command.secrets_decrypt_to_local" class="Symfony\Bundle\FrameworkBundle\Command\SecretsDecryptToLocalCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:decrypt-to-local</argument>
      </call>
      <call method="setDescription">
        <argument>Decrypt all secrets and stores them in the local vault</argument>
      </call>
    </service>
    <service id="console.command.secrets_encrypt_from_local" class="Symfony\Bundle\FrameworkBundle\Command\SecretsEncryptFromLocalCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:encrypt-from-local</argument>
      </call>
      <call method="setDescription">
        <argument>Encrypt all local secrets to the vault</argument>
      </call>
    </service>
    <service id="cache.app" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.app.recorder_inner"/>
    </service>
    <service id="cache.app.taggable" class="Symfony\Component\Cache\Adapter\TagAwareAdapter">
      <argument type="service" id="cache.app"/>
    </service>
    <service id="cache.system" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.system.recorder_inner"/>
    </service>
    <service id="cache.validator" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.validator.recorder_inner"/>
    </service>
    <service id="cache.serializer" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.serializer.recorder_inner"/>
    </service>
    <service id="cache.annotations" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.annotations.recorder_inner"/>
    </service>
    <service id="cache.property_info" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.property_info.recorder_inner"/>
    </service>
    <service id="cache.adapter.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" abstract="true">
      <tag name="cache.pool" clearer="cache.system_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/maksim/Desktop/uvdesk/var/cache/dev/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.adapter.apcu" class="Symfony\Component\Cache\Adapter\ApcuAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.doctrine" class="Symfony\Component\Cache\Adapter\DoctrineAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_doctrine_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">Doctrine provider service</argument>
      <argument></argument>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
      <deprecated package="symfony/framework-bundle" version="5.4">The "%service_id%" service inherits from "cache.adapter.doctrine" which is deprecated.</deprecated>
    </service>
    <service id="cache.adapter.filesystem" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>/home/maksim/Desktop/uvdesk/var/cache/dev/pools/app</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.psr6" class="Symfony\Component\Cache\Adapter\ProxyAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_psr6_provider" clearer="cache.default_clearer" reset="reset"/>
      <argument type="abstract">PSR-6 provider service</argument>
      <argument></argument>
      <argument>0</argument>
    </service>
    <service id="cache.adapter.redis" class="Symfony\Component\Cache\Adapter\RedisAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_redis_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">Redis connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.redis_tag_aware" class="Symfony\Component\Cache\Adapter\RedisTagAwareAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_redis_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">Redis connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.memcached" class="Symfony\Component\Cache\Adapter\MemcachedAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_memcached_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">Memcached connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.doctrine_dbal" class="Symfony\Component\Cache\Adapter\DoctrineDbalAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_doctrine_dbal_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">DBAL connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="collection"/>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.pdo" class="Symfony\Component\Cache\Adapter\PdoAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_pdo_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">PDO connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="collection"/>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.array" class="Symfony\Component\Cache\Adapter\ArrayAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.default_marshaller" class="Symfony\Component\Cache\Marshaller\DefaultMarshaller">
      <argument>null</argument>
      <argument>true</argument>
    </service>
    <service id="cache.default_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.system_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <tag name="kernel.cache_clearer"/>
      <argument type="collection">
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator_expression_language" type="service" id="cache.validator_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.global_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator_expression_language" type="service" id="cache.validator_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.result" type="service" id="cache.doctrine.orm.default.result" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.query" type="service" id="cache.doctrine.orm.default.query" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="identity_translator" class="Symfony\Component\Translation\IdentityTranslator"/>
    <service id="assets.packages" class="Symfony\Component\Asset\Packages">
      <argument type="service" id="assets._default_package"/>
      <argument type="tagged_iterator" tag="assets.package" index-by="package" default-index-method="getDefaultPackageName" default-priority-method="getDefaultPackagePriority"/>
    </service>
    <service id="assets.empty_package" class="Symfony\Component\Asset\Package">
      <argument type="service" id="assets.empty_version_strategy"/>
    </service>
    <service id="assets.context" class="Symfony\Component\Asset\Context\RequestStackContext">
      <argument type="service" id="request_stack"/>
      <argument type="service">
        <service class="string">
          <factory service="router.request_context" method="getBaseUrl"/>
        </service>
      </argument>
      <argument type="service">
        <service class="bool">
          <factory service="router.request_context" method="isSecure"/>
        </service>
      </argument>
    </service>
    <service id="assets.path_package" class="Symfony\Component\Asset\PathPackage" abstract="true">
      <argument type="abstract">base path</argument>
      <argument type="abstract">version strategy</argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.url_package" class="Symfony\Component\Asset\UrlPackage" abstract="true">
      <argument type="abstract">base URLs</argument>
      <argument type="abstract">version strategy</argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.static_version_strategy" class="Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy" abstract="true">
      <argument type="abstract">version</argument>
      <argument type="abstract">format</argument>
    </service>
    <service id="assets.empty_version_strategy" class="Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy"/>
    <service id="assets.json_manifest_version_strategy" class="Symfony\Component\Asset\VersionStrategy\JsonManifestVersionStrategy" abstract="true">
      <argument type="abstract">manifest path</argument>
      <argument type="service" id=".debug.http_client" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="assets.remote_json_manifest_version_strategy" class="Symfony\Component\Asset\VersionStrategy\RemoteJsonManifestVersionStrategy" abstract="true">
      <argument type="abstract">manifest url</argument>
      <argument type="service" id=".debug.http_client"/>
      <deprecated package="symfony/framework-bundle" version="5.3">The "%service_id%" service is deprecated, use "assets.json_manifest_version_strategy" instead.</deprecated>
    </service>
    <service id="assets._default_package" class="Symfony\Component\Asset\PathPackage">
      <argument></argument>
      <argument type="service" id="assets.empty_version_strategy"/>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="http_client.abstract_retry_strategy" class="Symfony\Component\HttpClient\Retry\GenericRetryStrategy" abstract="true">
      <argument type="abstract">http codes</argument>
      <argument type="abstract">delay ms</argument>
      <argument type="abstract">multiplier</argument>
      <argument type="abstract">max delay ms</argument>
      <argument type="abstract">jitter</argument>
    </service>
    <service id="mailer.mailer" class="Symfony\Component\Mailer\Mailer">
      <argument type="service" id="mailer.transports"/>
      <argument>null</argument>
      <argument type="service" id="debug.event_dispatcher" on-invalid="ignore"/>
    </service>
    <service id="mailer.transports" class="Symfony\Component\Mailer\Transport\Transports">
      <argument type="collection">
        <argument key="main">%env(MAILER_DSN)%</argument>
      </argument>
      <factory service="mailer.transport_factory" method="fromStrings"/>
    </service>
    <service id="mailer.transport_factory" class="Symfony\Component\Mailer\Transport">
      <argument type="tagged_iterator" tag="mailer.transport_factory"/>
    </service>
    <service id="mailer.default_transport" class="Symfony\Component\Mailer\Transport\TransportInterface">
      <argument>%env(MAILER_DSN)%</argument>
      <factory service="mailer.transport_factory" method="fromString"/>
    </service>
    <service id="mailer.messenger.message_handler" class="Symfony\Component\Mailer\Messenger\MessageHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="mailer.transports"/>
    </service>
    <service id="mailer.envelope_listener" class="Symfony\Component\Mailer\EventListener\EnvelopeListener">
      <tag name="kernel.event_subscriber"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="mailer.message_logger_listener" class="Symfony\Component\Mailer\EventListener\MessageLoggerListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="kernel.reset" method="reset"/>
    </service>
    <service id="mailer.transport_factory.abstract" class="Symfony\Component\Mailer\Transport\AbstractTransportFactory" abstract="true">
      <tag name="monolog.logger" channel="mailer"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id=".debug.http_client" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.mailer" on-invalid="ignore"/>
    </service>
    <service id="mailer.transport_factory.null" class="Symfony\Component\Mailer\Transport\NullTransportFactory">
      <tag name="mailer.transport_factory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id=".debug.http_client" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.mailer" on-invalid="ignore"/>
    </service>
    <service id="mailer.transport_factory.sendmail" class="Symfony\Component\Mailer\Transport\SendmailTransportFactory">
      <tag name="mailer.transport_factory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id=".debug.http_client" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.mailer" on-invalid="ignore"/>
    </service>
    <service id="mailer.transport_factory.smtp" class="Symfony\Component\Mailer\Transport\Smtp\EsmtpTransportFactory">
      <tag name="mailer.transport_factory" priority="-100"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id=".debug.http_client" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.mailer" on-invalid="ignore"/>
    </service>
    <service id="mailer.transport_factory.native" class="Symfony\Component\Mailer\Transport\NativeTransportFactory">
      <tag name="mailer.transport_factory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id=".debug.http_client" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.mailer" on-invalid="ignore"/>
    </service>
    <service id="translator.default" class="Symfony\Bundle\FrameworkBundle\Translation\Translator">
      <tag name="kernel.locale_aware"/>
      <argument type="service" id=".service_locator.yY.p4P7"/>
      <argument type="service" id="translator.formatter.default"/>
      <argument>en</argument>
      <argument type="collection">
        <argument key="translation.loader.php" type="collection">
          <argument>php</argument>
        </argument>
        <argument key="translation.loader.yml" type="collection">
          <argument>yaml</argument>
          <argument>yml</argument>
        </argument>
        <argument key="translation.loader.xliff" type="collection">
          <argument>xlf</argument>
          <argument>xliff</argument>
        </argument>
        <argument key="translation.loader.po" type="collection">
          <argument>po</argument>
        </argument>
        <argument key="translation.loader.mo" type="collection">
          <argument>mo</argument>
        </argument>
        <argument key="translation.loader.qt" type="collection">
          <argument>ts</argument>
        </argument>
        <argument key="translation.loader.csv" type="collection">
          <argument>csv</argument>
        </argument>
        <argument key="translation.loader.res" type="collection">
          <argument>res</argument>
        </argument>
        <argument key="translation.loader.dat" type="collection">
          <argument>dat</argument>
        </argument>
        <argument key="translation.loader.ini" type="collection">
          <argument>ini</argument>
        </argument>
        <argument key="translation.loader.json" type="collection">
          <argument>json</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="cache_dir">/home/maksim/Desktop/uvdesk/var/cache/dev/translations</argument>
        <argument key="debug">true</argument>
        <argument key="resource_files" type="collection">
          <argument key="af" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.af.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.af.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.af.xlf</argument>
          </argument>
          <argument key="ar" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.ar.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.ar.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.ar.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.ar.xliff</argument>
            <argument>/home/maksim/Desktop/uvdesk/translations/messages.ar.yml</argument>
          </argument>
          <argument key="az" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.az.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.az.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.az.xlf</argument>
          </argument>
          <argument key="be" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.be.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.be.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.be.xlf</argument>
          </argument>
          <argument key="bg" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.bg.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.bg.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.bg.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.bg.xliff</argument>
          </argument>
          <argument key="bs" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.bs.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.bs.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.bs.xlf</argument>
          </argument>
          <argument key="ca" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.ca.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.ca.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.ca.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.ca.xliff</argument>
          </argument>
          <argument key="cs" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.cs.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.cs.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.cs.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.cs.xliff</argument>
          </argument>
          <argument key="cy" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.cy.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.cy.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.cy.xlf</argument>
          </argument>
          <argument key="da" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.da.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.da.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.da.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.da.xliff</argument>
            <argument>/home/maksim/Desktop/uvdesk/translations/messages.da.yml</argument>
          </argument>
          <argument key="de" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.de.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.de.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.de.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.de.xliff</argument>
            <argument>/home/maksim/Desktop/uvdesk/translations/messages.de.yml</argument>
          </argument>
          <argument key="el" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.el.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.el.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.el.xlf</argument>
          </argument>
          <argument key="en" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.en.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.en.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.en.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.en.xliff</argument>
            <argument>/home/maksim/Desktop/uvdesk/translations/messages.en.yml</argument>
          </argument>
          <argument key="es" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.es.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.es.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.es.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.es.xliff</argument>
            <argument>/home/maksim/Desktop/uvdesk/translations/messages.es.yml</argument>
          </argument>
          <argument key="et" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.et.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.et.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.et.xlf</argument>
          </argument>
          <argument key="eu" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.eu.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.eu.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.eu.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.eu.xliff</argument>
          </argument>
          <argument key="fa" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.fa.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.fa.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.fa.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.fa.xliff</argument>
          </argument>
          <argument key="fi" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.fi.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.fi.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.fi.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.fi.xliff</argument>
          </argument>
          <argument key="fr" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.fr.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.fr.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.fr.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.fr.xliff</argument>
            <argument>/home/maksim/Desktop/uvdesk/translations/messages.fr.yml</argument>
          </argument>
          <argument key="gl" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.gl.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.gl.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.gl.xlf</argument>
          </argument>
          <argument key="he" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.he.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.he.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.he.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/translations/messages.he.yml</argument>
          </argument>
          <argument key="hr" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.hr.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.hr.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.hr.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.hr.xliff</argument>
          </argument>
          <argument key="hu" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.hu.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.hu.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.hu.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.hu.xliff</argument>
          </argument>
          <argument key="hy" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.hy.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.hy.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.hy.xlf</argument>
          </argument>
          <argument key="id" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.id.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.id.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.id.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.id.xliff</argument>
          </argument>
          <argument key="it" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.it.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.it.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.it.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.it.xliff</argument>
            <argument>/home/maksim/Desktop/uvdesk/translations/messages.it.yml</argument>
          </argument>
          <argument key="ja" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.ja.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.ja.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.ja.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.ja.xliff</argument>
          </argument>
          <argument key="lb" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.lb.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.lb.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.lb.xlf</argument>
          </argument>
          <argument key="lt" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.lt.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.lt.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.lt.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.lt.xliff</argument>
          </argument>
          <argument key="lv" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.lv.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.lv.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.lv.xlf</argument>
          </argument>
          <argument key="mk" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.mk.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.mk.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.mk.xlf</argument>
          </argument>
          <argument key="mn" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.mn.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.mn.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.mn.xlf</argument>
          </argument>
          <argument key="my" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.my.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.my.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.my.xlf</argument>
          </argument>
          <argument key="nb" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.nb.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.nb.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.nb.xlf</argument>
          </argument>
          <argument key="nl" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.nl.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.nl.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.nl.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.nl.xliff</argument>
          </argument>
          <argument key="nn" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.nn.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.nn.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.nn.xlf</argument>
          </argument>
          <argument key="no" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.no.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.no.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.no.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.no.xliff</argument>
          </argument>
          <argument key="pl" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.pl.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.pl.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.pl.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.pl.xliff</argument>
            <argument>/home/maksim/Desktop/uvdesk/translations/messages.pl.yml</argument>
          </argument>
          <argument key="pt" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.pt.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.pt.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.pt.xlf</argument>
          </argument>
          <argument key="pt_BR" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.pt_BR.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.pt_BR.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.pt_BR.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.pt_BR.xliff</argument>
          </argument>
          <argument key="ro" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.ro.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.ro.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.ro.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.ro.xliff</argument>
          </argument>
          <argument key="ru" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.ru.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.ru.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.ru.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/uvdesk/core-framework/Resources/translations/messages.ru.yml</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/uvdesk/support-center-bundle/Resources/translations/messages.ru.yml</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.ru.xliff</argument>
          </argument>
          <argument key="sk" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.sk.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.sk.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.sk.xlf</argument>
          </argument>
          <argument key="sl" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.sl.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.sl.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.sl.xlf</argument>
          </argument>
          <argument key="sq" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.sq.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.sq.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.sq.xlf</argument>
          </argument>
          <argument key="sr_Cyrl" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.sr_Cyrl.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.sr_Cyrl.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.sr_Cyrl.xlf</argument>
          </argument>
          <argument key="sr_Latn" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.sr_Latn.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.sr_Latn.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.sr_Latn.xlf</argument>
          </argument>
          <argument key="sv" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.sv.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.sv.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.sv.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.sv.xliff</argument>
          </argument>
          <argument key="th" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.th.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.th.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.th.xlf</argument>
          </argument>
          <argument key="tl" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.tl.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.tl.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.tl.xlf</argument>
          </argument>
          <argument key="tr" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.tr.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.tr.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.tr.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.tr.xliff</argument>
            <argument>/home/maksim/Desktop/uvdesk/translations/messages.tr.yml</argument>
          </argument>
          <argument key="uk" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.uk.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.uk.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.uk.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.uk.xliff</argument>
          </argument>
          <argument key="ur" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.ur.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.ur.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.ur.xlf</argument>
          </argument>
          <argument key="uz" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.uz.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.uz.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.uz.xlf</argument>
          </argument>
          <argument key="vi" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.vi.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.vi.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.vi.xlf</argument>
          </argument>
          <argument key="zh_CN" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.zh_CN.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.zh_CN.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.zh_CN.xlf</argument>
          </argument>
          <argument key="zh_TW" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations/validators.zh_TW.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations/validators.zh_TW.xlf</argument>
            <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations/security.zh_TW.xlf</argument>
          </argument>
          <argument key="ky" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.ky.xliff</argument>
          </argument>
          <argument key="sw" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/vendor/knplabs/knp-paginator-bundle/translations/KnpPaginatorBundle.sw.xliff</argument>
          </argument>
          <argument key="zh" type="collection">
            <argument>/home/maksim/Desktop/uvdesk/translations/messages.zh.yml</argument>
          </argument>
        </argument>
        <argument key="scanned_directories" type="collection">
          <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/validator/Resources/translations</argument>
          <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/translations</argument>
          <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-core/Resources/translations</argument>
          <argument>/home/maksim/Desktop/uvdesk/vendor/uvdesk/core-framework/Resources/translations</argument>
          <argument>/home/maksim/Desktop/uvdesk/vendor/uvdesk/support-center-bundle/Resources/translations</argument>
          <argument>/home/maksim/Desktop/uvdesk/vendor/knplabs/knp-paginator-bundle/translations</argument>
          <argument>/home/maksim/Desktop/uvdesk/translations</argument>
          <argument>/home/maksim/Desktop/uvdesk/vendor/uvdesk/automation-bundle/translations</argument>
          <argument>/home/maksim/Desktop/uvdesk/vendor/uvdesk/extension-framework/translations</argument>
          <argument>/home/maksim/Desktop/uvdesk/vendor/uvdesk/mailbox-component/translations</argument>
          <argument>/home/maksim/Desktop/uvdesk/vendor/uvdesk/api-bundle/translations</argument>
          <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/framework-bundle/translations</argument>
          <argument>/home/maksim/Desktop/uvdesk/vendor/doctrine/doctrine-bundle/translations</argument>
          <argument>/home/maksim/Desktop/uvdesk/vendor/doctrine/doctrine-fixtures-bundle/translations</argument>
          <argument>/home/maksim/Desktop/uvdesk/vendor/sensio/framework-extra-bundle/src/translations</argument>
          <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/twig-bundle/translations</argument>
          <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/web-profiler-bundle/translations</argument>
          <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/monolog-bundle/translations</argument>
          <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/debug-bundle/translations</argument>
          <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/maker-bundle/src/translations</argument>
          <argument>/home/maksim/Desktop/uvdesk/vendor/doctrine/doctrine-migrations-bundle/translations</argument>
          <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-bundle/translations</argument>
          <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/swiftmailer-bundle/translations</argument>
          <argument>/home/maksim/Desktop/uvdesk/vendor/twig/extra-bundle/translations</argument>
        </argument>
        <argument key="cache_vary" type="collection">
          <argument key="scanned_directories" type="collection">
            <argument>vendor/symfony/validator/Resources/translations</argument>
            <argument>vendor/symfony/form/Resources/translations</argument>
            <argument>vendor/symfony/security-core/Resources/translations</argument>
            <argument>vendor/uvdesk/core-framework/Resources/translations</argument>
            <argument>vendor/uvdesk/support-center-bundle/Resources/translations</argument>
            <argument>vendor/knplabs/knp-paginator-bundle/translations</argument>
            <argument>translations</argument>
            <argument>vendor/uvdesk/automation-bundle/translations</argument>
            <argument>vendor/uvdesk/extension-framework/translations</argument>
            <argument>vendor/uvdesk/mailbox-component/translations</argument>
            <argument>vendor/uvdesk/api-bundle/translations</argument>
            <argument>vendor/symfony/framework-bundle/translations</argument>
            <argument>vendor/doctrine/doctrine-bundle/translations</argument>
            <argument>vendor/doctrine/doctrine-fixtures-bundle/translations</argument>
            <argument>vendor/sensio/framework-extra-bundle/src/translations</argument>
            <argument>vendor/symfony/twig-bundle/translations</argument>
            <argument>vendor/symfony/web-profiler-bundle/translations</argument>
            <argument>vendor/symfony/monolog-bundle/translations</argument>
            <argument>vendor/symfony/debug-bundle/translations</argument>
            <argument>vendor/symfony/maker-bundle/src/translations</argument>
            <argument>vendor/doctrine/doctrine-migrations-bundle/translations</argument>
            <argument>vendor/symfony/security-bundle/translations</argument>
            <argument>vendor/symfony/swiftmailer-bundle/translations</argument>
            <argument>vendor/twig/extra-bundle/translations</argument>
          </argument>
        </argument>
      </argument>
      <argument type="collection"/>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="setFallbackLocales">
        <argument type="collection">
          <argument>en</argument>
        </argument>
      </call>
    </service>
    <service id="translator.logging" class="Symfony\Component\Translation\LoggingTranslator">
      <tag name="monolog.logger" channel="translation"/>
      <argument type="service" id="translator.logging.inner"/>
      <argument type="service" id="monolog.logger.translation"/>
    </service>
    <service id="translator.formatter.default" class="Symfony\Component\Translation\Formatter\MessageFormatter">
      <argument type="service" id="identity_translator"/>
    </service>
    <service id="translation.loader.php" class="Symfony\Component\Translation\Loader\PhpFileLoader">
      <tag name="translation.loader" alias="php"/>
    </service>
    <service id="translation.loader.yml" class="Symfony\Component\Translation\Loader\YamlFileLoader">
      <tag name="translation.loader" alias="yaml" legacy-alias="yml"/>
    </service>
    <service id="translation.loader.xliff" class="Symfony\Component\Translation\Loader\XliffFileLoader">
      <tag name="translation.loader" alias="xlf" legacy-alias="xliff"/>
    </service>
    <service id="translation.loader.po" class="Symfony\Component\Translation\Loader\PoFileLoader">
      <tag name="translation.loader" alias="po"/>
    </service>
    <service id="translation.loader.mo" class="Symfony\Component\Translation\Loader\MoFileLoader">
      <tag name="translation.loader" alias="mo"/>
    </service>
    <service id="translation.loader.qt" class="Symfony\Component\Translation\Loader\QtFileLoader">
      <tag name="translation.loader" alias="ts"/>
    </service>
    <service id="translation.loader.csv" class="Symfony\Component\Translation\Loader\CsvFileLoader">
      <tag name="translation.loader" alias="csv"/>
    </service>
    <service id="translation.loader.res" class="Symfony\Component\Translation\Loader\IcuResFileLoader">
      <tag name="translation.loader" alias="res"/>
    </service>
    <service id="translation.loader.dat" class="Symfony\Component\Translation\Loader\IcuDatFileLoader">
      <tag name="translation.loader" alias="dat"/>
    </service>
    <service id="translation.loader.ini" class="Symfony\Component\Translation\Loader\IniFileLoader">
      <tag name="translation.loader" alias="ini"/>
    </service>
    <service id="translation.loader.json" class="Symfony\Component\Translation\Loader\JsonFileLoader">
      <tag name="translation.loader" alias="json"/>
    </service>
    <service id="translation.dumper.php" class="Symfony\Component\Translation\Dumper\PhpFileDumper">
      <tag name="translation.dumper" alias="php"/>
    </service>
    <service id="translation.dumper.xliff" class="Symfony\Component\Translation\Dumper\XliffFileDumper">
      <tag name="translation.dumper" alias="xlf"/>
    </service>
    <service id="translation.dumper.po" class="Symfony\Component\Translation\Dumper\PoFileDumper">
      <tag name="translation.dumper" alias="po"/>
    </service>
    <service id="translation.dumper.mo" class="Symfony\Component\Translation\Dumper\MoFileDumper">
      <tag name="translation.dumper" alias="mo"/>
    </service>
    <service id="translation.dumper.yml" class="Symfony\Component\Translation\Dumper\YamlFileDumper">
      <tag name="translation.dumper" alias="yml"/>
    </service>
    <service id="translation.dumper.yaml" class="Symfony\Component\Translation\Dumper\YamlFileDumper">
      <tag name="translation.dumper" alias="yaml"/>
      <argument>yaml</argument>
    </service>
    <service id="translation.dumper.qt" class="Symfony\Component\Translation\Dumper\QtFileDumper">
      <tag name="translation.dumper" alias="ts"/>
    </service>
    <service id="translation.dumper.csv" class="Symfony\Component\Translation\Dumper\CsvFileDumper">
      <tag name="translation.dumper" alias="csv"/>
    </service>
    <service id="translation.dumper.ini" class="Symfony\Component\Translation\Dumper\IniFileDumper">
      <tag name="translation.dumper" alias="ini"/>
    </service>
    <service id="translation.dumper.json" class="Symfony\Component\Translation\Dumper\JsonFileDumper">
      <tag name="translation.dumper" alias="json"/>
    </service>
    <service id="translation.dumper.res" class="Symfony\Component\Translation\Dumper\IcuResFileDumper">
      <tag name="translation.dumper" alias="res"/>
    </service>
    <service id="translation.extractor.php" class="Symfony\Component\Translation\Extractor\PhpExtractor">
      <tag name="translation.extractor" alias="php"/>
    </service>
    <service id="translation.reader" class="Symfony\Component\Translation\Reader\TranslationReader">
      <call method="addLoader">
        <argument>php</argument>
        <argument type="service" id="translation.loader.php"/>
      </call>
      <call method="addLoader">
        <argument>yaml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>yml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>xlf</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>xliff</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>po</argument>
        <argument type="service" id="translation.loader.po"/>
      </call>
      <call method="addLoader">
        <argument>mo</argument>
        <argument type="service" id="translation.loader.mo"/>
      </call>
      <call method="addLoader">
        <argument>ts</argument>
        <argument type="service" id="translation.loader.qt"/>
      </call>
      <call method="addLoader">
        <argument>csv</argument>
        <argument type="service" id="translation.loader.csv"/>
      </call>
      <call method="addLoader">
        <argument>res</argument>
        <argument type="service" id="translation.loader.res"/>
      </call>
      <call method="addLoader">
        <argument>dat</argument>
        <argument type="service" id="translation.loader.dat"/>
      </call>
      <call method="addLoader">
        <argument>ini</argument>
        <argument type="service" id="translation.loader.ini"/>
      </call>
      <call method="addLoader">
        <argument>json</argument>
        <argument type="service" id="translation.loader.json"/>
      </call>
    </service>
    <service id="translation.extractor" class="Symfony\Component\Translation\Extractor\ChainExtractor">
      <call method="addExtractor">
        <argument>php</argument>
        <argument type="service" id="translation.extractor.php"/>
      </call>
      <call method="addExtractor">
        <argument>twig</argument>
        <argument type="service" id="twig.translation.extractor"/>
      </call>
    </service>
    <service id="translation.writer" class="Symfony\Component\Translation\Writer\TranslationWriter">
      <call method="addDumper">
        <argument>php</argument>
        <argument type="service" id="translation.dumper.php"/>
      </call>
      <call method="addDumper">
        <argument>xlf</argument>
        <argument type="service" id="translation.dumper.xliff"/>
      </call>
      <call method="addDumper">
        <argument>po</argument>
        <argument type="service" id="translation.dumper.po"/>
      </call>
      <call method="addDumper">
        <argument>mo</argument>
        <argument type="service" id="translation.dumper.mo"/>
      </call>
      <call method="addDumper">
        <argument>yml</argument>
        <argument type="service" id="translation.dumper.yml"/>
      </call>
      <call method="addDumper">
        <argument>yaml</argument>
        <argument type="service" id="translation.dumper.yaml"/>
      </call>
      <call method="addDumper">
        <argument>ts</argument>
        <argument type="service" id="translation.dumper.qt"/>
      </call>
      <call method="addDumper">
        <argument>csv</argument>
        <argument type="service" id="translation.dumper.csv"/>
      </call>
      <call method="addDumper">
        <argument>ini</argument>
        <argument type="service" id="translation.dumper.ini"/>
      </call>
      <call method="addDumper">
        <argument>json</argument>
        <argument type="service" id="translation.dumper.json"/>
      </call>
      <call method="addDumper">
        <argument>res</argument>
        <argument type="service" id="translation.dumper.res"/>
      </call>
    </service>
    <service id="translation.warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TranslationsCacheWarmer">
      <tag name="container.service_subscriber" id="translator"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.wSgjnB6.translation.warmer"/>
    </service>
    <service id="translation.provider_collection" class="Symfony\Component\Translation\Provider\TranslationProviderCollection">
      <argument type="collection"/>
      <factory service="translation.provider_collection_factory" method="fromConfig"/>
    </service>
    <service id="translation.provider_collection_factory" class="Symfony\Component\Translation\Provider\TranslationProviderCollectionFactory">
      <argument type="tagged_iterator" tag="translation.provider_factory"/>
      <argument type="collection"/>
    </service>
    <service id="translation.provider_factory.null" class="Symfony\Component\Translation\Provider\NullProviderFactory">
      <tag name="translation.provider_factory"/>
    </service>
    <service id="debug.debug_handlers_listener" class="Symfony\Component\HttpKernel\EventListener\DebugHandlersListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="php"/>
      <tag name="container.hot_path"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.php"/>
      <argument>null</argument>
      <argument>-1</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument type="service" id="monolog.logger.deprecation"/>
    </service>
    <service id="debug.file_link_formatter" class="Symfony\Component\HttpKernel\Debug\FileLinkFormatter">
      <argument>null</argument>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
      <argument>/home/maksim/Desktop/uvdesk</argument>
      <argument type="service_closure" id="debug.file_link_formatter.url_format"/>
    </service>
    <service id="debug.stopwatch" class="Symfony\Component\Stopwatch\Stopwatch">
      <tag name="kernel.reset" method="reset"/>
      <argument>true</argument>
    </service>
    <service id="debug.event_dispatcher" class="Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher">
      <tag name="container.hot_path"/>
      <tag name="event_dispatcher">event_dispatcher.dispatcher</tag>
      <tag name="monolog.logger" channel="event"/>
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.decorator" id="event_dispatcher"/>
      <argument type="service" id="debug.event_dispatcher.inner"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="monolog.logger.event" on-invalid="null"/>
      <argument type="service" id="request_stack" on-invalid="null"/>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service_closure" id="Webkul\UVDesk\CoreFrameworkBundle\EventListener\Console\Console"/>
          <argument>onConsoleCommand</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service_closure" id="Webkul\UVDesk\CoreFrameworkBundle\EventListener\Console\Console"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>uvdesk.automation.prepared_response.execute</argument>
        <argument type="collection">
          <argument type="service_closure" id="Webkul\UVDesk\AutomationBundle\EventListener\PreparedResponseListener"/>
          <argument>executePreparedResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>uvdesk.automation.workflow.execute</argument>
        <argument type="collection">
          <argument type="service_closure" id="Webkul\UVDesk\AutomationBundle\EventListener\WorkflowListener"/>
          <argument>executeWorkflow</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>uvdesk.automation.report_app.workflow.execute</argument>
        <argument type="collection">
          <argument type="service_closure" id="Webkul\UVDesk\AutomationBundle\EventListener\WorkflowListener"/>
          <argument>executeReplyEvent</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service_closure" id="Webkul\UVDesk\ExtensionFrameworkBundle\EventListener\Console"/>
          <argument>onConsoleCommand</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service_closure" id="Webkul\UVDesk\ExtensionFrameworkBundle\EventListener\Console"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="Webkul\UVDesk\ExtensionFrameworkBundle\EventListener\Kernel"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service_closure" id="Webkul\UVDesk\ExtensionFrameworkBundle\EventListener\Kernel"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="Webkul\UVDesk\ApiBundle\EventListeners\API\KernelException"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="Webkul\UVDesk\ApiBundle\EventListeners\API\KernelRequest"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="Webkul\UVDesk\ApiBundle\EventListeners\API\KernelRequest"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="data_collector.router"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="knp_paginator.subscriber.sliding_pagination"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="App\EventListener\ExceptionSubscriber"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>10</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="streamed_response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_listener"/>
          <argument>setDefaultLocale</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="validate_request_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="disallow_search_engine_index_response_listener"/>
          <argument>onResponse</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>onControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>logKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>removeCspHeader</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_aware_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>15</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_aware_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>-15</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service_closure" id="console.error_listener"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service_closure" id="console.error_listener"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service_closure" id="console.suggest_missing_package_subscriber"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Mailer\Event\MessageEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="mailer.envelope_listener"/>
          <argument>onMessage</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Mailer\Event\MessageEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="mailer.message_logger_listener"/>
          <argument>onMessage</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="router_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>32</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="router_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="router_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-64</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="web_link.add_link_header_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="session_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="session_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1000</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="session_listener"/>
          <argument>onFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Notifier\Event\MessageEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="notifier.logger_notification_listener"/>
          <argument>onNotification</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="profiler_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="profiler_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.terminate</argument>
        <argument type="collection">
          <argument type="service_closure" id="profiler_listener"/>
          <argument>onKernelTerminate</argument>
        </argument>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="data_collector.request"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="data_collector.request"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>knp_pager.before</argument>
        <argument type="collection">
          <argument type="service_closure" id="knp_paginator.subscriber.paginate"/>
          <argument>before</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>knp_pager.pagination</argument>
        <argument type="collection">
          <argument type="service_closure" id="knp_paginator.subscriber.paginate"/>
          <argument>pagination</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>knp_pager.before</argument>
        <argument type="collection">
          <argument type="service_closure" id="knp_paginator.subscriber.sortable"/>
          <argument>before</argument>
        </argument>
        <argument>1</argument>
      </call>
      <call method="addListener">
        <argument>knp_pager.before</argument>
        <argument type="collection">
          <argument type="service_closure" id="knp_paginator.subscriber.filtration"/>
          <argument>before</argument>
        </argument>
        <argument>1</argument>
      </call>
      <call method="addListener">
        <argument>knp_pager.pagination</argument>
        <argument type="collection">
          <argument type="service_closure" id="knp_paginator.subscriber.sliding_pagination"/>
          <argument>pagination</argument>
        </argument>
        <argument>1</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="sensio_framework_extra.controller.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="sensio_framework_extra.converter.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="sensio_framework_extra.view.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service_closure" id="sensio_framework_extra.view.listener"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="sensio_framework_extra.cache.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="sensio_framework_extra.cache.listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service_closure" id="sensio_framework_extra.security.listener"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service_closure" id="framework_extra_bundle.event.is_granted"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Mailer\Event\MessageEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="twig.mailer.message_listener"/>
          <argument>onMessage</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="web_profiler.debug_toolbar"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service_closure" id="monolog.handler.console"/>
          <argument>onCommand</argument>
        </argument>
        <argument>255</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service_closure" id="monolog.handler.console"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.dump_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>1024</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service_closure" id="maker.console_error_listener"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service_closure" id="maker.console_error_listener"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.rememberme.response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>debug.security.authorization.vote</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.security.voter.vote_listener"/>
          <argument>onVoterVote</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.security.firewall"/>
          <argument>configureLogoutUrlGenerator</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.security.firewall"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.security.firewall"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="swiftmailer.email_sender.listener"/>
          <argument>onException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.terminate</argument>
        <argument type="collection">
          <argument type="service_closure" id="swiftmailer.email_sender.listener"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service_closure" id="swiftmailer.email_sender.listener"/>
          <argument>onException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service_closure" id="swiftmailer.email_sender.listener"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.logout.listener.csrf_token_clearing"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="debug.controller_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableControllerResolver">
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.decorator" id="controller_resolver"/>
      <argument type="service" id="debug.controller_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableArgumentResolver">
      <tag name="container.decorator" id="argument_resolver"/>
      <argument type="service" id="debug.argument_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.log_processor" class="Symfony\Bridge\Monolog\Processor\DebugProcessor">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="routing.resolver" class="Symfony\Component\Config\Loader\LoaderResolver">
      <call method="addLoader">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Definition\RouteLoader"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="Webkul\UVDesk\ExtensionFrameworkBundle\Definition\RouteLoader"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.xml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.php"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.glob"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.container"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.file"/>
      </call>
    </service>
    <service id="routing.loader.xml" class="Symfony\Component\Routing\Loader\XmlFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>dev</argument>
    </service>
    <service id="routing.loader.yml" class="Symfony\Component\Routing\Loader\YamlFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>dev</argument>
    </service>
    <service id="routing.loader.php" class="Symfony\Component\Routing\Loader\PhpFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>dev</argument>
    </service>
    <service id="routing.loader.glob" class="Symfony\Component\Routing\Loader\GlobFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>dev</argument>
    </service>
    <service id="routing.loader.directory" class="Symfony\Component\Routing\Loader\DirectoryLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>dev</argument>
    </service>
    <service id="routing.loader.container" class="Symfony\Component\Routing\Loader\ContainerLoader">
      <tag name="routing.loader"/>
      <argument type="service" id=".service_locator.XWmhzGa"/>
      <argument>dev</argument>
    </service>
    <service id="routing.loader" class="Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader" public="true">
      <argument type="service" id="routing.resolver"/>
      <argument type="collection">
        <argument key="utf8">true</argument>
      </argument>
      <argument type="collection"/>
    </service>
    <service id="router.default" class="Symfony\Bundle\FrameworkBundle\Routing\Router">
      <tag name="monolog.logger" channel="router"/>
      <tag name="container.service_subscriber" id="routing.loader"/>
      <argument type="service" id=".service_locator.OSH1YoD.router.default"/>
      <argument>kernel::loadRoutes</argument>
      <argument type="collection">
        <argument key="cache_dir">/home/maksim/Desktop/uvdesk/var/cache/dev</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\CompiledUrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\CompiledUrlGeneratorDumper</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableCompiledUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\CompiledUrlMatcherDumper</argument>
        <argument key="strict_requirements">true</argument>
        <argument key="resource_type">service</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="parameter_bag" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.router" on-invalid="ignore"/>
      <argument>en</argument>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="addExpressionLanguageProvider">
        <argument type="service" id="router.expression_language_provider"/>
      </call>
    </service>
    <service id="router.request_context" class="Symfony\Component\Routing\RequestContext">
      <argument></argument>
      <argument>localhost</argument>
      <argument>http</argument>
      <argument>80</argument>
      <argument>443</argument>
      <call method="setParameter">
        <argument>_functions</argument>
        <argument type="service" id="router.expression_language_provider" on-invalid="ignore"/>
      </call>
      <factory class="Symfony\Component\Routing\RequestContext" method="fromUri"/>
    </service>
    <service id="router.expression_language_provider" class="Symfony\Component\Routing\Matcher\ExpressionLanguageProvider">
      <tag name="routing.expression_language_provider"/>
      <argument type="service" id=".service_locator.Kr.dDlB"/>
    </service>
    <service id="router.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer">
      <tag name="container.service_subscriber" id="router"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.oCg4uHe.router.cache_warmer"/>
    </service>
    <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
      <argument>/home/maksim/Desktop/uvdesk</argument>
      <argument>true</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" class="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" public="true">
      <argument type="service" id="router.default"/>
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpPort"/>
        </service>
      </argument>
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpsPort"/>
        </service>
      </argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" class="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" public="true">
      <argument type="service" id="twig" on-invalid="ignore"/>
    </service>
    <service id="routing.loader.annotation" class="Symfony\Bundle\FrameworkBundle\Routing\AnnotatedRouteControllerLoader">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="annotations.cached_reader" on-invalid="null"/>
      <argument>dev</argument>
    </service>
    <service id="routing.loader.annotation.directory" class="Symfony\Component\Routing\Loader\AnnotationDirectoryLoader">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id="routing.loader.annotation.file" class="Symfony\Component\Routing\Loader\AnnotationFileLoader">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id="annotations.reader" class="Doctrine\Common\Annotations\AnnotationReader">
      <call method="addGlobalIgnoredName">
        <argument>required</argument>
        <argument type="service" id="annotations.dummy_registry" on-invalid="null"/>
      </call>
    </service>
    <service id="annotations.dummy_registry" class="Doctrine\Common\Annotations\AnnotationRegistry">
      <call method="registerUniqueLoader">
        <argument>class_exists</argument>
      </call>
    </service>
    <service id="annotations.cached_reader" class="Doctrine\Common\Annotations\PsrCachedReader">
      <tag name="annotations.cached_reader"/>
      <tag name="container.do_not_inline"/>
      <argument type="service" id="annotations.reader"/>
      <argument type="service">
        <service class="Symfony\Component\Cache\Adapter\ArrayAdapter"/>
      </argument>
      <argument>true</argument>
      <argument type="service_closure" id="annotations.cache_adapter"/>
    </service>
    <service id="annotations.filesystem_cache_adapter" class="Symfony\Component\Cache\Adapter\FilesystemAdapter">
      <argument></argument>
      <argument>0</argument>
      <argument type="abstract">Cache-Directory</argument>
    </service>
    <service id="annotations.filesystem_cache" class="Doctrine\Common\Cache\Psr6\DoctrineProvider">
      <argument type="service" id="annotations.filesystem_cache_adapter"/>
      <factory class="Doctrine\Common\Cache\Psr6\DoctrineProvider" method="wrap"/>
      <deprecated package="symfony/framework-bundle" version="5.4">"%service_id% is deprecated"</deprecated>
    </service>
    <service id="annotations.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\AnnotationsCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="annotations.reader"/>
      <argument>/home/maksim/Desktop/uvdesk/var/cache/dev/annotations.php</argument>
      <argument>#^Symfony\\(?:Component\\HttpKernel\\|Bundle\\FrameworkBundle\\Controller\\(?!.*Controller$))#</argument>
      <argument>true</argument>
    </service>
    <service id="annotations.cache_adapter" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter">
      <tag name="container.hot_path"/>
      <argument>/home/maksim/Desktop/uvdesk/var/cache/dev/annotations.php</argument>
      <argument type="service" id="cache.annotations"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="annotations.cache" class="Doctrine\Common\Cache\Psr6\DoctrineProvider">
      <argument type="service" id="annotations.cache_adapter"/>
      <factory class="Doctrine\Common\Cache\Psr6\DoctrineProvider" method="wrap"/>
      <deprecated package="symfony/framework-bundle" version="5.4">"%service_id% is deprecated"</deprecated>
    </service>
    <service id="property_accessor" class="Symfony\Component\PropertyAccess\PropertyAccessor">
      <argument>3</argument>
      <argument>2</argument>
      <argument type="service" id="cache.property_access" on-invalid="ignore"/>
      <argument type="service" id="property_info.reflection_extractor" on-invalid="null"/>
      <argument type="service" id="property_info.reflection_extractor" on-invalid="null"/>
    </service>
    <service id="secrets.vault" class="Symfony\Bundle\FrameworkBundle\Secrets\SodiumVault">
      <tag name="container.env_var_loader"/>
      <argument>/home/maksim/Desktop/uvdesk/config/secrets/%env(default:kernel.environment:APP_RUNTIME_ENV)%</argument>
      <argument type="service" id="secrets.decryption_key" on-invalid="ignore"/>
    </service>
    <service id="secrets.decryption_key" class="Symfony\Component\String\LazyString">
      <argument type="service" id="container.getenv"/>
      <argument>base64:default::SYMFONY_DECRYPTION_SECRET</argument>
      <factory class="Symfony\Component\String\LazyString" method="fromCallable"/>
    </service>
    <service id="secrets.local_vault" class="Symfony\Bundle\FrameworkBundle\Secrets\DotenvVault">
      <argument>/home/maksim/Desktop/uvdesk/.env.dev.local</argument>
    </service>
    <service id="serializer" class="Symfony\Component\Serializer\Serializer" public="true">
      <tag name="container.private" package="symfony/framework-bundle" version="5.2"/>
      <argument type="collection">
        <argument type="service" id="serializer.denormalizer.unwrapping"/>
        <argument type="service" id="serializer.normalizer.problem"/>
        <argument type="service" id="serializer.normalizer.uid"/>
        <argument type="service" id="serializer.normalizer.datetime"/>
        <argument type="service" id="serializer.normalizer.constraint_violation_list"/>
        <argument type="service" id="serializer.normalizer.mime_message"/>
        <argument type="service" id="serializer.normalizer.datetimezone"/>
        <argument type="service" id="serializer.normalizer.dateinterval"/>
        <argument type="service" id="serializer.normalizer.form_error"/>
        <argument type="service" id="serializer.normalizer.backed_enum"/>
        <argument type="service" id="serializer.normalizer.data_uri"/>
        <argument type="service" id="serializer.normalizer.json_serializable"/>
        <argument type="service" id="serializer.denormalizer.array"/>
        <argument type="service" id="serializer.normalizer.object"/>
      </argument>
      <argument type="collection">
        <argument type="service" id="serializer.encoder.xml"/>
        <argument type="service" id="serializer.encoder.json"/>
        <argument type="service" id="serializer.encoder.yaml"/>
        <argument type="service" id="serializer.encoder.csv"/>
      </argument>
    </service>
    <service id="serializer.mapping.class_discriminator_resolver" class="Symfony\Component\Serializer\Mapping\ClassDiscriminatorFromClassMetadata">
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="serializer.normalizer.constraint_violation_list" class="Symfony\Component\Serializer\Normalizer\ConstraintViolationListNormalizer" autowire="true">
      <tag name="serializer.normalizer" priority="-915"/>
      <argument type="collection"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
    </service>
    <service id="serializer.normalizer.mime_message" class="Symfony\Component\Serializer\Normalizer\MimeMessageNormalizer">
      <tag name="serializer.normalizer" priority="-915"/>
      <argument type="service" id="serializer.normalizer.property"/>
    </service>
    <service id="serializer.normalizer.datetimezone" class="Symfony\Component\Serializer\Normalizer\DateTimeZoneNormalizer">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="serializer.normalizer.dateinterval" class="Symfony\Component\Serializer\Normalizer\DateIntervalNormalizer">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="serializer.normalizer.data_uri" class="Symfony\Component\Serializer\Normalizer\DataUriNormalizer">
      <tag name="serializer.normalizer" priority="-920"/>
      <argument type="service" id="mime_types" on-invalid="null"/>
    </service>
    <service id="serializer.normalizer.datetime" class="Symfony\Component\Serializer\Normalizer\DateTimeNormalizer">
      <tag name="serializer.normalizer" priority="-910"/>
    </service>
    <service id="serializer.normalizer.json_serializable" class="Symfony\Component\Serializer\Normalizer\JsonSerializableNormalizer">
      <tag name="serializer.normalizer" priority="-950"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="serializer.normalizer.problem" class="Symfony\Component\Serializer\Normalizer\ProblemNormalizer">
      <tag name="serializer.normalizer" priority="-890"/>
      <argument>true</argument>
    </service>
    <service id="serializer.denormalizer.unwrapping" class="Symfony\Component\Serializer\Normalizer\UnwrappingDenormalizer">
      <tag name="serializer.normalizer" priority="1000"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="serializer.normalizer.uid" class="Symfony\Component\Serializer\Normalizer\UidNormalizer">
      <tag name="serializer.normalizer" priority="-890"/>
    </service>
    <service id="serializer.normalizer.form_error" class="Symfony\Component\Serializer\Normalizer\FormErrorNormalizer">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="serializer.normalizer.object" class="Symfony\Component\Serializer\Normalizer\ObjectNormalizer">
      <tag name="serializer.normalizer" priority="-1000"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="property_info" on-invalid="ignore"/>
      <argument type="service" id="serializer.mapping.class_discriminator_resolver" on-invalid="ignore"/>
      <argument>null</argument>
      <argument type="collection"/>
      <argument type="service" id="property_info" on-invalid="ignore"/>
    </service>
    <service id="serializer.normalizer.property" class="Symfony\Component\Serializer\Normalizer\PropertyNormalizer">
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
      <argument type="service" id="property_info" on-invalid="ignore"/>
      <argument type="service" id="serializer.mapping.class_discriminator_resolver" on-invalid="ignore"/>
      <argument>null</argument>
      <argument type="collection"/>
    </service>
    <service id="serializer.denormalizer.array" class="Symfony\Component\Serializer\Normalizer\ArrayDenormalizer">
      <tag name="serializer.normalizer" priority="-990"/>
    </service>
    <service id="serializer.mapping.chain_loader" class="Symfony\Component\Serializer\Mapping\Loader\LoaderChain">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\AnnotationLoader">
            <argument type="service" id="annotations.cached_reader" on-invalid="null"/>
          </service>
        </argument>
      </argument>
    </service>
    <service id="serializer.mapping.class_metadata_factory" class="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactory">
      <argument type="service" id="serializer.mapping.chain_loader"/>
    </service>
    <service id="serializer.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\SerializerCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\AnnotationLoader">
            <argument type="service" id="annotations.cached_reader" on-invalid="null"/>
          </service>
        </argument>
      </argument>
      <argument>/home/maksim/Desktop/uvdesk/var/cache/dev/serialization.php</argument>
    </service>
    <service id="serializer.mapping.cache.symfony" class="Psr\Cache\CacheItemPoolInterface">
      <argument>/home/maksim/Desktop/uvdesk/var/cache/dev/serialization.php</argument>
      <argument type="service" id="cache.serializer"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="serializer.encoder.xml" class="Symfony\Component\Serializer\Encoder\XmlEncoder">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.encoder.json" class="Symfony\Component\Serializer\Encoder\JsonEncoder">
      <tag name="serializer.encoder"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="serializer.encoder.yaml" class="Symfony\Component\Serializer\Encoder\YamlEncoder">
      <tag name="serializer.encoder"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="serializer.encoder.csv" class="Symfony\Component\Serializer\Encoder\CsvEncoder">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.name_converter.camel_case_to_snake_case" class="Symfony\Component\Serializer\NameConverter\CamelCaseToSnakeCaseNameConverter"/>
    <service id="serializer.name_converter.metadata_aware" class="Symfony\Component\Serializer\NameConverter\MetadataAwareNameConverter">
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="property_info.serializer_extractor" class="Symfony\Component\PropertyInfo\Extractor\SerializerExtractor">
      <tag name="property_info.list_extractor" priority="-999"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="error_handler.error_renderer.serializer" class="Symfony\Component\ErrorHandler\ErrorRenderer\SerializerErrorRenderer">
      <argument type="service" id="serializer"/>
      <argument type="service">
        <service>
          <argument type="service" id="request_stack"/>
          <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\SerializerErrorRenderer" method="getPreferredFormat"/>
        </service>
      </argument>
      <argument type="service" id="twig.error_renderer.html"/>
      <argument type="service">
        <service>
          <argument type="service" id="request_stack"/>
          <argument>true</argument>
          <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="isDebug"/>
        </service>
      </argument>
    </service>
    <service id="serializer.normalizer.backed_enum" class="Symfony\Component\Serializer\Normalizer\BackedEnumNormalizer">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="property_info" class="Symfony\Component\PropertyInfo\PropertyInfoExtractor">
      <argument type="iterator">
        <argument type="service" id="property_info.serializer_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
        <argument type="service" id="property_info.phpstan_extractor"/>
        <argument type="service" id="property_info.php_doc_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="property_info.php_doc_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
    </service>
    <service id="property_info.reflection_extractor" class="Symfony\Component\PropertyInfo\Extractor\ReflectionExtractor">
      <tag name="property_info.list_extractor" priority="-1000"/>
      <tag name="property_info.type_extractor" priority="-1002"/>
      <tag name="property_info.access_extractor" priority="-1000"/>
      <tag name="property_info.initializable_extractor" priority="-1000"/>
    </service>
    <service id="property_info.phpstan_extractor" class="Symfony\Component\PropertyInfo\Extractor\PhpStanExtractor">
      <tag name="property_info.type_extractor" priority="-1000"/>
    </service>
    <service id="property_info.php_doc_extractor" class="Symfony\Component\PropertyInfo\Extractor\PhpDocExtractor">
      <tag name="property_info.description_extractor" priority="-1000"/>
      <tag name="property_info.type_extractor" priority="-1001"/>
    </service>
    <service id="web_link.add_link_header_listener" class="Symfony\Component\WebLink\EventListener\AddLinkHeaderListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id=".cache_connection.GD_MSZC" class="Symfony\Component\Cache\Adapter\AbstractAdapter">
      <argument>redis://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id=".cache_connection.JKE6keX" class="Symfony\Component\Cache\Adapter\AbstractAdapter">
      <argument>memcached://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id="cache.property_access" class="Symfony\Component\Cache\Adapter\ArrayAdapter">
      <argument>0</argument>
      <argument>false</argument>
    </service>
    <service id=".session.do-not-use" class="Symfony\Component\HttpFoundation\Session\Session">
      <factory service="session.factory" method="createSession"/>
    </service>
    <service id="session.factory" class="Symfony\Component\HttpFoundation\Session\SessionFactory">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="session.storage.factory.native"/>
      <argument type="collection">
        <argument type="service" id="session_listener"/>
        <argument>onSessionUsage</argument>
      </argument>
    </service>
    <service id="session.storage.factory.native" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorageFactory">
      <argument>%session.storage.options%</argument>
      <argument type="service" id="session.handler.native"/>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag">
          <argument>_sf2_meta</argument>
          <argument>0</argument>
        </service>
      </argument>
      <argument>true</argument>
    </service>
    <service id="session.storage.factory.php_bridge" class="Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorageFactory">
      <argument type="service" id="session.handler.native"/>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag">
          <argument>_sf2_meta</argument>
          <argument>0</argument>
        </service>
      </argument>
      <argument>true</argument>
    </service>
    <service id="session.storage.factory.mock_file" class="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorageFactory">
      <argument>/home/maksim/Desktop/uvdesk/var/cache/dev/sessions</argument>
      <argument>MOCKSESSID</argument>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag">
          <argument>_sf2_meta</argument>
          <argument>0</argument>
        </service>
      </argument>
    </service>
    <service id="session.storage.factory.service" class="Symfony\Bundle\FrameworkBundle\Session\ServiceSessionFactory">
      <argument type="service" id="session.storage"/>
      <deprecated package="symfony/framework-bundle" version="5.3">The "%service_id%" service is deprecated, use "session.storage.factory.native", "session.storage.factory.php_bridge" or "session.storage.factory.mock_file" instead.</deprecated>
    </service>
    <service id=".session.deprecated" class="Symfony\Component\HttpFoundation\Session\SessionInterface">
      <factory method="getSession">
        <service class="Symfony\Bundle\FrameworkBundle\Session\DeprecatedSessionFactory">
          <argument type="service" id="request_stack"/>
        </service>
      </factory>
    </service>
    <service id="session.flash_bag" class="Symfony\Component\HttpFoundation\Session\Flash\FlashBag">
      <factory service=".session.do-not-use" method="getFlashBag"/>
      <deprecated package="symfony/framework-bundle" version="5.1">The "%service_id%" service is deprecated, use "$session-&gt;getFlashBag()" instead.</deprecated>
    </service>
    <service id="session.attribute_bag" class="Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag">
      <argument>attributes</argument>
      <factory service=".session.do-not-use" method="getBag"/>
      <deprecated package="symfony/framework-bundle" version="5.1">The "%service_id%" service is deprecated, use "$session-&gt;getAttributeBag()" instead.</deprecated>
    </service>
    <service id="session.handler.native" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler">
      <argument type="service">
        <service class="SessionHandler"/>
      </argument>
    </service>
    <service id="session.handler.native_file" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler">
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler">
          <argument>null</argument>
        </service>
      </argument>
    </service>
    <service id="session.abstract_handler" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler">
      <argument type="abstract">A string or a connection object</argument>
      <factory class="Symfony\Component\HttpFoundation\Session\Storage\Handler\SessionHandlerFactory" method="createHandler"/>
    </service>
    <service id="session_listener" class="Symfony\Component\HttpKernel\EventListener\SessionListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id=".service_locator.XmPJruK"/>
      <argument>true</argument>
      <argument>%session.storage.options%</argument>
    </service>
    <service id="session.marshaller" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\IdentityMarshaller"/>
    <service id="security.csrf.token_generator" class="Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator"/>
    <service id="security.csrf.token_storage" class="Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.csrf.token_manager" class="Symfony\Component\Security\Csrf\CsrfTokenManager" public="true">
      <tag name="container.private" package="symfony/framework-bundle" version="5.2"/>
      <argument type="service" id="security.csrf.token_generator"/>
      <argument type="service" id="security.csrf.token_storage"/>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="twig.runtime.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="security.csrf.token_manager"/>
    </service>
    <service id="twig.extension.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="form.resolved_type_factory" class="Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy">
      <argument type="service">
        <service class="Symfony\Component\Form\ResolvedFormTypeFactory"/>
      </argument>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="form.registry" class="Symfony\Component\Form\FormRegistry">
      <argument type="collection">
        <argument type="service" id="form.extension"/>
      </argument>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.factory" class="Symfony\Component\Form\FormFactory" public="true">
      <tag name="container.private" package="symfony/framework-bundle" version="5.2"/>
      <argument type="service" id="form.registry"/>
    </service>
    <service id="form.extension" class="Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension">
      <argument type="service" id=".service_locator.X9CzMyE"/>
      <argument type="collection">
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="iterator">
          <argument type="service" id="form.type_extension.form.transformation_failure_handling"/>
          <argument type="service" id="form.type_extension.form.http_foundation"/>
          <argument type="service" id="form.type_extension.form.validator"/>
          <argument type="service" id="form.type_extension.upload.validator"/>
          <argument type="service" id="form.type_extension.csrf"/>
          <argument type="service" id="form.type_extension.form.data_collector"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\RepeatedType" type="iterator">
          <argument type="service" id="form.type_extension.repeated.validator"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\SubmitType" type="iterator">
          <argument type="service" id="form.type_extension.submit.validator"/>
        </argument>
      </argument>
      <argument type="iterator">
        <argument type="service" id="form.type_guesser.validator"/>
        <argument type="service" id="form.type_guesser.doctrine"/>
      </argument>
    </service>
    <service id="form.type_guesser.validator" class="Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="form.choice_list_factory.default" class="Symfony\Component\Form\ChoiceList\Factory\DefaultChoiceListFactory"/>
    <service id="form.choice_list_factory.property_access" class="Symfony\Component\Form\ChoiceList\Factory\PropertyAccessDecorator">
      <argument type="service" id="form.choice_list_factory.default"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.choice_list_factory.cached" class="Symfony\Component\Form\ChoiceList\Factory\CachingFactoryDecorator">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="form.choice_list_factory.property_access"/>
    </service>
    <service id="form.type.form" class="Symfony\Component\Form\Extension\Core\Type\FormType">
      <tag name="form.type"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.type.choice" class="Symfony\Component\Form\Extension\Core\Type\ChoiceType">
      <tag name="form.type"/>
      <argument type="service" id="form.choice_list_factory.cached"/>
      <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
    </service>
    <service id="form.type.file" class="Symfony\Component\Form\Extension\Core\Type\FileType" public="true">
      <tag name="form.type"/>
      <tag name="container.private" package="symfony/framework-bundle" version="5.2"/>
      <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
    </service>
    <service id="form.type.color" class="Symfony\Component\Form\Extension\Core\Type\ColorType">
      <tag name="form.type"/>
      <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
    </service>
    <service id="form.type_extension.form.transformation_failure_handling" class="Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension">
      <tag name="form.type_extension" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
    </service>
    <service id="form.type_extension.form.http_foundation" class="Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension">
      <tag name="form.type_extension"/>
      <argument type="service" id="form.type_extension.form.request_handler"/>
    </service>
    <service id="form.type_extension.form.request_handler" class="Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler">
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="form.server_params" class="Symfony\Component\Form\Util\ServerParams">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="form.type_extension.form.validator" class="Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension">
      <tag name="form.type_extension" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="debug.validator"/>
      <argument>true</argument>
      <argument type="service" id="twig.form.renderer" on-invalid="ignore"/>
      <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
    </service>
    <service id="form.type_extension.repeated.validator" class="Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension">
      <tag name="form.type_extension"/>
    </service>
    <service id="form.type_extension.submit.validator" class="Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension">
      <tag name="form.type_extension" extended-type="Symfony\Component\Form\Extension\Core\Type\SubmitType"/>
    </service>
    <service id="form.type_extension.upload.validator" class="Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension">
      <tag name="form.type_extension"/>
      <argument type="service" id="translator.data_collector"/>
      <argument>validators</argument>
    </service>
    <service id="form.type_extension.csrf" class="Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension">
      <tag name="form.type_extension"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <argument>true</argument>
      <argument>_token</argument>
      <argument type="service" id="translator.data_collector" on-invalid="null"/>
      <argument>validators</argument>
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="validator.builder" class="Symfony\Component\Validator\ValidatorBuilder">
      <call method="setConstraintValidatorFactory">
        <argument type="service" id="validator.validator_factory"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
      </call>
      <call method="setTranslationDomain">
        <argument>validators</argument>
      </call>
      <call method="addXmlMappings">
        <argument type="collection">
          <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/form/Resources/config/validation.xml</argument>
        </argument>
      </call>
      <call method="addYamlMappings">
        <argument type="collection">
          <argument>/home/maksim/Desktop/uvdesk/vendor/uvdesk/core-framework/Resources/config/validation.yaml</argument>
          <argument>/home/maksim/Desktop/uvdesk/vendor/uvdesk/support-center-bundle/Resources/config/validation.yaml</argument>
        </argument>
      </call>
      <call method="enableAnnotationMapping">
        <argument>true</argument>
      </call>
      <call method="setDoctrineAnnotationReader">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
      <call method="addMethodMapping">
        <argument>loadValidatorMetadata</argument>
      </call>
      <call method="addObjectInitializers">
        <argument type="collection">
          <argument type="service" id="doctrine.orm.validator_initializer"/>
        </argument>
      </call>
      <call method="addLoader">
        <argument type="service" id="validator.property_info_loader"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="doctrine.orm.default_entity_manager.validator_loader"/>
      </call>
      <factory class="Symfony\Component\Validator\Validation" method="createValidatorBuilder"/>
    </service>
    <service id="validator.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ValidatorCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="validator.builder"/>
      <argument>/home/maksim/Desktop/uvdesk/var/cache/dev/validation.php</argument>
    </service>
    <service id="validator.mapping.cache.adapter" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter">
      <argument>/home/maksim/Desktop/uvdesk/var/cache/dev/validation.php</argument>
      <argument type="service" id="cache.validator"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="validator.validator_factory" class="Symfony\Component\Validator\ContainerConstraintValidatorFactory">
      <argument type="service" id=".service_locator.19_mNxd"/>
    </service>
    <service id="validator.expression" class="Symfony\Component\Validator\Constraints\ExpressionValidator">
      <tag name="validator.constraint_validator" alias="validator.expression"/>
      <argument type="service" id="validator.expression_language" on-invalid="null"/>
    </service>
    <service id="validator.expression_language" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage">
      <argument type="service" id="cache.validator_expression_language" on-invalid="null"/>
    </service>
    <service id="cache.validator_expression_language" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.validator_expression_language.recorder_inner"/>
    </service>
    <service id="validator.email" class="Symfony\Component\Validator\Constraints\EmailValidator">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\EmailValidator"/>
      <argument>html5</argument>
    </service>
    <service id="validator.not_compromised_password" class="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator"/>
      <argument type="service" id=".debug.http_client" on-invalid="null"/>
      <argument>UTF-8</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="validator.property_info_loader" class="Symfony\Component\Validator\Mapping\Loader\PropertyInfoLoader">
      <tag name="validator.auto_mapper"/>
      <argument type="service" id="property_info"/>
      <argument type="service" id="property_info"/>
      <argument type="service" id="property_info"/>
      <argument>null</argument>
    </service>
    <service id="notifier" class="Symfony\Component\Notifier\Notifier">
      <argument type="service" id=".service_locator.UkE3SaZ"/>
      <argument type="service" id="notifier.channel_policy" on-invalid="ignore"/>
      <call method="addAdminRecipient">
        <argument type="service" id="notifier.admin_recipient.0"/>
      </call>
    </service>
    <service id="notifier.channel_policy" class="Symfony\Component\Notifier\Channel\ChannelPolicy">
      <argument type="collection">
        <argument key="urgent" type="collection">
          <argument>email</argument>
        </argument>
        <argument key="high" type="collection">
          <argument>email</argument>
        </argument>
        <argument key="medium" type="collection">
          <argument>email</argument>
        </argument>
        <argument key="low" type="collection">
          <argument>email</argument>
        </argument>
      </argument>
    </service>
    <service id="notifier.channel.browser" class="Symfony\Component\Notifier\Channel\BrowserChannel">
      <tag name="notifier.channel" channel="browser"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="notifier.channel.chat" class="Symfony\Component\Notifier\Channel\ChatChannel">
      <tag name="notifier.channel" channel="chat"/>
      <argument type="service" id="chatter.transports"/>
      <argument>null</argument>
    </service>
    <service id="notifier.channel.sms" class="Symfony\Component\Notifier\Channel\SmsChannel">
      <tag name="notifier.channel" channel="sms"/>
      <argument type="service" id="texter.transports"/>
      <argument>null</argument>
    </service>
    <service id="notifier.channel.email" class="Symfony\Component\Notifier\Channel\EmailChannel">
      <tag name="notifier.channel" channel="email"/>
      <argument type="service" id="mailer.transports"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="notifier.channel.push" class="Symfony\Component\Notifier\Channel\PushChannel">
      <tag name="notifier.channel" channel="push"/>
      <argument type="service" id="texter.transports"/>
      <argument>null</argument>
    </service>
    <service id="notifier.monolog_handler" class="Symfony\Bridge\Monolog\Handler\NotifierHandler">
      <argument type="service" id="notifier"/>
    </service>
    <service id="notifier.failed_message_listener" class="Symfony\Component\Notifier\EventListener\SendFailedMessageToNotifierListener">
      <argument type="service" id="notifier"/>
    </service>
    <service id="chatter.transports" class="Symfony\Component\Notifier\Transport\Transports">
      <argument type="collection"/>
      <factory service="chatter.transport_factory" method="fromStrings"/>
    </service>
    <service id="chatter.transport_factory" class="Symfony\Component\Notifier\Transport">
      <argument type="tagged_iterator" tag="chatter.transport_factory"/>
    </service>
    <service id="chatter.messenger.chat_handler" class="Symfony\Component\Notifier\Messenger\MessageHandler">
      <tag name="messenger.message_handler" handles="Symfony\Component\Notifier\Message\ChatMessage"/>
      <argument type="service" id="chatter.transports"/>
    </service>
    <service id="texter.transports" class="Symfony\Component\Notifier\Transport\Transports">
      <argument type="collection"/>
      <factory service="texter.transport_factory" method="fromStrings"/>
    </service>
    <service id="texter.transport_factory" class="Symfony\Component\Notifier\Transport">
      <argument type="tagged_iterator" tag="texter.transport_factory"/>
    </service>
    <service id="texter.messenger.sms_handler" class="Symfony\Component\Notifier\Messenger\MessageHandler">
      <tag name="messenger.message_handler" handles="Symfony\Component\Notifier\Message\SmsMessage"/>
      <argument type="service" id="texter.transports"/>
    </service>
    <service id="texter.messenger.push_handler" class="Symfony\Component\Notifier\Messenger\MessageHandler">
      <tag name="messenger.message_handler" handles="Symfony\Component\Notifier\Message\PushMessage"/>
      <argument type="service" id="texter.transports"/>
    </service>
    <service id="notifier.logger_notification_listener" class="Symfony\Component\Notifier\EventListener\NotificationLoggerListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="notifier.transport_factory.abstract" class="Symfony\Component\Notifier\Transport\AbstractTransportFactory" abstract="true">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id=".debug.http_client" on-invalid="ignore"/>
    </service>
    <service id="notifier.transport_factory.null" class="Symfony\Component\Notifier\Transport\NullTransportFactory">
      <tag name="chatter.transport_factory"/>
      <tag name="texter.transport_factory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id=".debug.http_client" on-invalid="ignore"/>
    </service>
    <service id="notifier.admin_recipient.0" class="Symfony\Component\Notifier\Recipient\Recipient">
      <argument>admin@example.com</argument>
      <argument></argument>
    </service>
    <service id="profiler" class="Symfony\Component\HttpKernel\Profiler\Profiler" public="true">
      <tag name="monolog.logger" channel="profiler"/>
      <tag name="container.private" package="symfony/framework-bundle" version="5.4"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="profiler.storage"/>
      <argument type="service" id="monolog.logger.profiler" on-invalid="null"/>
      <argument>true</argument>
      <call method="add">
        <argument type="service" id="data_collector.request"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.time"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.memory"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.validator"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.ajax"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.form"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.exception"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.logger"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.events"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.router"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.cache"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.translation"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.security"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.twig"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.http_client"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.doctrine"/>
      </call>
      <call method="add">
        <argument type="service" id="swiftmailer.data_collector"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.dump"/>
      </call>
      <call method="add">
        <argument type="service" id="mailer.data_collector"/>
      </call>
      <call method="add">
        <argument type="service" id="notifier.data_collector"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.config"/>
      </call>
    </service>
    <service id="profiler.storage" class="Symfony\Component\HttpKernel\Profiler\FileProfilerStorage">
      <argument>file:/home/maksim/Desktop/uvdesk/var/cache/dev/profiler</argument>
    </service>
    <service id="profiler_listener" class="Symfony\Component\HttpKernel\EventListener\ProfilerListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="profiler"/>
      <argument type="service" id="request_stack"/>
      <argument>null</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument>null</argument>
    </service>
    <service id="data_collector.config" class="Symfony\Component\HttpKernel\DataCollector\ConfigDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/config.html.twig" id="config" priority="-255"/>
      <call method="setKernel">
        <argument type="service" id="kernel" on-invalid="ignore"/>
      </call>
    </service>
    <service id="data_collector.request" class="Symfony\Component\HttpKernel\DataCollector\RequestDataCollector">
      <tag name="kernel.event_subscriber"/>
      <tag name="data_collector" template="@WebProfiler/Collector/request.html.twig" id="request" priority="335"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="data_collector.request.session_collector" class="Closure">
      <argument type="collection">
        <argument type="service" id="data_collector.request"/>
        <argument>collectSessionUsage</argument>
      </argument>
      <factory class="Closure" method="fromCallable"/>
    </service>
    <service id="data_collector.ajax" class="Symfony\Component\HttpKernel\DataCollector\AjaxDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/ajax.html.twig" id="ajax" priority="315"/>
    </service>
    <service id="data_collector.exception" class="Symfony\Component\HttpKernel\DataCollector\ExceptionDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/exception.html.twig" id="exception" priority="305"/>
    </service>
    <service id="data_collector.events" class="Symfony\Component\HttpKernel\DataCollector\EventDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/events.html.twig" id="events" priority="290"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="ignore"/>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="data_collector.logger" class="Symfony\Component\HttpKernel\DataCollector\LoggerDataCollector">
      <tag name="monolog.logger" channel="profiler"/>
      <tag name="data_collector" template="@WebProfiler/Collector/logger.html.twig" id="logger" priority="300"/>
      <argument type="service" id="monolog.logger.profiler" on-invalid="ignore"/>
      <argument>/home/maksim/Desktop/uvdesk/var/cache/dev/App_KernelDevDebugContainer</argument>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="data_collector.time" class="Symfony\Component\HttpKernel\DataCollector\TimeDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/time.html.twig" id="time" priority="330"/>
      <argument type="service" id="kernel" on-invalid="ignore"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id="data_collector.memory" class="Symfony\Component\HttpKernel\DataCollector\MemoryDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/memory.html.twig" id="memory" priority="325"/>
    </service>
    <service id="data_collector.router" class="Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector">
      <tag name="kernel.event_listener" event="kernel.controller" method="onKernelController"/>
      <tag name="data_collector" template="@WebProfiler/Collector/router.html.twig" id="router" priority="285"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="data_collector.cache" class="Symfony\Component\Cache\DataCollector\CacheDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/cache.html.twig" id="cache" priority="275"/>
      <call method="addInstance">
        <argument>cache.app</argument>
        <argument type="service" id="cache.app"/>
      </call>
      <call method="addInstance">
        <argument>cache.system</argument>
        <argument type="service" id="cache.system"/>
      </call>
      <call method="addInstance">
        <argument>cache.validator</argument>
        <argument type="service" id="cache.validator"/>
      </call>
      <call method="addInstance">
        <argument>cache.serializer</argument>
        <argument type="service" id="cache.serializer"/>
      </call>
      <call method="addInstance">
        <argument>cache.annotations</argument>
        <argument type="service" id="cache.annotations"/>
      </call>
      <call method="addInstance">
        <argument>cache.property_info</argument>
        <argument type="service" id="cache.property_info"/>
      </call>
      <call method="addInstance">
        <argument>cache.validator_expression_language</argument>
        <argument type="service" id="cache.validator_expression_language"/>
      </call>
      <call method="addInstance">
        <argument>cache.doctrine.orm.default.result</argument>
        <argument type="service" id="cache.doctrine.orm.default.result"/>
      </call>
      <call method="addInstance">
        <argument>cache.doctrine.orm.default.query</argument>
        <argument type="service" id="cache.doctrine.orm.default.query"/>
      </call>
      <call method="addInstance">
        <argument>cache.security_expression_language</argument>
        <argument type="service" id="cache.security_expression_language"/>
      </call>
    </service>
    <service id="cache_pool_clearer.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\CachePoolClearerCacheWarmer">
      <tag name="kernel.cache_warmer" priority="64"/>
      <argument type="service" id="cache.system_clearer"/>
      <argument type="collection">
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
      </argument>
    </service>
    <service id="form.type_extension.form.data_collector" class="Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension">
      <tag name="form.type_extension"/>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="data_collector.form.extractor" class="Symfony\Component\Form\Extension\DataCollector\FormDataExtractor"/>
    <service id="data_collector.form" class="Symfony\Component\Form\Extension\DataCollector\FormDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/form.html.twig" id="form" priority="310"/>
      <argument type="service" id="data_collector.form.extractor"/>
    </service>
    <service id="debug.validator" class="Symfony\Component\Validator\Validator\TraceableValidator">
      <tag name="container.private" package="symfony/framework-bundle" version="5.2"/>
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.decorator" id="validator"/>
      <argument type="service" id="debug.validator.inner"/>
    </service>
    <service id="data_collector.validator" class="Symfony\Component\Validator\DataCollector\ValidatorDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/validator.html.twig" id="validator" priority="320"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="translator.data_collector" class="Symfony\Component\Translation\DataCollectorTranslator">
      <argument type="service" id="translator.default"/>
    </service>
    <service id="data_collector.translation" class="Symfony\Component\Translation\DataCollector\TranslationDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/translation.html.twig" id="translation" priority="275"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="mailer.data_collector" class="Symfony\Component\Mailer\DataCollector\MessageDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/mailer.html.twig" id="mailer"/>
      <argument type="service" id="mailer.message_logger_listener"/>
    </service>
    <service id="data_collector.http_client" class="Symfony\Component\HttpClient\DataCollector\HttpClientDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/http_client.html.twig" id="http_client" priority="250"/>
      <call method="registerClient">
        <argument>http_client</argument>
        <argument type="service" id=".debug.http_client"/>
      </call>
    </service>
    <service id="notifier.data_collector" class="Symfony\Component\Notifier\DataCollector\NotificationDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/notifier.html.twig" id="notifier"/>
      <argument type="service" id="notifier.logger_notification_listener"/>
    </service>
    <service id="mime_types" class="Symfony\Component\Mime\MimeTypes">
      <call method="setDefault">
        <argument type="service" id="mime_types"/>
      </call>
    </service>
    <service id="doctrine.dbal.logger.chain" class="Doctrine\DBAL\Logging\LoggerChain">
      <argument type="collection">
        <argument type="service" id="doctrine.dbal.logger"/>
        <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
      </argument>
    </service>
    <service id="doctrine.dbal.logger.profiling" class="Doctrine\DBAL\Logging\DebugStack" abstract="true"/>
    <service id="doctrine.dbal.logger.backtrace" class="Doctrine\Bundle\DoctrineBundle\Dbal\Logging\BacktraceLogger" abstract="true"/>
    <service id="doctrine.dbal.logger" class="Symfony\Bridge\Doctrine\Logger\DbalLogger">
      <tag name="monolog.logger" channel="doctrine"/>
      <argument type="service" id="monolog.logger.doctrine" on-invalid="null"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="data_collector.doctrine" class="Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector">
      <tag name="data_collector" template="@Doctrine/Collector/db.html.twig" id="db" priority="250"/>
      <argument type="service" id="doctrine"/>
      <argument>true</argument>
      <argument>null</argument>
      <call method="addLogger">
        <argument>default</argument>
        <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.connection_factory" class="Doctrine\Bundle\DoctrineBundle\ConnectionFactory">
      <argument type="collection"/>
    </service>
    <service id="doctrine.dbal.connection" class="Doctrine\DBAL\Connection" abstract="true">
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="doctrine.dbal.connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" abstract="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.dbal.connection.configuration" class="Doctrine\DBAL\Configuration" abstract="true"/>
    <service id="doctrine" class="Doctrine\Bundle\DoctrineBundle\Registry" public="true">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="service_container"/>
      <argument>%doctrine.connections%</argument>
      <argument>%doctrine.entity_managers%</argument>
      <argument>default</argument>
      <argument>default</argument>
    </service>
    <service id="doctrine.twig.doctrine_extension" class="Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="doctrine.dbal.schema_asset_filter_manager" class="Doctrine\Bundle\DoctrineBundle\Dbal\SchemaAssetsFilterManager" abstract="true"/>
    <service id="doctrine.dbal.well_known_schema_asset_filter" class="Doctrine\Bundle\DoctrineBundle\Dbal\BlacklistSchemaAssetFilter">
      <argument type="collection"/>
    </service>
    <service id="doctrine.database_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\CreateDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:create"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:database:create</argument>
      </call>
    </service>
    <service id="doctrine.database_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\DropDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:drop"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:database:drop</argument>
      </call>
    </service>
    <service id="doctrine.query_sql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunSqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:sql"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider" on-invalid="null"/>
      <call method="setName">
        <argument>doctrine:query:sql</argument>
      </call>
    </service>
    <service id="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand" class="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand">
      <tag name="console.command" command="dbal:run-sql"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider" on-invalid="null"/>
      <call method="setName">
        <argument>dbal:run-sql</argument>
      </call>
    </service>
    <service id="Doctrine\Bundle\DoctrineBundle\Controller\ProfilerController" class="Doctrine\Bundle\DoctrineBundle\Controller\ProfilerController" public="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="profiler"/>
    </service>
    <service id="doctrine.database_import_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ImportDoctrineCommand">
      <tag name="console.command" command="doctrine:database:import"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:database:import</argument>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection.configuration" class="Doctrine\DBAL\Configuration">
      <call method="setSQLLogger">
        <argument type="service" id="doctrine.dbal.logger.chain.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.logger.profiling.default" class="Doctrine\DBAL\Logging\DebugStack"/>
    <service id="doctrine.dbal.logger.chain.default" class="Doctrine\DBAL\Logging\LoggerChain">
      <argument type="collection">
        <argument type="service" id="doctrine.dbal.logger"/>
        <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
      </argument>
    </service>
    <service id="doctrine.dbal.default_connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager">
      <argument type="service" id=".service_locator.GYNkv9O"/>
      <argument type="collection">
        <argument>doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_subscriber</argument>
        <argument>doctrine.orm.listeners.pdo_cache_adapter_doctrine_schema_subscriber</argument>
        <argument>doctrine.orm.listeners.doctrine_token_provider_schema_subscriber</argument>
        <argument type="collection">
          <argument type="collection">
            <argument>prePersist</argument>
          </argument>
          <argument>Webkul\UVDesk\CoreFrameworkBundle\EventListener\Doctrine\Lifecycle</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>preUpdate</argument>
          </argument>
          <argument>Webkul\UVDesk\CoreFrameworkBundle\EventListener\Doctrine\Lifecycle</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>postLoad</argument>
          </argument>
          <argument>Webkul\UVDesk\CoreFrameworkBundle\EventListener\Doctrine\Lifecycle</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>loadClassMetadata</argument>
          </argument>
          <argument>doctrine.orm.default_listeners.attach_entity_listeners</argument>
        </argument>
      </argument>
    </service>
    <service id="doctrine.dbal.default_connection" class="Doctrine\DBAL\Connection" public="true">
      <argument type="collection">
        <argument key="driver">pdo_mysql</argument>
        <argument key="charset">utf8mb4</argument>
        <argument key="url">%env(DATABASE_URL)%</argument>
        <argument key="host">localhost</argument>
        <argument key="port">null</argument>
        <argument key="user">root</argument>
        <argument key="password">null</argument>
        <argument key="driverOptions" type="collection">
          <argument key="1002">SET sql_mode=(SELECT REPLACE(@@sql_mode, "ONLY_FULL_GROUP_BY", ""))</argument>
        </argument>
        <argument key="serverVersion" type="string">5.7</argument>
        <argument key="defaultTableOptions" type="collection">
          <argument key="charset">utf8mb4</argument>
          <argument key="collate">utf8mb4_unicode_ci</argument>
        </argument>
      </argument>
      <argument type="service" id="doctrine.dbal.default_connection.configuration"/>
      <argument type="service" id="doctrine.dbal.default_connection.event_manager"/>
      <argument type="collection"/>
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider" class="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider">
      <argument type="service">
        <service class="Doctrine\Bundle\DoctrineBundle\Registry" public="true">
          <tag name="kernel.reset" method="reset"/>
          <argument type="service" id="service_container"/>
          <argument>%doctrine.connections%</argument>
          <argument>%doctrine.entity_managers%</argument>
          <argument>default</argument>
          <argument>default</argument>
        </service>
      </argument>
    </service>
    <service id=".1_ServiceLocator~WLK9a0k" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.proxy_cache_warmer" class="Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type_guesser.doctrine" class="Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type.entity" class="Symfony\Bridge\Doctrine\Form\Type\EntityType">
      <tag name="form.type" alias="entity"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.configuration" class="Doctrine\ORM\Configuration" abstract="true"/>
    <service id="doctrine.orm.entity_manager.abstract" class="Doctrine\ORM\EntityManager" lazy="true" abstract="true"/>
    <service id="doctrine.orm.container_repository_factory" class="Doctrine\Bundle\DoctrineBundle\Repository\ContainerRepositoryFactory">
      <argument type="service" id=".service_locator.du0z04N"/>
    </service>
    <service id="doctrine.orm.manager_configurator.abstract" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator" abstract="true">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.validator.unique" class="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator">
      <tag name="validator.constraint_validator" alias="doctrine.orm.validator.unique"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator_initializer" class="Symfony\Bridge\Doctrine\Validator\DoctrineInitializer">
      <tag name="validator.initializer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.security.user.provider" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.listeners.resolve_target_entity" class="Doctrine\ORM\Tools\ResolveTargetEntityListener"/>
    <service id="doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_subscriber" class="Symfony\Bridge\Doctrine\SchemaListener\DoctrineDbalCacheAdapterSchemaSubscriber">
      <tag name="doctrine.event_subscriber"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.listeners.pdo_cache_adapter_doctrine_schema_subscriber" class="Symfony\Bridge\Doctrine\SchemaListener\PdoCacheAdapterDoctrineSchemaSubscriber">
      <tag name="doctrine.event_subscriber"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.listeners.doctrine_token_provider_schema_subscriber" class="Symfony\Bridge\Doctrine\SchemaListener\RememberMeTokenProviderDoctrineSchemaSubscriber">
      <tag name="doctrine.event_subscriber"/>
      <argument type="tagged_iterator" tag="security.remember_me_handler"/>
    </service>
    <service id="doctrine.orm.naming_strategy.default" class="Doctrine\ORM\Mapping\DefaultNamingStrategy"/>
    <service id="doctrine.orm.naming_strategy.underscore" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy"/>
    <service id="doctrine.orm.naming_strategy.underscore_number_aware" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy">
      <argument>0</argument>
      <argument>true</argument>
    </service>
    <service id="doctrine.orm.quote_strategy.default" class="Doctrine\ORM\Mapping\DefaultQuoteStrategy"/>
    <service id="doctrine.orm.quote_strategy.ansi" class="Doctrine\ORM\Mapping\AnsiQuoteStrategy"/>
    <service id="doctrine.ulid_generator" class="Symfony\Bridge\Doctrine\IdGenerator\UlidGenerator">
      <tag name="doctrine.id_generator"/>
      <argument>null</argument>
    </service>
    <service id="doctrine.uuid_generator" class="Symfony\Bridge\Doctrine\IdGenerator\UuidGenerator">
      <tag name="doctrine.id_generator"/>
      <argument>null</argument>
    </service>
    <service id="doctrine.orm.command.entity_manager_provider" class="Doctrine\Bundle\DoctrineBundle\Orm\ManagerRegistryAwareEntityManagerProvider">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.cache_clear_metadata_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearMetadataCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-metadata"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-metadata</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_query_cache_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearQueryCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-query"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_result_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearResultCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-result"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-result</argument>
      </call>
    </service>
    <service id="doctrine.cache_collection_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\CollectionRegionDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-collection-region"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-collection-region</argument>
      </call>
    </service>
    <service id="doctrine.mapping_convert_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ConvertMappingDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:convert"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:mapping:convert</argument>
      </call>
    </service>
    <service id="doctrine.schema_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\CreateSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:create"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:schema:create</argument>
      </call>
    </service>
    <service id="doctrine.schema_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\DropSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:drop"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:schema:drop</argument>
      </call>
    </service>
    <service id="doctrine.ensure_production_settings_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\EnsureProductionSettingsDoctrineCommand">
      <tag name="console.command" command="doctrine:ensure-production-settings"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:ensure-production-settings</argument>
      </call>
    </service>
    <service id="doctrine.clear_entity_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\EntityRegionCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-entity-region"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-entity-region</argument>
      </call>
    </service>
    <service id="doctrine.mapping_info_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\InfoDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:info"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:mapping:info</argument>
      </call>
    </service>
    <service id="doctrine.clear_query_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\QueryRegionCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-query-region"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query-region</argument>
      </call>
    </service>
    <service id="doctrine.query_dql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunDqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:dql"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:query:dql</argument>
      </call>
    </service>
    <service id="doctrine.schema_update_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\UpdateSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:update"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:schema:update</argument>
      </call>
    </service>
    <service id="doctrine.schema_validate_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ValidateSchemaCommand">
      <tag name="console.command" command="doctrine:schema:validate"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:schema:validate</argument>
      </call>
    </service>
    <service id="doctrine.mapping_import_command" class="Doctrine\Bundle\DoctrineBundle\Command\ImportMappingDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:import"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine"/>
      <argument>%kernel.bundles%</argument>
      <call method="setName">
        <argument>doctrine:mapping:import</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_configuration" class="Doctrine\ORM\Configuration">
      <tag name="doctrine.orm.configuration"/>
      <call method="setEntityNamespaces">
        <argument type="collection">
          <argument key="App">App\Entity</argument>
          <argument key="UVDeskCoreFrameworkBundle">Webkul\UVDesk\CoreFrameworkBundle\Entity</argument>
          <argument key="UVDeskAutomationBundle">Webkul\UVDesk\AutomationBundle\Entity</argument>
          <argument key="UVDeskSupportCenterBundle">Webkul\UVDesk\SupportCenterBundle\Entity</argument>
          <argument key="UVDeskApiBundle">Webkul\UVDesk\ApiBundle\Entity</argument>
        </argument>
      </call>
      <call method="setMetadataCache">
        <argument type="service" id="cache.doctrine.orm.default.metadata"/>
      </call>
      <call method="setQueryCache">
        <argument type="service" id="cache.doctrine.orm.default.query"/>
      </call>
      <call method="setResultCache">
        <argument type="service" id="cache.doctrine.orm.default.result"/>
      </call>
      <call method="setMetadataDriverImpl">
        <argument type="service" id=".doctrine.orm.default_metadata_driver"/>
      </call>
      <call method="setProxyDir">
        <argument>/home/maksim/Desktop/uvdesk/var/cache/dev/doctrine/orm/Proxies</argument>
      </call>
      <call method="setProxyNamespace">
        <argument>Proxies</argument>
      </call>
      <call method="setAutoGenerateProxyClasses">
        <argument>true</argument>
      </call>
      <call method="setSchemaIgnoreClasses">
        <argument type="collection"/>
      </call>
      <call method="setClassMetadataFactoryName">
        <argument>Doctrine\Bundle\DoctrineBundle\Mapping\ClassMetadataFactory</argument>
      </call>
      <call method="setDefaultRepositoryClassName">
        <argument>Doctrine\ORM\EntityRepository</argument>
      </call>
      <call method="setNamingStrategy">
        <argument type="service" id="doctrine.orm.naming_strategy.underscore"/>
      </call>
      <call method="setQuoteStrategy">
        <argument type="service" id="doctrine.orm.quote_strategy.default"/>
      </call>
      <call method="setEntityListenerResolver">
        <argument type="service" id="doctrine.orm.default_entity_listener_resolver"/>
      </call>
      <call method="setRepositoryFactory">
        <argument type="service" id="doctrine.orm.container_repository_factory"/>
      </call>
    </service>
    <service id="doctrine.orm.default_annotation_metadata_driver" class="Doctrine\ORM\Mapping\Driver\AnnotationDriver">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="collection">
        <argument>/home/maksim/Desktop/uvdesk/src/Entity</argument>
        <argument>/home/maksim/Desktop/uvdesk/vendor/uvdesk/core-framework/Entity</argument>
        <argument>/home/maksim/Desktop/uvdesk/vendor/uvdesk/automation-bundle/Entity</argument>
        <argument>/home/maksim/Desktop/uvdesk/vendor/uvdesk/support-center-bundle/Entity</argument>
        <argument>/home/maksim/Desktop/uvdesk/vendor/uvdesk/api-bundle/Entity</argument>
      </argument>
    </service>
    <service id="cache.doctrine.orm.default.metadata" class="Symfony\Component\Cache\Adapter\ArrayAdapter"/>
    <service id="cache.doctrine.orm.default.result" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.doctrine.orm.default.result.recorder_inner"/>
    </service>
    <service id="cache.doctrine.orm.default.query" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.doctrine.orm.default.query.recorder_inner"/>
    </service>
    <service id="doctrine.orm.default_entity_listener_resolver" class="Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.orm.default_listeners.attach_entity_listeners" class="Doctrine\ORM\Tools\AttachEntityListenersListener">
      <tag name="doctrine.event_listener" event="loadClassMetadata"/>
    </service>
    <service id="doctrine.orm.default_manager_configurator" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.default_entity_manager" class="Doctrine\ORM\EntityManager" public="true" lazy="true">
      <tag name="container.preload" class="Doctrine\ORM\Proxy\Autoloader"/>
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument type="service" id="doctrine.orm.default_configuration"/>
      <configurator service="doctrine.orm.default_manager_configurator" method="configure"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.property_info_extractor" class="Symfony\Bridge\Doctrine\PropertyInfo\DoctrineExtractor">
      <tag name="property_info.list_extractor" priority="-1001"/>
      <tag name="property_info.type_extractor" priority="-999"/>
      <tag name="property_info.access_extractor" priority="-999"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.validator_loader" class="Symfony\Bridge\Doctrine\Validator\DoctrineLoader">
      <tag name="validator.auto_mapper" priority="-100"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument>null</argument>
    </service>
    <service id="doctrine.fixtures_load_command" class="Doctrine\Bundle\FixturesBundle\Command\LoadDataFixturesDoctrineCommand">
      <tag name="console.command" command="doctrine:fixtures:load"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.fixtures.loader"/>
      <argument type="service" id="doctrine"/>
      <argument type="collection">
        <argument key="default" type="service" id="doctrine.fixtures.purger.orm_purger_factory"/>
      </argument>
      <call method="setName">
        <argument>doctrine:fixtures:load</argument>
      </call>
    </service>
    <service id="doctrine.fixtures.loader" class="Doctrine\Bundle\FixturesBundle\Loader\SymfonyFixturesLoader">
      <argument type="service" id="service_container"/>
      <call method="addFixtures">
        <argument type="collection">
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\AppFixtures"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Fixtures\AgentGroups"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Fixtures\AgentPrivileges"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Fixtures\EmailTemplates"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Fixtures\HelpdeskBranding"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Fixtures\TicketPriorities"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Fixtures\TicketStatuses"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Fixtures\TicketTypes"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Fixtures\UserRoles"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="Webkul\UVDesk\AutomationBundle\Fixtures\AutomationWorkflowFixtures"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="Webkul\UVDesk\SupportCenterBundle\Fixtures\EmailTemplates"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="Webkul\UVDesk\SupportCenterBundle\Fixtures\KnowledgebaseWebsite"/>
            <argument key="groups" type="collection"/>
          </argument>
        </argument>
      </call>
    </service>
    <service id="doctrine.fixtures.purger.orm_purger_factory" class="Doctrine\Bundle\FixturesBundle\Purger\ORMPurgerFactory">
      <tag name="doctrine.fixtures.purger_factory" alias="default"/>
    </service>
    <service id="knp_paginator" class="Knp\Component\Pager\Paginator" public="true" lazy="true">
      <tag name="proxy" interface="Knp\Component\Pager\PaginatorInterface"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="request_stack"/>
      <call method="setDefaultPaginatorOptions">
        <argument type="collection">
          <argument key="pageParameterName">page</argument>
          <argument key="sortFieldParameterName">sort</argument>
          <argument key="sortDirectionParameterName">direction</argument>
          <argument key="filterFieldParameterName">filterField</argument>
          <argument key="filterValueParameterName">filterValue</argument>
          <argument key="distinct">true</argument>
          <argument key="pageOutOfRange">ignore</argument>
          <argument key="defaultLimit">10</argument>
        </argument>
      </call>
    </service>
    <service id="knp_paginator.subscriber.paginate" class="Knp\Component\Pager\Event\Subscriber\Paginate\PaginationSubscriber">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="knp_paginator.subscriber.sortable" class="Knp\Component\Pager\Event\Subscriber\Sortable\SortableSubscriber">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="knp_paginator.subscriber.filtration" class="Knp\Component\Pager\Event\Subscriber\Filtration\FiltrationSubscriber">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="knp_paginator.subscriber.sliding_pagination" class="Knp\Bundle\PaginatorBundle\Subscriber\SlidingPaginationSubscriber">
      <tag name="kernel.event_subscriber"/>
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest"/>
      <tag name="container.hot_path"/>
      <argument type="collection">
        <argument key="defaultPaginationTemplate">@KnpPaginator/Pagination/sliding.html.twig</argument>
        <argument key="defaultSortableTemplate">@KnpPaginator/Pagination/sortable_link.html.twig</argument>
        <argument key="defaultFiltrationTemplate">@KnpPaginator/Pagination/filtration.html.twig</argument>
        <argument key="defaultPageRange">5</argument>
        <argument key="defaultPageLimit">null</argument>
      </argument>
    </service>
    <service id="knp_paginator.helper.processor" class="Knp\Bundle\PaginatorBundle\Helper\Processor">
      <argument type="service" id="router.default"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="knp_paginator.twig.extension.pagination" class="Knp\Bundle\PaginatorBundle\Twig\Extension\PaginationExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="knp_paginator.helper.processor"/>
    </service>
    <service id="sensio_framework_extra.controller.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="sensio_framework_extra.converter.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="sensio_framework_extra.converter.manager"/>
      <argument>true</argument>
    </service>
    <service id="sensio_framework_extra.converter.manager" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager">
      <call method="add">
        <argument type="service" id="sensio_framework_extra.converter.doctrine.orm"/>
        <argument>0</argument>
        <argument>doctrine.orm</argument>
      </call>
      <call method="add">
        <argument type="service" id="framework_extra_bundle.date_time_param_converter"/>
        <argument>0</argument>
        <argument>datetime</argument>
      </call>
    </service>
    <service id="sensio_framework_extra.converter.doctrine.orm" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter">
      <tag name="request.param_converter" converter="doctrine.orm"/>
      <argument type="service" id="doctrine" on-invalid="ignore"/>
      <argument type="service" id="sensio_framework_extra.converter.doctrine.orm.expression_language.default" on-invalid="null"/>
    </service>
    <service id="framework_extra_bundle.date_time_param_converter" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter">
      <tag name="request.param_converter" converter="datetime"/>
    </service>
    <service id="sensio_framework_extra.converter.doctrine.orm.expression_language.default" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage"/>
    <service id="sensio_framework_extra.view.guesser" class="Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser">
      <argument type="service" id="kernel"/>
    </service>
    <service id="sensio_framework_extra.view.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.service_subscriber" id="twig"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="sensio_framework_extra.view.guesser"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.aNklfos.sensio_framework_extra.view.listener"/>
      </call>
    </service>
    <service id="sensio_framework_extra.cache.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="sensio_framework_extra.security.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="framework_extra_bundle.argument_name_convertor"/>
      <argument type="service" id="sensio_framework_extra.security.expression_language.default" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver" on-invalid="null"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="sensio_framework_extra.security.expression_language.default" class="Sensio\Bundle\FrameworkExtraBundle\Security\ExpressionLanguage"/>
    <service id="framework_extra_bundle.event.is_granted" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\IsGrantedListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="framework_extra_bundle.argument_name_convertor"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
    </service>
    <service id="framework_extra_bundle.argument_name_convertor" class="Sensio\Bundle\FrameworkExtraBundle\Request\ArgumentNameConverter">
      <argument type="service" id="argument_metadata_factory"/>
    </service>
    <service id="twig" class="Twig\Environment" public="true">
      <tag name="container.preload" class="Twig\Cache\FilesystemCache"/>
      <tag name="container.preload" class="Twig\Extension\CoreExtension"/>
      <tag name="container.preload" class="Twig\Extension\EscaperExtension"/>
      <tag name="container.preload" class="Twig\Extension\OptimizerExtension"/>
      <tag name="container.preload" class="Twig\Extension\StagingExtension"/>
      <tag name="container.preload" class="Twig\ExtensionSet"/>
      <tag name="container.preload" class="Twig\Template"/>
      <tag name="container.preload" class="Twig\TemplateWrapper"/>
      <tag name="container.private" package="symfony/twig-bundle" version="5.2"/>
      <tag name="kernel.reset" method="resetGlobals"/>
      <argument type="service" id="twig.loader.native_filesystem"/>
      <argument type="collection">
        <argument key="debug">true</argument>
        <argument key="strict_variables">true</argument>
        <argument key="autoescape">name</argument>
        <argument key="cache">/home/maksim/Desktop/uvdesk/var/cache/dev/twig</argument>
        <argument key="charset">UTF-8</argument>
      </argument>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security_csrf"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.profiler"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.trans"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.assets"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.code"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.routing"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.yaml"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.debug.stopwatch"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.expression"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpkernel"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpfoundation"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.weblink"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.serializer"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.form"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.dump"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.logout_url"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="doctrine.twig.doctrine_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="knp_paginator.twig.extension.pagination"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.webprofiler"/>
      </call>
      <call method="addGlobal">
        <argument>app</argument>
        <argument type="service" id="twig.app_variable"/>
      </call>
      <call method="addRuntimeLoader">
        <argument type="service" id="twig.runtime_loader"/>
      </call>
      <call method="addGlobal">
        <argument>default_agent_image_path</argument>
        <argument>bundles/uvdeskcoreframework/images/uv-avatar-batman.png</argument>
      </call>
      <call method="addGlobal">
        <argument>default_customer_image_path</argument>
        <argument>bundles/uvdeskcoreframework/images/uv-avatar-ironman.png</argument>
      </call>
      <call method="addGlobal">
        <argument>default_helpdesk_image_path</argument>
        <argument>bundles/uvdeskcoreframework/images/uv-avatar-uvdesk.png</argument>
      </call>
      <call method="addGlobal">
        <argument>max_post_size</argument>
        <argument>8388608</argument>
      </call>
      <call method="addGlobal">
        <argument>max_file_uploads</argument>
        <argument>20</argument>
      </call>
      <call method="addGlobal">
        <argument>upload_max_filesize</argument>
        <argument>2097152</argument>
      </call>
      <call method="addGlobal">
        <argument>user_service</argument>
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      </call>
      <call method="addGlobal">
        <argument>uvdesk_service</argument>
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UVDeskService"/>
      </call>
      <call method="addGlobal">
        <argument>recaptcha_service</argument>
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\ReCaptchaService"/>
      </call>
      <call method="addGlobal">
        <argument>ticket_service</argument>
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\TicketService"/>
      </call>
      <call method="addGlobal">
        <argument>csrf_token_generator</argument>
        <argument type="service" id="security.csrf.token_manager"/>
      </call>
      <call method="addGlobal">
        <argument>email_service</argument>
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Services\EmailService"/>
      </call>
      <call method="addGlobal">
        <argument>uvdesk_extensibles</argument>
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Framework\ExtendableComponentManager"/>
      </call>
      <call method="addGlobal">
        <argument>uvdesk_core_file_system</argument>
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\FileSystem\FileSystem"/>
      </call>
      <call method="addGlobal">
        <argument>uvdesk_automations</argument>
        <argument type="service" id="uvdesk.automations"/>
      </call>
      <call method="addGlobal">
        <argument>uvdesk_version</argument>
        <argument>v1.1.7</argument>
      </call>
      <call method="addGlobal">
        <argument>uvdesk_core_version</argument>
        <argument>v1.1.6</argument>
      </call>
      <call method="registerUndefinedFilterCallback">
        <argument type="collection">
          <argument type="service" id="twig.missing_extension_suggestor"/>
          <argument>suggestFilter</argument>
        </argument>
      </call>
      <call method="registerUndefinedFunctionCallback">
        <argument type="collection">
          <argument type="service" id="twig.missing_extension_suggestor"/>
          <argument>suggestFunction</argument>
        </argument>
      </call>
      <call method="registerUndefinedTokenParserCallback">
        <argument type="collection">
          <argument type="service" id="twig.missing_extension_suggestor"/>
          <argument>suggestTag</argument>
        </argument>
      </call>
      <configurator service="twig.configurator.environment" method="configure"/>
    </service>
    <service id="twig.app_variable" class="Symfony\Bridge\Twig\AppVariable">
      <call method="setEnvironment">
        <argument>dev</argument>
      </call>
      <call method="setDebug">
        <argument>true</argument>
      </call>
      <call method="setTokenStorage">
        <argument type="service" id="security.token_storage" on-invalid="ignore"/>
      </call>
      <call method="setRequestStack">
        <argument type="service" id="request_stack" on-invalid="ignore"/>
      </call>
    </service>
    <service id="twig.template_iterator" class="Symfony\Bundle\TwigBundle\TemplateIterator">
      <argument type="service" id="kernel"/>
      <argument type="collection">
        <argument key="/home/maksim/Desktop/uvdesk/vendor/symfony/twig-bridge/Resources/views/Email">email</argument>
        <argument key="/home/maksim/Desktop/uvdesk/vendor/symfony/twig-bridge/Resources/views/Form">null</argument>
      </argument>
      <argument>/home/maksim/Desktop/uvdesk/templates</argument>
    </service>
    <service id="twig.template_cache_warmer" class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <tag name="container.service_subscriber" id="twig"/>
      <argument type="service" id=".service_locator.v.Wwsjy.twig.template_cache_warmer"/>
      <argument type="service" id="twig.template_iterator"/>
    </service>
    <service id="twig.loader.native_filesystem" class="Twig\Loader\FilesystemLoader">
      <tag name="twig.loader"/>
      <argument type="collection"/>
      <argument>/home/maksim/Desktop/uvdesk</argument>
      <call method="addPath">
        <argument>/home/maksim/Desktop/uvdesk/vendor/uvdesk/core-framework/Resources/views</argument>
        <argument>UVDeskCoreFramework</argument>
      </call>
      <call method="addPath">
        <argument>/home/maksim/Desktop/uvdesk/vendor/uvdesk/core-framework/Resources/views</argument>
        <argument>!UVDeskCoreFramework</argument>
      </call>
      <call method="addPath">
        <argument>/home/maksim/Desktop/uvdesk/vendor/uvdesk/automation-bundle/Resources/views</argument>
        <argument>UVDeskAutomation</argument>
      </call>
      <call method="addPath">
        <argument>/home/maksim/Desktop/uvdesk/vendor/uvdesk/automation-bundle/Resources/views</argument>
        <argument>!UVDeskAutomation</argument>
      </call>
      <call method="addPath">
        <argument>/home/maksim/Desktop/uvdesk/vendor/uvdesk/extension-framework/Resources/views</argument>
        <argument>UVDeskExtensionFramework</argument>
      </call>
      <call method="addPath">
        <argument>/home/maksim/Desktop/uvdesk/vendor/uvdesk/extension-framework/Resources/views</argument>
        <argument>!UVDeskExtensionFramework</argument>
      </call>
      <call method="addPath">
        <argument>/home/maksim/Desktop/uvdesk/vendor/uvdesk/mailbox-component/Resources/views</argument>
        <argument>UVDeskMailbox</argument>
      </call>
      <call method="addPath">
        <argument>/home/maksim/Desktop/uvdesk/vendor/uvdesk/mailbox-component/Resources/views</argument>
        <argument>!UVDeskMailbox</argument>
      </call>
      <call method="addPath">
        <argument>/home/maksim/Desktop/uvdesk/vendor/uvdesk/support-center-bundle/Resources/views</argument>
        <argument>UVDeskSupportCenter</argument>
      </call>
      <call method="addPath">
        <argument>/home/maksim/Desktop/uvdesk/vendor/uvdesk/support-center-bundle/Resources/views</argument>
        <argument>!UVDeskSupportCenter</argument>
      </call>
      <call method="addPath">
        <argument>/home/maksim/Desktop/uvdesk/vendor/uvdesk/api-bundle/Resources/views</argument>
        <argument>UVDeskApi</argument>
      </call>
      <call method="addPath">
        <argument>/home/maksim/Desktop/uvdesk/vendor/uvdesk/api-bundle/Resources/views</argument>
        <argument>!UVDeskApi</argument>
      </call>
      <call method="addPath">
        <argument>/home/maksim/Desktop/uvdesk/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/home/maksim/Desktop/uvdesk/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>!Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/home/maksim/Desktop/uvdesk/vendor/knplabs/knp-paginator-bundle/templates</argument>
        <argument>KnpPaginator</argument>
      </call>
      <call method="addPath">
        <argument>/home/maksim/Desktop/uvdesk/vendor/knplabs/knp-paginator-bundle/templates</argument>
        <argument>!KnpPaginator</argument>
      </call>
      <call method="addPath">
        <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/web-profiler-bundle/Resources/views</argument>
        <argument>WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/web-profiler-bundle/Resources/views</argument>
        <argument>!WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/debug-bundle/Resources/views</argument>
        <argument>Debug</argument>
      </call>
      <call method="addPath">
        <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/debug-bundle/Resources/views</argument>
        <argument>!Debug</argument>
      </call>
      <call method="addPath">
        <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-bundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/security-bundle/Resources/views</argument>
        <argument>!Security</argument>
      </call>
      <call method="addPath">
        <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/swiftmailer-bundle/Resources/views</argument>
        <argument>Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/swiftmailer-bundle/Resources/views</argument>
        <argument>!Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>/home/maksim/Desktop/uvdesk/templates</argument>
      </call>
      <call method="addPath">
        <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/twig-bridge/Resources/views/Email</argument>
        <argument>email</argument>
      </call>
      <call method="addPath">
        <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/twig-bridge/Resources/views/Email</argument>
        <argument>!email</argument>
      </call>
      <call method="addPath">
        <argument>/home/maksim/Desktop/uvdesk/vendor/symfony/twig-bridge/Resources/views/Form</argument>
      </call>
    </service>
    <service id="twig.loader.chain" class="Twig\Loader\ChainLoader"/>
    <service id="twig.extension.profiler" class="Symfony\Bridge\Twig\Extension\ProfilerExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id="twig.profile" class="Twig\Profiler\Profile"/>
    <service id="data_collector.twig" class="Symfony\Bridge\Twig\DataCollector\TwigDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/twig.html.twig" id="twig" priority="257"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.extension.trans" class="Symfony\Bridge\Twig\Extension\TranslationExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="translator.data_collector" on-invalid="null"/>
    </service>
    <service id="twig.extension.assets" class="Symfony\Bridge\Twig\Extension\AssetExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="assets.packages"/>
    </service>
    <service id="twig.extension.code" class="Symfony\Bridge\Twig\Extension\CodeExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
      <argument>/home/maksim/Desktop/uvdesk</argument>
      <argument>UTF-8</argument>
    </service>
    <service id="twig.extension.routing" class="Symfony\Bridge\Twig\Extension\RoutingExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="twig.extension.yaml" class="Symfony\Bridge\Twig\Extension\YamlExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.debug.stopwatch" class="Symfony\Bridge\Twig\Extension\StopwatchExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="twig.extension.expression" class="Symfony\Bridge\Twig\Extension\ExpressionExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.runtime.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="fragment.handler"/>
      <argument type="service" id="fragment.uri_generator" on-invalid="ignore"/>
    </service>
    <service id="twig.extension.httpfoundation" class="Symfony\Bridge\Twig\Extension\HttpFoundationExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="url_helper"/>
    </service>
    <service id="twig.extension.debug" class="Twig\Extension\DebugExtension"/>
    <service id="twig.extension.weblink" class="Symfony\Bridge\Twig\Extension\WebLinkExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="twig.translation.extractor" class="Symfony\Bridge\Twig\Translation\TwigExtractor">
      <tag name="translation.extractor" alias="twig"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.configurator.environment" class="Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator">
      <argument>F j, Y H:i</argument>
      <argument>%d days</argument>
      <argument>null</argument>
      <argument>0</argument>
      <argument>.</argument>
      <argument>,</argument>
    </service>
    <service id="twig.runtime_loader" class="Twig\RuntimeLoader\ContainerRuntimeLoader">
      <argument type="service" id=".service_locator.pTeli0u"/>
    </service>
    <service id="twig.error_renderer.html" class="Symfony\Bridge\Twig\ErrorRenderer\TwigErrorRenderer">
      <argument type="service" id="twig"/>
      <argument type="service" id="error_handler.error_renderer.html"/>
      <argument type="service">
        <service class="bool">
          <argument type="service" id="request_stack"/>
          <argument>true</argument>
          <factory class="Symfony\Bridge\Twig\ErrorRenderer\TwigErrorRenderer" method="isDebug"/>
        </service>
      </argument>
    </service>
    <service id="twig.runtime.serializer" class="Symfony\Bridge\Twig\Extension\SerializerRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="serializer"/>
    </service>
    <service id="twig.extension.serializer" class="Symfony\Bridge\Twig\Extension\SerializerExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.form" class="Symfony\Bridge\Twig\Extension\FormExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="translator.data_collector" on-invalid="null"/>
    </service>
    <service id="twig.form.engine" class="Symfony\Bridge\Twig\Form\TwigRendererEngine">
      <tag name="kernel.reset" method="reset"/>
      <argument>%twig.form.resources%</argument>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.form.renderer" class="Symfony\Component\Form\FormRenderer">
      <tag name="twig.runtime"/>
      <argument type="service" id="twig.form.engine"/>
      <argument type="service" id="security.csrf.token_manager" on-invalid="null"/>
    </service>
    <service id="twig.command.debug" class="Symfony\Bridge\Twig\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="twig"/>
      <argument>/home/maksim/Desktop/uvdesk</argument>
      <argument>%kernel.bundles_metadata%</argument>
      <argument>/home/maksim/Desktop/uvdesk/templates</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:twig</argument>
      </call>
      <call method="setDescription">
        <argument>Show a list of twig functions, filters, globals and tests</argument>
      </call>
    </service>
    <service id="twig.command.lint" class="Symfony\Bundle\TwigBundle\Command\LintCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="twig"/>
      <call method="setName">
        <argument>lint:twig</argument>
      </call>
      <call method="setDescription">
        <argument>Lint a Twig template and outputs encountered errors</argument>
      </call>
    </service>
    <service id="twig.mailer.message_listener" class="Symfony\Component\Mailer\EventListener\MessageListener">
      <tag name="kernel.event_subscriber"/>
      <argument>null</argument>
      <argument type="service" id="twig.mime_body_renderer"/>
    </service>
    <service id="twig.mime_body_renderer" class="Symfony\Bridge\Twig\Mime\BodyRenderer">
      <argument type="service" id="twig"/>
    </service>
    <service id="web_profiler.controller.profiler" class="Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController" public="true">
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument>%data_collector.templates%</argument>
      <argument type="service" id="web_profiler.csp.handler"/>
      <argument>/home/maksim/Desktop/uvdesk</argument>
    </service>
    <service id="web_profiler.controller.router" class="Symfony\Bundle\WebProfilerBundle\Controller\RouterController" public="true">
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument>null</argument>
      <argument type="tagged_iterator" tag="routing.expression_language_provider"/>
    </service>
    <service id="web_profiler.controller.exception_panel" class="Symfony\Bundle\WebProfilerBundle\Controller\ExceptionPanelController" public="true">
      <argument type="service" id="error_handler.error_renderer.html"/>
      <argument type="service" id="profiler" on-invalid="null"/>
    </service>
    <service id="web_profiler.csp.handler" class="Symfony\Bundle\WebProfilerBundle\Csp\ContentSecurityPolicyHandler">
      <argument type="service">
        <service class="Symfony\Bundle\WebProfilerBundle\Csp\NonceGenerator"/>
      </argument>
    </service>
    <service id="twig.extension.webprofiler" class="Symfony\Bundle\WebProfilerBundle\Twig\WebProfilerExtension">
      <tag name="twig.extension"/>
      <argument type="service">
        <service class="Symfony\Component\VarDumper\Dumper\HtmlDumper">
          <argument>null</argument>
          <argument>UTF-8</argument>
          <argument>1</argument>
          <call method="setDisplayOptions">
            <argument type="collection">
              <argument key="maxStringLength">4096</argument>
              <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter"/>
            </argument>
          </call>
        </service>
      </argument>
    </service>
    <service id="debug.file_link_formatter.url_format" class="string">
      <argument type="service" id="router.default"/>
      <argument>_profiler_open_file</argument>
      <argument>?file=%%f&amp;line=%%l#line%%l</argument>
      <factory class="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" method="generateUrlFormat"/>
    </service>
    <service id="web_profiler.debug_toolbar" class="Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="twig"/>
      <argument>false</argument>
      <argument>2</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
      <argument>^/((index|app(_[\w]+)?)\.php/)?_wdt</argument>
      <argument type="service" id="web_profiler.csp.handler"/>
      <argument type="service" id="data_collector.dump" on-invalid="ignore"/>
    </service>
    <service id="monolog.logger" class="Symfony\Bridge\Monolog\Logger">
      <argument>app</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="useMicrosecondTimestamps">
        <argument>true</argument>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger_prototype" class="Symfony\Bridge\Monolog\Logger" abstract="true">
      <argument></argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.activation_strategy.not_found" class="Symfony\Bridge\Monolog\Handler\FingersCrossed\NotFoundActivationStrategy" abstract="true"/>
    <service id="monolog.handler.fingers_crossed.error_level_activation_strategy" class="Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy" abstract="true"/>
    <service id="monolog.formatter.chrome_php" class="Monolog\Formatter\ChromePHPFormatter"/>
    <service id="monolog.formatter.gelf_message" class="Monolog\Formatter\GelfMessageFormatter"/>
    <service id="monolog.formatter.html" class="Monolog\Formatter\HtmlFormatter"/>
    <service id="monolog.formatter.json" class="Monolog\Formatter\JsonFormatter"/>
    <service id="monolog.formatter.line" class="Monolog\Formatter\LineFormatter"/>
    <service id="monolog.formatter.loggly" class="Monolog\Formatter\LogglyFormatter"/>
    <service id="monolog.formatter.normalizer" class="Monolog\Formatter\NormalizerFormatter"/>
    <service id="monolog.formatter.scalar" class="Monolog\Formatter\ScalarFormatter"/>
    <service id="monolog.formatter.wildfire" class="Monolog\Formatter\WildfireFormatter"/>
    <service id="monolog.formatter.logstash" class="Monolog\Formatter\LogstashFormatter">
      <argument>app</argument>
    </service>
    <service id="monolog.http_client" class="Symfony\Contracts\HttpClient\HttpClientInterface">
      <factory class="Symfony\Component\HttpClient\HttpClient" method="create"/>
    </service>
    <service id="monolog.processor.psr_log_message" class="Monolog\Processor\PsrLogMessageProcessor"/>
    <service id="monolog.handler.main" class="Monolog\Handler\StreamHandler">
      <tag name="kernel.reset" method="reset"/>
      <argument>/home/maksim/Desktop/uvdesk/var/log/dev.log</argument>
      <argument>debug</argument>
      <argument>true</argument>
      <argument>null</argument>
      <argument>false</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="monolog.handler.console" class="Symfony\Bridge\Monolog\Handler\ConsoleHandler">
      <tag name="kernel.event_subscriber"/>
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.no_preload"/>
      <argument>null</argument>
      <argument>true</argument>
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="twig.extension.dump" class="Symfony\Bridge\Twig\Extension\DumpExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="var_dumper.cloner"/>
      <argument type="service" id="var_dumper.html_dumper"/>
    </service>
    <service id="data_collector.dump" class="Symfony\Component\HttpKernel\DataCollector\DumpDataCollector" public="true">
      <tag name="data_collector" id="dump" template="@Debug/Profiler/dump.html.twig" priority="240"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
      <argument>UTF-8</argument>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="var_dumper.server_connection"/>
    </service>
    <service id="debug.dump_listener" class="Symfony\Component\HttpKernel\EventListener\DumpListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="var_dumper.cloner"/>
      <argument type="service" id="var_dumper.contextualized_cli_dumper"/>
      <argument type="service" id="var_dumper.server_connection"/>
    </service>
    <service id="var_dumper.cloner" class="Symfony\Component\VarDumper\Cloner\VarCloner" public="true">
      <call method="setMaxItems">
        <argument>2500</argument>
      </call>
      <call method="setMinDepth">
        <argument>1</argument>
      </call>
      <call method="setMaxString">
        <argument>-1</argument>
      </call>
      <call method="addCasters">
        <argument type="collection">
          <argument key="Closure">Symfony\Component\VarDumper\Caster\ReflectionCaster::unsetClosureFileInfo</argument>
        </argument>
      </call>
    </service>
    <service id="var_dumper.contextualized_cli_dumper" class="Symfony\Component\VarDumper\Dumper\ContextualizedDumper">
      <tag name="container.decorator" id="var_dumper.cli_dumper"/>
      <argument type="service" id="var_dumper.contextualized_cli_dumper.inner"/>
      <argument type="collection">
        <argument key="source" type="service">
          <service class="Symfony\Component\VarDumper\Dumper\ContextProvider\SourceContextProvider">
            <argument>UTF-8</argument>
            <argument>/home/maksim/Desktop/uvdesk</argument>
            <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
          </service>
        </argument>
      </argument>
    </service>
    <service id="var_dumper.html_dumper" class="Symfony\Component\VarDumper\Dumper\HtmlDumper">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>0</argument>
      <call method="setDisplayOptions">
        <argument type="collection">
          <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
        </argument>
      </call>
    </service>
    <service id="var_dumper.server_connection" class="Symfony\Component\VarDumper\Server\Connection">
      <argument>tcp://%env(VAR_DUMPER_SERVER)%</argument>
      <argument type="collection">
        <argument key="source" type="service">
          <service class="Symfony\Component\VarDumper\Dumper\ContextProvider\SourceContextProvider">
            <argument>UTF-8</argument>
            <argument>/home/maksim/Desktop/uvdesk</argument>
            <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
          </service>
        </argument>
        <argument key="request" type="service">
          <service class="Symfony\Component\VarDumper\Dumper\ContextProvider\RequestContextProvider">
            <argument type="service" id="request_stack"/>
          </service>
        </argument>
        <argument key="cli" type="service">
          <service class="Symfony\Component\VarDumper\Dumper\ContextProvider\CliContextProvider"/>
        </argument>
      </argument>
    </service>
    <service id="var_dumper.dump_server" class="Symfony\Component\VarDumper\Server\DumpServer">
      <tag name="monolog.logger" channel="debug"/>
      <argument>tcp://%env(VAR_DUMPER_SERVER)%</argument>
      <argument type="service" id="monolog.logger.debug" on-invalid="null"/>
    </service>
    <service id="var_dumper.command.server_dump" class="Symfony\Component\VarDumper\Command\ServerDumpCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="var_dumper.dump_server"/>
      <argument type="collection">
        <argument key="cli" type="service">
          <service class="Symfony\Component\VarDumper\Command\Descriptor\CliDescriptor">
            <argument type="service" id="var_dumper.contextualized_cli_dumper.inner"/>
          </service>
        </argument>
        <argument key="html" type="service">
          <service class="Symfony\Component\VarDumper\Command\Descriptor\HtmlDescriptor">
            <argument type="service" id="var_dumper.html_dumper"/>
          </service>
        </argument>
      </argument>
      <call method="setName">
        <argument>server:dump</argument>
      </call>
      <call method="setDescription">
        <argument>Start a dump server that collects and displays dumps in a single place</argument>
      </call>
    </service>
    <service id="monolog.command.server_log" class="Symfony\Bridge\Monolog\Command\ServerLogCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>server:log</argument>
      </call>
      <call method="setDescription">
        <argument>Start a log server that displays logs in real time</argument>
      </call>
    </service>
    <service id="maker.file_manager" class="Symfony\Bundle\MakerBundle\FileManager">
      <argument type="service" id="filesystem"/>
      <argument type="service" id="maker.autoloader_util"/>
      <argument type="service" id="maker.file_link_formatter"/>
      <argument>/home/maksim/Desktop/uvdesk</argument>
      <argument>/home/maksim/Desktop/uvdesk/templates</argument>
    </service>
    <service id="maker.autoloader_finder" class="Symfony\Bundle\MakerBundle\Util\ComposerAutoloaderFinder">
      <argument>App</argument>
    </service>
    <service id="maker.autoloader_util" class="Symfony\Bundle\MakerBundle\Util\AutoloaderUtil">
      <argument type="service" id="maker.autoloader_finder"/>
    </service>
    <service id="maker.file_link_formatter" class="Symfony\Bundle\MakerBundle\Util\MakerFileLinkFormatter">
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
    </service>
    <service id="maker.event_registry" class="Symfony\Bundle\MakerBundle\EventRegistry">
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="maker.console_error_listener" class="Symfony\Bundle\MakerBundle\Event\ConsoleErrorSubscriber">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.no_preload"/>
    </service>
    <service id="maker.doctrine_helper" class="Symfony\Bundle\MakerBundle\Doctrine\DoctrineHelper">
      <argument>App\Entity</argument>
      <argument type="service" id="doctrine" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="default" type="collection">
          <argument type="collection">
            <argument>App\Entity</argument>
            <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
          </argument>
          <argument type="collection">
            <argument>Webkul\UVDesk\CoreFrameworkBundle\Entity</argument>
            <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
          </argument>
          <argument type="collection">
            <argument>Webkul\UVDesk\AutomationBundle\Entity</argument>
            <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
          </argument>
          <argument type="collection">
            <argument>Webkul\UVDesk\SupportCenterBundle\Entity</argument>
            <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
          </argument>
          <argument type="collection">
            <argument>Webkul\UVDesk\ApiBundle\Entity</argument>
            <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="maker.template_linter" class="Symfony\Bundle\MakerBundle\Util\TemplateLinter">
      <argument>%env(default::string:MAKER_PHP_CS_FIXER_BINARY_PATH)%</argument>
      <argument>%env(default::string:MAKER_PHP_CS_FIXER_CONFIG_PATH)%</argument>
    </service>
    <service id="maker.auto_command.abstract" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" abstract="true">
      <argument></argument>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
    </service>
    <service id="maker.generator" class="Symfony\Bundle\MakerBundle\Generator">
      <argument type="service" id="maker.file_manager"/>
      <argument>App</argument>
      <argument>null</argument>
      <argument type="service" id="maker.template_component_generator"/>
    </service>
    <service id="maker.entity_class_generator" class="Symfony\Bundle\MakerBundle\Doctrine\EntityClassGenerator">
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.doctrine_helper"/>
    </service>
    <service id="maker.user_class_builder" class="Symfony\Bundle\MakerBundle\Security\UserClassBuilder"/>
    <service id="maker.security_config_updater" class="Symfony\Bundle\MakerBundle\Security\SecurityConfigUpdater"/>
    <service id="maker.renderer.form_type_renderer" class="Symfony\Bundle\MakerBundle\Renderer\FormTypeRenderer">
      <argument type="service" id="maker.generator"/>
    </service>
    <service id="maker.security_controller_builder" class="Symfony\Bundle\MakerBundle\Security\SecurityControllerBuilder"/>
    <service id="maker.php_compat_util" class="Symfony\Bundle\MakerBundle\Util\PhpCompatUtil">
      <argument type="service" id="maker.file_manager"/>
    </service>
    <service id="maker.template_component_generator" class="Symfony\Bundle\MakerBundle\Util\TemplateComponentGenerator"/>
    <service id="maker.maker.make_authenticator" class="Symfony\Bundle\MakerBundle\Maker\MakeAuthenticator">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.security_config_updater"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument type="service" id="maker.security_controller_builder"/>
    </service>
    <service id="maker.maker.make_command" class="Symfony\Bundle\MakerBundle\Maker\MakeCommand">
      <tag name="maker.command"/>
      <argument type="service" id="maker.php_compat_util"/>
    </service>
    <service id="maker.maker.make_twig_component" class="Symfony\Bundle\MakerBundle\Maker\MakeTwigComponent">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_controller" class="Symfony\Bundle\MakerBundle\Maker\MakeController">
      <tag name="maker.command"/>
      <argument type="service" id="maker.php_compat_util"/>
    </service>
    <service id="maker.maker.make_crud" class="Symfony\Bundle\MakerBundle\Maker\MakeCrud">
      <tag name="maker.command"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument type="service" id="maker.renderer.form_type_renderer"/>
    </service>
    <service id="maker.maker.make_docker_database" class="Symfony\Bundle\MakerBundle\Maker\MakeDockerDatabase">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
    </service>
    <service id="maker.maker.make_entity" class="Symfony\Bundle\MakerBundle\Maker\MakeEntity">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument>null</argument>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.entity_class_generator"/>
      <argument type="service" id="maker.php_compat_util"/>
    </service>
    <service id="maker.maker.make_fixtures" class="Symfony\Bundle\MakerBundle\Maker\MakeFixtures">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_form" class="Symfony\Bundle\MakerBundle\Maker\MakeForm">
      <tag name="maker.command"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument type="service" id="maker.renderer.form_type_renderer"/>
    </service>
    <service id="maker.maker.make_functional_test" class="Symfony\Bundle\MakerBundle\Maker\MakeFunctionalTest">
      <tag name="maker.command"/>
      <deprecated package="symfony/maker-bundle" version="1.29">The "%service_id%" service is deprecated, use "maker.maker.make_test" instead.</deprecated>
    </service>
    <service id="maker.maker.make_message" class="Symfony\Bundle\MakerBundle\Maker\MakeMessage">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
    </service>
    <service id="maker.maker.make_messenger_middleware" class="Symfony\Bundle\MakerBundle\Maker\MakeMessengerMiddleware">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_registration_form" class="Symfony\Bundle\MakerBundle\Maker\MakeRegistrationForm">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.renderer.form_type_renderer"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument type="service" id="router.default" on-invalid="ignore"/>
    </service>
    <service id="maker.maker.make_reset_password" class="Symfony\Bundle\MakerBundle\Maker\MakeResetPassword">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument type="service" id="maker.entity_class_generator"/>
    </service>
    <service id="maker.maker.make_serializer_encoder" class="Symfony\Bundle\MakerBundle\Maker\MakeSerializerEncoder">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_serializer_normalizer" class="Symfony\Bundle\MakerBundle\Maker\MakeSerializerNormalizer">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_subscriber" class="Symfony\Bundle\MakerBundle\Maker\MakeSubscriber">
      <tag name="maker.command"/>
      <argument type="service" id="maker.event_registry"/>
    </service>
    <service id="maker.maker.make_twig_extension" class="Symfony\Bundle\MakerBundle\Maker\MakeTwigExtension">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_test" class="Symfony\Bundle\MakerBundle\Maker\MakeTest">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_unit_test" class="Symfony\Bundle\MakerBundle\Maker\MakeUnitTest">
      <tag name="maker.command"/>
      <deprecated package="symfony/maker-bundle" version="1.29">The "%service_id%" service is deprecated, use "maker.maker.make_test" instead.</deprecated>
    </service>
    <service id="maker.maker.make_validator" class="Symfony\Bundle\MakerBundle\Maker\MakeValidator">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_voter" class="Symfony\Bundle\MakerBundle\Maker\MakeVoter">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_user" class="Symfony\Bundle\MakerBundle\Maker\MakeUser">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.user_class_builder"/>
      <argument type="service" id="maker.security_config_updater"/>
      <argument type="service" id="maker.entity_class_generator"/>
      <argument type="service" id="maker.doctrine_helper"/>
    </service>
    <service id="maker.maker.make_migration" class="Symfony\Bundle\MakerBundle\Maker\MakeMigration">
      <tag name="maker.command"/>
      <argument>/home/maksim/Desktop/uvdesk</argument>
      <argument type="service" id="maker.file_link_formatter"/>
    </service>
    <service id="maker.maker.make_stimulus_controller" class="Symfony\Bundle\MakerBundle\Maker\MakeStimulusController">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_form_login" class="Symfony\Bundle\MakerBundle\Maker\Security\MakeFormLogin">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.security_config_updater"/>
      <argument type="service" id="maker.security_controller_builder"/>
    </service>
    <service id="doctrine_migrations.diff_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsDiffDoctrineCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:migrations:diff</argument>
      </call>
    </service>
    <service id="doctrine_migrations.dump_schema_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsDumpSchemaDoctrineCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:migrations:dump-schema</argument>
      </call>
    </service>
    <service id="doctrine_migrations.execute_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsExecuteDoctrineCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:migrations:execute</argument>
      </call>
    </service>
    <service id="doctrine_migrations.generate_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsGenerateDoctrineCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:migrations:generate</argument>
      </call>
    </service>
    <service id="doctrine_migrations.latest_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsLatestDoctrineCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:migrations:latest</argument>
      </call>
    </service>
    <service id="doctrine_migrations.migrate_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsMigrateDoctrineCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:migrations:migrate</argument>
      </call>
    </service>
    <service id="doctrine_migrations.rollup_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsRollupDoctrineCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:migrations:rollup</argument>
      </call>
    </service>
    <service id="doctrine_migrations.status_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsStatusDoctrineCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:migrations:status</argument>
      </call>
    </service>
    <service id="doctrine_migrations.up_to_date_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsUpToDateDoctrineCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:migrations:up-to-date</argument>
      </call>
    </service>
    <service id="doctrine_migrations.version_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsVersionDoctrineCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:migrations:version</argument>
      </call>
    </service>
    <service id="security.authorization_checker" class="Symfony\Component\Security\Core\Authorization\AuthorizationChecker" public="true">
      <tag name="container.private" package="symfony/security-bundle" version="5.3"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument>false</argument>
    </service>
    <service id="security.token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\UsageTrackingTokenStorage" public="true">
      <tag name="kernel.reset" method="disableUsageTracking"/>
      <tag name="kernel.reset" method="setToken"/>
      <tag name="container.private" package="symfony/security-bundle" version="5.3"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id=".service_locator.LcVn9Hr"/>
    </service>
    <service id="security.untracked_token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage"/>
    <service id="security.helper" class="Symfony\Component\Security\Core\Security">
      <argument type="service" id=".service_locator.nLgZj7R"/>
    </service>
    <service id="security.authentication.trust_resolver" class="Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver"/>
    <service id="security.authentication.session_strategy" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy">
      <argument>migrate</argument>
      <argument type="service" id="security.csrf.token_storage" on-invalid="ignore"/>
    </service>
    <service id="security.authentication.session_strategy_noop" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy">
      <argument>none</argument>
    </service>
    <service id="security.encoder_factory.generic" class="Symfony\Component\Security\Core\Encoder\EncoderFactory">
      <argument type="collection">
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Entity\User" type="collection">
          <argument key="algorithm">auto</argument>
          <argument key="migrate_from" type="collection"/>
          <argument key="hash_algorithm">sha512</argument>
          <argument key="key_length">40</argument>
          <argument key="ignore_case">false</argument>
          <argument key="encode_as_base64">true</argument>
          <argument key="iterations">5000</argument>
          <argument key="cost">null</argument>
          <argument key="memory_cost">null</argument>
          <argument key="time_cost">null</argument>
        </argument>
      </argument>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use "security.password_hasher_factory" instead.</deprecated>
    </service>
    <service id="security.user_password_encoder.generic" class="Symfony\Component\Security\Core\Encoder\UserPasswordEncoder">
      <argument type="service" id="security.encoder_factory.generic"/>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use "security.user_password_hasher" instead.</deprecated>
    </service>
    <service id="security.user_checker" class="Symfony\Component\Security\Core\User\InMemoryUserChecker"/>
    <service id="security.expression_language" class="Symfony\Component\Security\Core\Authorization\ExpressionLanguage">
      <argument type="service" id="cache.security_expression_language" on-invalid="null"/>
    </service>
    <service id="security.authentication_utils" class="Symfony\Component\Security\Http\Authentication\AuthenticationUtils">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.role_hierarchy" class="Symfony\Component\Security\Core\Role\RoleHierarchy">
      <argument>%security.role_hierarchy.roles%</argument>
    </service>
    <service id="security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter">
      <tag name="security.voter" priority="250"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
    </service>
    <service id="security.access.role_hierarchy_voter" class="Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter">
      <tag name="security.voter" priority="245"/>
      <argument type="service" id="security.role_hierarchy"/>
    </service>
    <service id="security.access.expression_voter" class="Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter">
      <tag name="security.voter" priority="245"/>
      <argument type="service" id="security.expression_language"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
    </service>
    <service id="security.impersonate_url_generator" class="Symfony\Component\Security\Http\Impersonate\ImpersonateUrlGenerator">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="security.firewall.map" class="Symfony\Bundle\SecurityBundle\Security\FirewallMap">
      <argument type="service" id=".service_locator.Y0rYR9K"/>
      <argument type="iterator">
        <argument key="security.firewall.map.context.dev" type="service" id=".security.request_matcher.Iy.T22O"/>
        <argument key="security.firewall.map.context.back_support" type="service" id=".security.request_matcher.jrF4Gab"/>
        <argument key="security.firewall.map.context.uvdesk_api" type="service" id=".security.request_matcher.p4VlLPC"/>
        <argument key="security.firewall.map.context.customer" type="service" id=".security.request_matcher.01Y6ZVJ"/>
      </argument>
    </service>
    <service id="security.firewall.context" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument type="abstract">LogoutListener</argument>
      <argument type="abstract">FirewallConfig</argument>
    </service>
    <service id="security.firewall.lazy_context" class="Symfony\Bundle\SecurityBundle\Security\LazyFirewallContext" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument type="abstract">LogoutListener</argument>
      <argument type="abstract">FirewallConfig</argument>
      <argument type="service" id="security.untracked_token_storage"/>
    </service>
    <service id="security.firewall.config" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" abstract="true">
      <argument type="abstract">name</argument>
      <argument type="abstract">user_checker</argument>
      <argument type="abstract">request_matcher</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id="security.logout_url_generator" class="Symfony\Component\Security\Http\Logout\LogoutUrlGenerator">
      <argument type="service" id="request_stack" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <call method="registerListener">
        <argument>back_support</argument>
        <argument>helpdesk_member_handle_logout</argument>
        <argument>logout</argument>
        <argument>_csrf_token</argument>
        <argument>null</argument>
        <argument>null</argument>
      </call>
      <call method="registerListener">
        <argument>customer</argument>
        <argument>helpdesk_customer_logout</argument>
        <argument>logout</argument>
        <argument>_csrf_token</argument>
        <argument>null</argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.user.provider.missing" class="Symfony\Component\Security\Core\User\MissingUserProvider" abstract="true">
      <argument type="abstract">firewall</argument>
    </service>
    <service id="security.user.provider.in_memory" class="Symfony\Component\Security\Core\User\InMemoryUserProvider" abstract="true"/>
    <service id="security.user.provider.ldap" class="Symfony\Component\Ldap\Security\LdapUserProvider" abstract="true">
      <argument type="abstract">security.ldap.ldap</argument>
      <argument type="abstract">base dn</argument>
      <argument type="abstract">search dn</argument>
      <argument type="abstract">search password</argument>
      <argument type="abstract">default_roles</argument>
      <argument type="abstract">uid key</argument>
      <argument type="abstract">filter</argument>
      <argument type="abstract">password_attribute</argument>
      <argument type="abstract">extra_fields (email etc)</argument>
    </service>
    <service id="security.user.provider.chain" class="Symfony\Component\Security\Core\User\ChainUserProvider" abstract="true"/>
    <service id="security.http_utils" class="Symfony\Component\Security\Http\HttpUtils">
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument>{^https?://%%s$}i</argument>
      <argument>{^https://%%s$}i</argument>
    </service>
    <service id="security.validator.user_password" class="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator">
      <tag name="validator.constraint_validator" alias="security.validator.user_password"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.password_hasher_factory"/>
    </service>
    <service id="cache.security_expression_language" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.security_expression_language.recorder_inner"/>
    </service>
    <service id="security.password_hasher_factory" class="Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactory">
      <argument type="collection">
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Entity\User" type="collection">
          <argument key="algorithm">auto</argument>
          <argument key="migrate_from" type="collection"/>
          <argument key="hash_algorithm">sha512</argument>
          <argument key="key_length">40</argument>
          <argument key="ignore_case">false</argument>
          <argument key="encode_as_base64">true</argument>
          <argument key="iterations">5000</argument>
          <argument key="cost">null</argument>
          <argument key="memory_cost">null</argument>
          <argument key="time_cost">null</argument>
        </argument>
      </argument>
    </service>
    <service id="security.user_password_hasher" class="Symfony\Component\PasswordHasher\Hasher\UserPasswordHasher">
      <argument type="service" id="security.password_hasher_factory"/>
    </service>
    <service id="security.authentication.basic_entry_point" class="Symfony\Component\Security\Http\EntryPoint\BasicAuthenticationEntryPoint">
      <deprecated package="symfony/security-bundle" version="5.4">The "%service_id%" service is deprecated, the logic is contained in the authenticators.</deprecated>
    </service>
    <service id="security.authentication.retry_entry_point" class="Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint">
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpPort"/>
        </service>
      </argument>
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpsPort"/>
        </service>
      </argument>
      <deprecated package="symfony/security-bundle" version="5.4">The "%service_id%" service is deprecated, the logic is integrated directly in "security.channel_listener".</deprecated>
    </service>
    <service id="security.channel_listener" class="Symfony\Component\Security\Http\Firewall\ChannelListener">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpPort"/>
        </service>
      </argument>
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpsPort"/>
        </service>
      </argument>
    </service>
    <service id="security.access_map" class="Symfony\Component\Security\Http\AccessMap">
      <call method="add">
        <argument type="service" id=".security.request_matcher.0MuT6vZ"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_REMEMBERED</argument>
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.0tmGHYx"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_REMEMBERED</argument>
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher..ADSPOW"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_REMEMBERED</argument>
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.TX0hlff"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_REMEMBERED</argument>
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.Xr5bh5g"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.1wkQggQ"/>
        <argument type="collection">
          <argument>ROLE_AGENT</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.nNuE.Sz"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.Y.F7a8t"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.UWNcV4p"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.7eJpeDW"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.8TPW1Kw"/>
        <argument type="collection">
          <argument>ROLE_CUSTOMER</argument>
        </argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.context_listener" class="Symfony\Component\Security\Http\Firewall\ContextListener">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="iterator">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Providers\UserProvider"/>
        <argument type="service" id="Webkul\UVDesk\ApiBundle\Providers\ApiCredentials"/>
      </argument>
      <argument type="abstract">Provider Key</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="collection">
        <argument type="service" id="security.token_storage"/>
        <argument>enableUsageTracking</argument>
      </argument>
    </service>
    <service id="security.logout_listener" class="Symfony\Component\Security\Http\Firewall\LogoutListener" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">event dispatcher</argument>
      <argument type="collection"/>
    </service>
    <service id="security.logout.listener.session" class="Symfony\Component\Security\Http\EventListener\SessionLogoutListener" abstract="true"/>
    <service id="security.logout.listener.cookie_clearing" class="Symfony\Component\Security\Http\EventListener\CookieClearingLogoutListener" abstract="true"/>
    <service id="security.logout.listener.default" class="Symfony\Component\Security\Http\EventListener\DefaultLogoutListener" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">target url</argument>
    </service>
    <service id="security.authentication.form_entry_point" class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" abstract="true">
      <argument type="service" id="http_kernel"/>
    </service>
    <service id="security.authentication.listener.abstract" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">Provider-shared Key</argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.custom_success_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler" abstract="true">
      <argument type="abstract">The custom success handler service</argument>
      <argument type="collection"/>
      <argument type="abstract">Provider-shared Key</argument>
    </service>
    <service id="security.authentication.success_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="security.authentication.custom_failure_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationFailureHandler" abstract="true">
      <argument type="abstract">The custom failure handler service</argument>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.failure_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.exception_listener" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">Provider-shared Key</argument>
      <argument type="service" id="security.authentication.entry_point" on-invalid="null"/>
      <argument>null</argument>
      <argument type="service" id="security.access.denied_handler" on-invalid="null"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.authentication.switchuser_listener" class="Symfony\Component\Security\Http\Firewall\SwitchUserListener" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="abstract">User Provider</argument>
      <argument type="abstract">User Checker</argument>
      <argument type="abstract">Provider Key</argument>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>_switch_user</argument>
      <argument>ROLE_ALLOWED_TO_SWITCH</argument>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.access_listener" class="Symfony\Component\Security\Http\Firewall\AccessListener">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.listener.rememberme" class="Symfony\Component\Security\Http\Firewall\RememberMeListener" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id="security.authentication.rememberme"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="abstract">Catch exception flag set in RememberMeFactory</argument>
      <argument type="service" id="security.authentication.session_strategy"/>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.provider.rememberme" class="Symfony\Component\Security\Core\Authentication\Provider\RememberMeAuthenticationProvider" abstract="true">
      <argument type="abstract">User Checker</argument>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.rememberme.token.provider.in_memory" class="Symfony\Component\Security\Core\Authentication\RememberMe\InMemoryTokenProvider"/>
    <service id="security.authentication.rememberme.services.abstract" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="collection"/>
      <argument type="abstract">Shared Token Key</argument>
      <argument type="abstract">Shared Provider Key</argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.rememberme.services.persistent" class="Symfony\Component\Security\Http\RememberMe\PersistentTokenBasedRememberMeServices" abstract="true">
      <argument type="collection"/>
      <argument type="abstract">Shared Token Key</argument>
      <argument type="abstract">Shared Provider Key</argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.rememberme.services.simplehash" class="Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices" abstract="true">
      <argument type="collection"/>
      <argument type="abstract">Shared Token Key</argument>
      <argument type="abstract">Shared Provider Key</argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.rememberme.response_listener" class="Symfony\Component\Security\Http\RememberMe\ResponseListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="security.authentication.manager" class="Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager">
      <argument type="iterator">
        <argument type="service" id="security.authentication.provider.dao.back_support"/>
        <argument type="service" id="security.authentication.provider.anonymous.back_support"/>
        <argument type="service" id="security.authentication.provider.guard.uvdesk_api"/>
        <argument type="service" id="security.authentication.provider.anonymous.uvdesk_api"/>
        <argument type="service" id="security.authentication.provider.dao.customer"/>
        <argument type="service" id="security.authentication.provider.anonymous.customer"/>
      </argument>
      <argument>true</argument>
      <call method="setEventDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.listener.anonymous" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="abstract">Key</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.provider.anonymous" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider">
      <argument type="abstract">Key</argument>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.listener.form" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">Provider-shared Key</argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.listener.x509" class="Symfony\Component\Security\Http\Firewall\X509AuthenticationListener" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="abstract">Provider-shared Key</argument>
      <argument type="abstract">x509 user</argument>
      <argument type="abstract">x509 credentials</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.listener.json" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordJsonAuthenticationListener" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">Provider-shared Key</argument>
      <argument type="abstract">Failure handler</argument>
      <argument type="abstract">Success Handler</argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="property_accessor" on-invalid="null"/>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
      </call>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.listener.remote_user" class="Symfony\Component\Security\Http\Firewall\RemoteUserAuthenticationListener" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="abstract">Provider-shared Key</argument>
      <argument type="abstract">REMOTE_USER server env var</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.listener.basic" class="Symfony\Component\Security\Http\Firewall\BasicAuthenticationListener" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="abstract">Provider-shared Key</argument>
      <argument type="abstract">Entry Point</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.provider.dao" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" abstract="true">
      <argument type="abstract">User Provider</argument>
      <argument type="abstract">User Checker</argument>
      <argument type="abstract">Provider-shared Key</argument>
      <argument type="service" id="security.password_hasher_factory"/>
      <argument>true</argument>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.provider.ldap_bind" class="Symfony\Component\Security\Core\Authentication\Provider\LdapBindAuthenticationProvider" abstract="true">
      <argument type="abstract">User Provider</argument>
      <argument type="abstract">UserChecker</argument>
      <argument type="abstract">Provider-shared Key</argument>
      <argument type="abstract">LDAP</argument>
      <argument type="abstract">Base DN</argument>
      <argument>true</argument>
      <argument type="abstract">search dn</argument>
      <argument type="abstract">search password</argument>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.provider.pre_authenticated" class="Symfony\Component\Security\Core\Authentication\Provider\PreAuthenticatedAuthenticationProvider" abstract="true">
      <argument type="abstract">User Provider</argument>
      <argument type="abstract">UserChecker</argument>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="twig.extension.logout_url" class="Symfony\Bridge\Twig\Extension\LogoutUrlExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="twig.extension.security" class="Symfony\Bridge\Twig\Extension\SecurityExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
      <argument type="service" id="security.impersonate_url_generator" on-invalid="ignore"/>
    </service>
    <service id="data_collector.security" class="Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector">
      <tag name="data_collector" template="@Security/Collector/security.html.twig" id="security" priority="270"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id="security.role_hierarchy"/>
      <argument type="service" id="security.logout_url_generator"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.security.firewall" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.authentication.guard_handler" class="Symfony\Component\Security\Guard\GuardAuthenticatorHandler">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="collection"/>
      <call method="setSessionAuthenticationStrategy">
        <argument type="service" id="security.authentication.session_strategy"/>
      </call>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.provider.guard" class="Symfony\Component\Security\Guard\Provider\GuardAuthenticationProvider" abstract="true">
      <argument type="abstract">Authenticators</argument>
      <argument type="abstract">User Provider</argument>
      <argument type="abstract">Provider-shared Key</argument>
      <argument type="abstract">User Checker</argument>
      <argument type="service" id="security.user_password_hasher"/>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.listener.guard" class="Symfony\Component\Security\Guard\Firewall\GuardAuthenticationListener" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.authentication.guard_handler"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="abstract">Provider-shared Key</argument>
      <argument type="abstract">Authenticators</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>true</argument>
      <argument type="service" id="security.token_storage"/>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="debug.security.access.decision_manager" class="Symfony\Component\Security\Core\Authorization\TraceableAccessDecisionManager">
      <tag name="container.decorator" id="security.access.decision_manager"/>
      <argument type="service" id="debug.security.access.decision_manager.inner"/>
    </service>
    <service id="debug.security.voter.vote_listener" class="Symfony\Bundle\SecurityBundle\EventListener\VoteListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
    </service>
    <service id="debug.security.firewall" class="Symfony\Bundle\SecurityBundle\Debug\TraceableFirewallListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="security.command.debug_firewall" class="Symfony\Bundle\SecurityBundle\Command\DebugFirewallCommand">
      <tag name="console.command" command="debug:firewall"/>
      <tag name="container.no_preload"/>
      <argument>%security.firewalls%</argument>
      <argument type="service" id=".service_locator.Y0rYR9K"/>
      <argument type="service" id=".service_locator.FkiYa_u"/>
      <argument type="collection"/>
      <argument>false</argument>
      <call method="setName">
        <argument>debug:firewall</argument>
      </call>
      <call method="setDescription">
        <argument>Display information about your security firewall(s)</argument>
      </call>
    </service>
    <service id="security.user_providers" class="Symfony\Component\Security\Core\User\ChainUserProvider">
      <argument type="iterator">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Providers\UserProvider"/>
        <argument type="service" id="Webkul\UVDesk\ApiBundle\Providers\ApiCredentials"/>
      </argument>
    </service>
    <service id="security.firewall.map.config.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig">
      <argument>dev</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.Iy.T22O</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.Iy.T22O" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>^/(_(profiler|wdt)|css|images|js)/</argument>
    </service>
    <service id="security.firewall.map.context.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="iterator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.dev"/>
    </service>
    <service id="security.firewall.map.config.back_support" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig">
      <argument>back_support</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.jrF4Gab</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>user.provider</argument>
      <argument>back_support</argument>
      <argument>security.authentication.form_entry_point.back_support</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>form_login</argument>
        <argument>anonymous</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.jrF4Gab" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>/member</argument>
    </service>
    <service id="security.event_dispatcher.back_support" class="Symfony\Component\EventDispatcher\EventDispatcher">
      <tag name="security.event_dispatcher.back_support">event_dispatcher.dispatcher</tag>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.logout.listener.default.back_support"/>
          <argument>onLogout</argument>
        </argument>
        <argument>64</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.logout.listener.session.back_support"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.logout.listener.csrf_token_clearing"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="security.context_listener.0" class="Symfony\Component\Security\Http\Firewall\ContextListener">
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="iterator">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Providers\UserProvider"/>
        <argument type="service" id="Webkul\UVDesk\ApiBundle\Providers\ApiCredentials"/>
      </argument>
      <argument>back_support</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="collection">
        <argument type="service" id="security.token_storage"/>
        <argument>enableUsageTracking</argument>
      </argument>
    </service>
    <service id="security.logout_listener.back_support" class="Symfony\Component\Security\Http\Firewall\LogoutListener">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.event_dispatcher.back_support"/>
      <argument type="collection">
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">logout</argument>
        <argument key="logout_path">helpdesk_member_handle_logout</argument>
      </argument>
    </service>
    <service id="security.logout.listener.default.back_support" class="Symfony\Component\Security\Http\EventListener\DefaultLogoutListener">
      <tag name="kernel.event_subscriber" dispatcher="security.event_dispatcher.back_support"/>
      <argument type="service" id="security.http_utils"/>
      <argument>helpdesk_member_handle_login</argument>
    </service>
    <service id="security.logout.listener.session.back_support" class="Symfony\Component\Security\Http\EventListener\SessionLogoutListener">
      <tag name="kernel.event_subscriber" dispatcher="security.event_dispatcher.back_support"/>
    </service>
    <service id="security.authentication.provider.dao.back_support" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider">
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Providers\UserProvider"/>
      <argument type="service" id="security.user_checker"/>
      <argument>back_support</argument>
      <argument type="service" id="security.password_hasher_factory"/>
      <argument>true</argument>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.success_handler.back_support.form_login" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
      <call method="setOptions">
        <argument type="collection">
          <argument key="use_referer">true</argument>
          <argument key="login_path">helpdesk_member_handle_login</argument>
          <argument key="default_target_path">helpdesk_member_dashboard</argument>
          <argument key="always_use_default_target_path">true</argument>
          <argument key="target_path_parameter">_target_path</argument>
        </argument>
      </call>
      <call method="setFirewallName">
        <argument>back_support</argument>
      </call>
    </service>
    <service id="security.authentication.failure_handler.back_support.form_login" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <call method="setOptions">
        <argument type="collection">
          <argument key="login_path">helpdesk_member_handle_login</argument>
          <argument key="failure_path">null</argument>
          <argument key="failure_forward">false</argument>
          <argument key="failure_path_parameter">_failure_path</argument>
        </argument>
      </call>
    </service>
    <service id="security.authentication.listener.form.back_support" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener">
      <tag name="security.remember_me_aware" id="back_support" provider="user.provider"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument>back_support</argument>
      <argument type="service" id="security.authentication.success_handler.back_support.form_login"/>
      <argument type="service" id="security.authentication.failure_handler.back_support.form_login"/>
      <argument type="collection">
        <argument key="login_path">helpdesk_member_handle_login</argument>
        <argument key="check_path">helpdesk_member_handle_login</argument>
        <argument key="use_forward">false</argument>
        <argument key="require_previous_session">false</argument>
        <argument key="username_parameter">_username</argument>
        <argument key="password_parameter">_password</argument>
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">authenticate</argument>
        <argument key="enable_csrf">false</argument>
        <argument key="post_only">true</argument>
        <argument key="form_only">false</argument>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument>null</argument>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.form_entry_point.back_support" class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument>helpdesk_member_handle_login</argument>
      <argument>false</argument>
    </service>
    <service id="security.authentication.listener.anonymous.back_support" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener">
      <argument type="service" id="security.untracked_token_storage"/>
      <argument>%container.build_hash%</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.provider.anonymous.back_support" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider">
      <argument>%container.build_hash%</argument>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.exception_listener.back_support" class="Symfony\Component\Security\Http\Firewall\ExceptionListener">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>back_support</argument>
      <argument type="service" id="security.authentication.form_entry_point.back_support"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.firewall.map.context.back_support" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.context_listener.0"/>
        <argument type="service" id="security.authentication.listener.form.back_support"/>
        <argument type="service" id="security.authentication.listener.anonymous.back_support"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.back_support"/>
      <argument type="service" id="security.logout_listener.back_support"/>
      <argument type="service" id="security.firewall.map.config.back_support"/>
    </service>
    <service id="security.firewall.map.config.uvdesk_api" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig">
      <argument>uvdesk_api</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.p4VlLPC</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>Webkul\UVDesk\ApiBundle\Providers\ApiCredentials</argument>
      <argument>uvdesk_api</argument>
      <argument>Webkul\UVDesk\ApiBundle\Security\Guards\APIGuard</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>guard</argument>
        <argument>anonymous</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.p4VlLPC" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>^/api</argument>
    </service>
    <service id="security.event_dispatcher.uvdesk_api" class="Symfony\Component\EventDispatcher\EventDispatcher">
      <tag name="security.event_dispatcher.uvdesk_api">event_dispatcher.dispatcher</tag>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.logout.listener.csrf_token_clearing"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="security.context_listener.1" class="Symfony\Component\Security\Http\Firewall\ContextListener">
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="iterator">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Providers\UserProvider"/>
        <argument type="service" id="Webkul\UVDesk\ApiBundle\Providers\ApiCredentials"/>
      </argument>
      <argument>uvdesk_api</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="collection">
        <argument type="service" id="security.token_storage"/>
        <argument>enableUsageTracking</argument>
      </argument>
    </service>
    <service id="security.authentication.provider.guard.uvdesk_api" class="Symfony\Component\Security\Guard\Provider\GuardAuthenticationProvider">
      <argument type="iterator">
        <argument type="service" id="Webkul\UVDesk\ApiBundle\Security\Guards\APIGuard"/>
      </argument>
      <argument type="service" id="Webkul\UVDesk\ApiBundle\Providers\ApiCredentials"/>
      <argument>uvdesk_api</argument>
      <argument type="service" id="security.user_checker"/>
      <argument type="service" id="security.user_password_hasher"/>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.listener.guard.uvdesk_api" class="Symfony\Component\Security\Guard\Firewall\GuardAuthenticationListener">
      <tag name="security.remember_me_aware" id="uvdesk_api" provider="Webkul\UVDesk\ApiBundle\Providers\ApiCredentials"/>
      <argument type="service" id="security.authentication.guard_handler"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument>uvdesk_api</argument>
      <argument type="iterator">
        <argument type="service" id="Webkul\UVDesk\ApiBundle\Security\Guards\APIGuard"/>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>true</argument>
      <argument type="service" id="security.token_storage"/>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.listener.anonymous.uvdesk_api" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener">
      <argument type="service" id="security.untracked_token_storage"/>
      <argument>%container.build_hash%</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.provider.anonymous.uvdesk_api" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider">
      <argument>%container.build_hash%</argument>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.exception_listener.uvdesk_api" class="Symfony\Component\Security\Http\Firewall\ExceptionListener">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>uvdesk_api</argument>
      <argument type="service" id="Webkul\UVDesk\ApiBundle\Security\Guards\APIGuard"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.firewall.map.context.uvdesk_api" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.context_listener.1"/>
        <argument type="service" id="security.authentication.listener.guard.uvdesk_api"/>
        <argument type="service" id="security.authentication.listener.anonymous.uvdesk_api"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.uvdesk_api"/>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.uvdesk_api"/>
    </service>
    <service id="security.firewall.map.config.customer" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig">
      <argument>customer</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.01Y6ZVJ</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>user.provider</argument>
      <argument>customer</argument>
      <argument>security.authentication.form_entry_point.customer</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>form_login</argument>
        <argument>anonymous</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.01Y6ZVJ" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>/</argument>
    </service>
    <service id="security.event_dispatcher.customer" class="Symfony\Component\EventDispatcher\EventDispatcher">
      <tag name="security.event_dispatcher.customer">event_dispatcher.dispatcher</tag>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.logout.listener.default.customer"/>
          <argument>onLogout</argument>
        </argument>
        <argument>64</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.logout.listener.session.customer"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.logout.listener.csrf_token_clearing"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="security.context_listener.2" class="Symfony\Component\Security\Http\Firewall\ContextListener">
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="iterator">
        <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Providers\UserProvider"/>
        <argument type="service" id="Webkul\UVDesk\ApiBundle\Providers\ApiCredentials"/>
      </argument>
      <argument>customer</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="collection">
        <argument type="service" id="security.token_storage"/>
        <argument>enableUsageTracking</argument>
      </argument>
    </service>
    <service id="security.logout_listener.customer" class="Symfony\Component\Security\Http\Firewall\LogoutListener">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.event_dispatcher.customer"/>
      <argument type="collection">
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">logout</argument>
        <argument key="logout_path">helpdesk_customer_logout</argument>
      </argument>
    </service>
    <service id="security.logout.listener.default.customer" class="Symfony\Component\Security\Http\EventListener\DefaultLogoutListener">
      <tag name="kernel.event_subscriber" dispatcher="security.event_dispatcher.customer"/>
      <argument type="service" id="security.http_utils"/>
      <argument>helpdesk_customer_login</argument>
    </service>
    <service id="security.logout.listener.session.customer" class="Symfony\Component\Security\Http\EventListener\SessionLogoutListener">
      <tag name="kernel.event_subscriber" dispatcher="security.event_dispatcher.customer"/>
    </service>
    <service id="security.authentication.provider.dao.customer" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider">
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Providers\UserProvider"/>
      <argument type="service" id="security.user_checker"/>
      <argument>customer</argument>
      <argument type="service" id="security.password_hasher_factory"/>
      <argument>true</argument>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.success_handler.customer.form_login" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
      <call method="setOptions">
        <argument type="collection">
          <argument key="use_referer">true</argument>
          <argument key="login_path">helpdesk_customer_login</argument>
          <argument key="default_target_path">helpdesk_customer_ticket_collection</argument>
          <argument key="always_use_default_target_path">true</argument>
          <argument key="target_path_parameter">_target_path</argument>
        </argument>
      </call>
      <call method="setFirewallName">
        <argument>customer</argument>
      </call>
    </service>
    <service id="security.authentication.failure_handler.customer.form_login" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <call method="setOptions">
        <argument type="collection">
          <argument key="login_path">helpdesk_customer_login</argument>
          <argument key="failure_path">null</argument>
          <argument key="failure_forward">false</argument>
          <argument key="failure_path_parameter">_failure_path</argument>
        </argument>
      </call>
    </service>
    <service id="security.authentication.listener.form.customer" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener">
      <tag name="security.remember_me_aware" id="customer" provider="user.provider"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument>customer</argument>
      <argument type="service" id="security.authentication.success_handler.customer.form_login"/>
      <argument type="service" id="security.authentication.failure_handler.customer.form_login"/>
      <argument type="collection">
        <argument key="login_path">helpdesk_customer_login</argument>
        <argument key="check_path">helpdesk_customer_login</argument>
        <argument key="use_forward">false</argument>
        <argument key="require_previous_session">false</argument>
        <argument key="username_parameter">_username</argument>
        <argument key="password_parameter">_password</argument>
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">authenticate</argument>
        <argument key="enable_csrf">false</argument>
        <argument key="post_only">true</argument>
        <argument key="form_only">false</argument>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument>null</argument>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.form_entry_point.customer" class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument>helpdesk_customer_login</argument>
      <argument>false</argument>
    </service>
    <service id="security.authentication.listener.anonymous.customer" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener">
      <argument type="service" id="security.untracked_token_storage"/>
      <argument>%container.build_hash%</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.provider.anonymous.customer" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider">
      <argument>%container.build_hash%</argument>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.exception_listener.customer" class="Symfony\Component\Security\Http\Firewall\ExceptionListener">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>customer</argument>
      <argument type="service" id="security.authentication.form_entry_point.customer"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.firewall.map.context.customer" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.context_listener.2"/>
        <argument type="service" id="security.authentication.listener.form.customer"/>
        <argument type="service" id="security.authentication.listener.anonymous.customer"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.customer"/>
      <argument type="service" id="security.logout_listener.customer"/>
      <argument type="service" id="security.firewall.map.config.customer"/>
    </service>
    <service id=".service_locator.Y0rYR9K" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.firewall.map.context.back_support" type="service_closure" id="security.firewall.map.context.back_support"/>
        <argument key="security.firewall.map.context.customer" type="service_closure" id="security.firewall.map.context.customer"/>
        <argument key="security.firewall.map.context.dev" type="service_closure" id="security.firewall.map.context.dev"/>
        <argument key="security.firewall.map.context.uvdesk_api" type="service_closure" id="security.firewall.map.context.uvdesk_api"/>
      </argument>
    </service>
    <service id=".security.request_matcher.0MuT6vZ" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>/member/login</argument>
    </service>
    <service id=".security.request_matcher.0tmGHYx" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>/member/create-account</argument>
    </service>
    <service id=".security.request_matcher..ADSPOW" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>/member/forgot-password</argument>
    </service>
    <service id=".security.request_matcher.TX0hlff" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>/member/update-credentials</argument>
    </service>
    <service id=".security.request_matcher.Xr5bh5g" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>/member/mailbox/listener</argument>
    </service>
    <service id=".security.request_matcher.1wkQggQ" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>/member/</argument>
    </service>
    <service id=".security.request_matcher.nNuE.Sz" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>/customer/login</argument>
    </service>
    <service id=".security.request_matcher.Y.F7a8t" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>/customer/create-ticket</argument>
    </service>
    <service id=".security.request_matcher.UWNcV4p" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>/customer/forgot-password</argument>
    </service>
    <service id=".security.request_matcher.7eJpeDW" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>/customer/update-credentials</argument>
    </service>
    <service id=".security.request_matcher.8TPW1Kw" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>/customer/</argument>
    </service>
    <service id="security.command.user_password_encoder" class="Symfony\Bundle\SecurityBundle\Command\UserPasswordEncoderCommand">
      <tag name="console.command" command="security:encode-password"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument type="collection">
        <argument>Webkul\UVDesk\CoreFrameworkBundle\Entity\User</argument>
      </argument>
      <call method="setName">
        <argument>security:encode-password</argument>
      </call>
      <call method="setDescription">
        <argument>Encode a password</argument>
      </call>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use "security.command.user_password_hash" instead.</deprecated>
    </service>
    <service id="security.command.user_password_hash" class="Symfony\Component\PasswordHasher\Command\UserPasswordHashCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="security.password_hasher_factory"/>
      <argument type="collection">
        <argument>Webkul\UVDesk\CoreFrameworkBundle\Entity\User</argument>
      </argument>
      <call method="setName">
        <argument>security:hash-password</argument>
      </call>
      <call method="setDescription">
        <argument>Hash a user password</argument>
      </call>
    </service>
    <service id=".4_Swift_Transport_Esmtp_Auth_NTLMAuthenticator~P.7E1gC" class="Swift_Transport_Esmtp_Auth_NTLMAuthenticator"/>
    <service id=".3_Swift_Transport_Esmtp_Auth_PlainAuthenticator~P.7E1gC" class="Swift_Transport_Esmtp_Auth_PlainAuthenticator"/>
    <service id=".2_Swift_Transport_Esmtp_Auth_LoginAuthenticator~P.7E1gC" class="Swift_Transport_Esmtp_Auth_LoginAuthenticator"/>
    <service id=".1_Swift_Transport_Esmtp_Auth_CramMd5Authenticator~P.7E1gC" class="Swift_Transport_Esmtp_Auth_CramMd5Authenticator"/>
    <service id="swiftmailer.mailer.abstract" class="Swift_Mailer" public="true" abstract="true">
      <argument type="service" id="swiftmailer.mailer.default.transport.spool"/>
    </service>
    <service id="swiftmailer.transport.smtp.configurator.abstract" class="Symfony\Bundle\SwiftmailerBundle\DependencyInjection\SmtpTransportConfigurator" abstract="true"/>
    <service id="swiftmailer.transport.sendmail.abstract" class="Swift_Transport_SendmailTransport" abstract="true"/>
    <service id="swiftmailer.transport.null.abstract" class="Swift_Transport_NullTransport" abstract="true"/>
    <service id="swiftmailer.transport.failover" class="Swift_Transport_FailoverTransport"/>
    <service id="swiftmailer.transport.buffer.abstract" class="Swift_Transport_StreamBuffer" abstract="true">
      <argument type="service" id="swiftmailer.transport.replacementfactory"/>
    </service>
    <service id="swiftmailer.transport.authhandler.abstract" class="Swift_Transport_Esmtp_AuthHandler" abstract="true">
      <argument type="collection">
        <argument type="service" id=".1_Swift_Transport_Esmtp_Auth_CramMd5Authenticator~P.7E1gC"/>
        <argument type="service" id=".2_Swift_Transport_Esmtp_Auth_LoginAuthenticator~P.7E1gC"/>
        <argument type="service" id=".3_Swift_Transport_Esmtp_Auth_PlainAuthenticator~P.7E1gC"/>
        <argument type="service" id=".4_Swift_Transport_Esmtp_Auth_NTLMAuthenticator~P.7E1gC"/>
      </argument>
    </service>
    <service id="swiftmailer.transport.eventdispatcher.abstract" class="Swift_Events_SimpleEventDispatcher" abstract="true"/>
    <service id="swiftmailer.transport.replacementfactory" class="Swift_StreamFilters_StringReplacementFilterFactory"/>
    <service id="swiftmailer.plugin.redirecting.abstract" class="Swift_Plugins_RedirectingPlugin" abstract="true"/>
    <service id="swiftmailer.plugin.antiflood.abstract" class="Swift_Plugins_AntiFloodPlugin" abstract="true"/>
    <service id="swiftmailer.plugin.impersonate.abstract" class="Swift_Plugins_ImpersonatePlugin" abstract="true"/>
    <service id="swiftmailer.plugin.messagelogger.abstract" class="Swift_Plugins_MessageLogger" abstract="true"/>
    <service id="swiftmailer.transport.smtp.abstract" class="Swift_Transport_EsmtpTransport" abstract="true"/>
    <service id="swiftmailer.transport.spool.abstract" class="Swift_Transport_SpoolTransport" abstract="true"/>
    <service id="swiftmailer.spool.file.abstract" class="Swift_FileSpool" abstract="true">
      <argument></argument>
    </service>
    <service id="swiftmailer.spool.memory.abstract" class="Swift_MemorySpool" abstract="true"/>
    <service id="swiftmailer.email_sender.listener" class="Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="swiftmailer.data_collector" class="Symfony\Bundle\SwiftmailerBundle\DataCollector\MessageDataCollector">
      <tag name="data_collector" template="@Swiftmailer/Collector/swiftmailer.html.twig" id="swiftmailer" priority="245"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="swiftmailer.command.debug" class="Symfony\Bundle\SwiftmailerBundle\Command\DebugCommand">
      <tag name="console.command" command="debug:swiftmailer"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>debug:swiftmailer</argument>
      </call>
    </service>
    <service id="swiftmailer.command.new_email" class="Symfony\Bundle\SwiftmailerBundle\Command\NewEmailCommand">
      <tag name="console.command" command="swiftmailer:email:send"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>swiftmailer:email:send</argument>
      </call>
    </service>
    <service id="swiftmailer.command.send_email" class="Symfony\Bundle\SwiftmailerBundle\Command\SendEmailCommand">
      <tag name="console.command" command="swiftmailer:spool:send"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>swiftmailer:spool:send</argument>
      </call>
    </service>
    <service id="swiftmailer.mailer.default.transport.eventdispatcher" class="Swift_Events_SimpleEventDispatcher"/>
    <service id="swiftmailer.mailer.default.transport.dynamic" class="Swift_Transport">
      <argument type="collection">
        <argument key="transport">smtp</argument>
        <argument key="url">%env(MAILER_URL)%</argument>
        <argument key="username">null</argument>
        <argument key="password">null</argument>
        <argument key="host">localhost</argument>
        <argument key="port">null</argument>
        <argument key="timeout">30</argument>
        <argument key="source_ip">null</argument>
        <argument key="local_domain">null</argument>
        <argument key="encryption">null</argument>
        <argument key="auth_mode">null</argument>
        <argument key="command">/usr/sbin/sendmail -t -i</argument>
        <argument key="stream_options" type="collection"/>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="null"/>
      <argument type="service" id="swiftmailer.mailer.default.transport.eventdispatcher"/>
      <factory class="Symfony\Bundle\SwiftmailerBundle\DependencyInjection\SwiftmailerTransportFactory" method="createTransport"/>
    </service>
    <service id="swiftmailer.mailer.default" class="Swift_Mailer" public="true">
      <argument type="service" id="swiftmailer.mailer.default.transport.spool"/>
    </service>
    <service id="swiftmailer.mailer.default.spool.memory" class="Swift_MemorySpool"/>
    <service id="swiftmailer.mailer.default.transport.spool" class="Swift_Transport_SpoolTransport">
      <argument type="service" id="swiftmailer.mailer.default.transport.eventdispatcher"/>
      <argument type="service" id="swiftmailer.mailer.default.spool.memory"/>
      <call method="registerPlugin">
        <argument type="service" id="swiftmailer.mailer.default.plugin.messagelogger"/>
      </call>
    </service>
    <service id="swiftmailer.mailer.default.plugin.messagelogger" class="Swift_Plugins_MessageLogger" public="true">
      <tag name="swiftmailer.default.plugin"/>
    </service>
    <service id="twig.missing_extension_suggestor" class="Twig\Extra\TwigExtraBundle\MissingExtensionSuggestor"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Console\EnvironmentVariables" class="App\Console\EnvironmentVariables" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Console\EnvironmentVariables" class="App\Console\EnvironmentVariables" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Console\Wizard\ConfigureHelpdesk" class="App\Console\Wizard\ConfigureHelpdesk" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Console\Wizard\ConfigureHelpdesk" class="App\Console\Wizard\ConfigureHelpdesk" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Console\Wizard\DefaultUser" class="App\Console\Wizard\DefaultUser" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Console\Wizard\DefaultUser" class="App\Console\Wizard\DefaultUser" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Console\Wizard\MigrateDatabase" class="App\Console\Wizard\MigrateDatabase" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Console\Wizard\MigrateDatabase" class="App\Console\Wizard\MigrateDatabase" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\BaseController" class="App\Controller\BaseController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\BaseController" class="App\Controller\BaseController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\BaseController" class="App\Controller\BaseController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\ConfigureHelpdesk" class="App\Controller\ConfigureHelpdesk" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\ConfigureHelpdesk" class="App\Controller\ConfigureHelpdesk" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\ConfigureHelpdesk" class="App\Controller\ConfigureHelpdesk" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\ImageCache\ImageCacheController" class="App\Controller\ImageCache\ImageCacheController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\ImageCache\ImageCacheController" class="App\Controller\ImageCache\ImageCacheController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\ImageCache\ImageCacheController" class="App\Controller\ImageCache\ImageCacheController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\AppFixtures" class="App\DataFixtures\AppFixtures" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\AppFixtures" class="App\DataFixtures\AppFixtures" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\EventListener\ExceptionSubscriber" class="App\EventListener\ExceptionSubscriber" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\EventListener\ExceptionSubscriber" class="App\EventListener\ExceptionSubscriber" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Definition\RoutingResourceInterface.0.App\Routing\RoutingResource" class="App\Routing\RoutingResource" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Routing\RoutingResource" class="App\Routing\RoutingResource" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\Account" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Account" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\Account" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Account" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Controller\Account" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Account" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\AccountXHR" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\AccountXHR" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\AccountXHR" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\AccountXHR" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Controller\AccountXHR" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\AccountXHR" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\Authentication" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Authentication" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\Authentication" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Authentication" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Controller\Authentication" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Authentication" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\Customer" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Customer" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\Customer" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Customer" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Controller\Customer" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Customer" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\CustomerXHR" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\CustomerXHR" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\CustomerXHR" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\CustomerXHR" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Controller\CustomerXHR" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\CustomerXHR" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\Email" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Email" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\Email" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Email" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Controller\Email" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Email" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\EmailSettings" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\EmailSettings" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\EmailSettings" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\EmailSettings" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Controller\EmailSettings" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\EmailSettings" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\EmailSettingsXHR" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\EmailSettingsXHR" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\EmailSettingsXHR" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\EmailSettingsXHR" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Controller\EmailSettingsXHR" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\EmailSettingsXHR" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\Group" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Group" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\Group" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Group" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Controller\Group" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Group" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\GroupXHR" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\GroupXHR" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\GroupXHR" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\GroupXHR" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Controller\GroupXHR" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\GroupXHR" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\Microsoft\MicrosoftApps" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Microsoft\MicrosoftApps" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\Microsoft\MicrosoftApps" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Microsoft\MicrosoftApps" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Controller\Microsoft\MicrosoftApps" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Microsoft\MicrosoftApps" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\Microsoft\MicrosoftAppsXHR" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Microsoft\MicrosoftAppsXHR" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\Microsoft\MicrosoftAppsXHR" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Microsoft\MicrosoftAppsXHR" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Controller\Microsoft\MicrosoftAppsXHR" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Microsoft\MicrosoftAppsXHR" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\Privilege" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Privilege" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\Privilege" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Privilege" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Controller\Privilege" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Privilege" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\PrivilegeXHR" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\PrivilegeXHR" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\PrivilegeXHR" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\PrivilegeXHR" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Controller\PrivilegeXHR" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\PrivilegeXHR" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\Report" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Report" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\Report" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Report" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Controller\Report" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Report" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\SavedReplies" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\SavedReplies" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\SavedReplies" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\SavedReplies" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Controller\SavedReplies" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\SavedReplies" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\SwiftMailer" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\SwiftMailer" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\SwiftMailer" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\SwiftMailer" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Controller\SwiftMailer" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\SwiftMailer" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\SwiftMailerXHR" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\SwiftMailerXHR" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\SwiftMailerXHR" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\SwiftMailerXHR" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Controller\SwiftMailerXHR" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\SwiftMailerXHR" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\Team" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Team" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\Team" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Team" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Controller\Team" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Team" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\TeamXHR" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\TeamXHR" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\TeamXHR" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\TeamXHR" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Controller\TeamXHR" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\TeamXHR" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\Theme" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Theme" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\Theme" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Theme" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Controller\Theme" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Theme" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\Thread" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Thread" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\Thread" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Thread" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Controller\Thread" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Thread" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\ThreadXHR" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\ThreadXHR" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\ThreadXHR" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\ThreadXHR" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Controller\ThreadXHR" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\ThreadXHR" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\Ticket" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Ticket" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\Ticket" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Ticket" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Controller\Ticket" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\Ticket" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\TicketXHR" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\TicketXHR" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\CoreFrameworkBundle\Controller\TicketXHR" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\TicketXHR" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Controller\TicketXHR" class="Webkul\UVDesk\CoreFrameworkBundle\Controller\TicketXHR" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Framework\ExtendableComponentInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\AsideTemplate" class="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\AsideTemplate" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\AsideTemplate" class="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\AsideTemplate" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Framework\ExtendableComponentInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Dashboard" class="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Dashboard" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Dashboard" class="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Dashboard" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Framework\ExtendableComponentInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\DashboardTemplate" class="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\DashboardTemplate" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\DashboardTemplate" class="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\DashboardTemplate" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Framework\ExtendableComponentInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\HomepageTemplate" class="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\HomepageTemplate" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\HomepageTemplate" class="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\HomepageTemplate" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Framework\ExtendableComponentInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\NavigationTemplate" class="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\NavigationTemplate" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\NavigationTemplate" class="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\NavigationTemplate" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Framework\ExtendableComponentInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\SearchTemplate" class="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\SearchTemplate" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\SearchTemplate" class="Webkul\UVDesk\CoreFrameworkBundle\Dashboard\SearchTemplate" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Definition\RouterInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Definition\RouteLoader" class="Webkul\UVDesk\CoreFrameworkBundle\Definition\RouteLoader" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Definition\RouteLoader" class="Webkul\UVDesk\CoreFrameworkBundle\Definition\RouteLoader" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Fixtures\AgentGroups" class="Webkul\UVDesk\CoreFrameworkBundle\Fixtures\AgentGroups" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Fixtures\AgentGroups" class="Webkul\UVDesk\CoreFrameworkBundle\Fixtures\AgentGroups" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Fixtures\AgentPrivileges" class="Webkul\UVDesk\CoreFrameworkBundle\Fixtures\AgentPrivileges" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Fixtures\AgentPrivileges" class="Webkul\UVDesk\CoreFrameworkBundle\Fixtures\AgentPrivileges" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Fixtures\EmailTemplates" class="Webkul\UVDesk\CoreFrameworkBundle\Fixtures\EmailTemplates" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Fixtures\EmailTemplates" class="Webkul\UVDesk\CoreFrameworkBundle\Fixtures\EmailTemplates" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Fixtures\HelpdeskBranding" class="Webkul\UVDesk\CoreFrameworkBundle\Fixtures\HelpdeskBranding" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Fixtures\HelpdeskBranding" class="Webkul\UVDesk\CoreFrameworkBundle\Fixtures\HelpdeskBranding" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Fixtures\TicketPriorities" class="Webkul\UVDesk\CoreFrameworkBundle\Fixtures\TicketPriorities" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Fixtures\TicketPriorities" class="Webkul\UVDesk\CoreFrameworkBundle\Fixtures\TicketPriorities" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Fixtures\TicketStatuses" class="Webkul\UVDesk\CoreFrameworkBundle\Fixtures\TicketStatuses" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Fixtures\TicketStatuses" class="Webkul\UVDesk\CoreFrameworkBundle\Fixtures\TicketStatuses" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Fixtures\TicketTypes" class="Webkul\UVDesk\CoreFrameworkBundle\Fixtures\TicketTypes" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Fixtures\TicketTypes" class="Webkul\UVDesk\CoreFrameworkBundle\Fixtures\TicketTypes" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Fixtures\UserRoles" class="Webkul\UVDesk\CoreFrameworkBundle\Fixtures\UserRoles" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Fixtures\UserRoles" class="Webkul\UVDesk\CoreFrameworkBundle\Fixtures\UserRoles" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Form\CreateTicket" class="Webkul\UVDesk\CoreFrameworkBundle\Form\CreateTicket" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Form\CreateTicket" class="Webkul\UVDesk\CoreFrameworkBundle\Form\CreateTicket" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Form\Mailbox" class="Webkul\UVDesk\CoreFrameworkBundle\Form\Mailbox" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Form\Mailbox" class="Webkul\UVDesk\CoreFrameworkBundle\Form\Mailbox" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Form\UserProfile" class="Webkul\UVDesk\CoreFrameworkBundle\Form\UserProfile" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Form\UserProfile" class="Webkul\UVDesk\CoreFrameworkBundle\Form\UserProfile" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\EventDispatcher\EventDispatcherInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Framework\EventDispatcher" class="Webkul\UVDesk\CoreFrameworkBundle\Framework\EventDispatcher" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Framework\EventDispatcher" class="Webkul\UVDesk\CoreFrameworkBundle\Framework\EventDispatcher" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.Webkul\UVDesk\CoreFrameworkBundle\Guides\BootstrappingProject" class="Webkul\UVDesk\CoreFrameworkBundle\Guides\BootstrappingProject" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Guides\BootstrappingProject" class="Webkul\UVDesk\CoreFrameworkBundle\Guides\BootstrappingProject" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Repository\AgentActivityRepository" class="Webkul\UVDesk\CoreFrameworkBundle\Repository\AgentActivityRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Repository\AgentActivityRepository" class="Webkul\UVDesk\CoreFrameworkBundle\Repository\AgentActivityRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Repository\Microsoft\MicrosoftAccountRepository" class="Webkul\UVDesk\CoreFrameworkBundle\Repository\Microsoft\MicrosoftAccountRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Repository\Microsoft\MicrosoftAccountRepository" class="Webkul\UVDesk\CoreFrameworkBundle\Repository\Microsoft\MicrosoftAccountRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Repository\Microsoft\MicrosoftAppRepository" class="Webkul\UVDesk\CoreFrameworkBundle\Repository\Microsoft\MicrosoftAppRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Repository\Microsoft\MicrosoftAppRepository" class="Webkul\UVDesk\CoreFrameworkBundle\Repository\Microsoft\MicrosoftAppRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Repository\RecaptchaRepository" class="Webkul\UVDesk\CoreFrameworkBundle\Repository\RecaptchaRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Repository\RecaptchaRepository" class="Webkul\UVDesk\CoreFrameworkBundle\Repository\RecaptchaRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Definition\RoutingResourceInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Routing\RoutingResource" class="Webkul\UVDesk\CoreFrameworkBundle\Routing\RoutingResource" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Routing\RoutingResource" class="Webkul\UVDesk\CoreFrameworkBundle\Routing\RoutingResource" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Security\Core\Authorization\Voter\VoterInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Security\TicketVoter" class="Webkul\UVDesk\CoreFrameworkBundle\Security\TicketVoter" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Security\TicketVoter" class="Webkul\UVDesk\CoreFrameworkBundle\Security\TicketVoter" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Framework\ExtendableComponentInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Tickets\QuickActionButtonCollection" class="Webkul\UVDesk\CoreFrameworkBundle\Tickets\QuickActionButtonCollection" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Tickets\QuickActionButtonCollection" class="Webkul\UVDesk\CoreFrameworkBundle\Tickets\QuickActionButtonCollection" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Framework\ExtendableComponentInterface.0.Webkul\UVDesk\CoreFrameworkBundle\Tickets\WidgetCollection" class="Webkul\UVDesk\CoreFrameworkBundle\Tickets\WidgetCollection" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\Tickets\WidgetCollection" class="Webkul\UVDesk\CoreFrameworkBundle\Tickets\WidgetCollection" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\AgentActivity" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\AgentActivity" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\AgentActivity" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\AgentActivity" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Agents" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Agents" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Agents" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Agents" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Branding" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Branding" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Branding" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Branding" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Customers" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Customers" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Customers" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Customers" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\EmailSettings" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\EmailSettings" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\EmailSettings" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\EmailSettings" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\EmailTemplates" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\EmailTemplates" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\EmailTemplates" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\EmailTemplates" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Groups" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Groups" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Groups" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Groups" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Kudos" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Kudos" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Kudos" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Kudos" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\MicrosoftApps" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\MicrosoftApps" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\MicrosoftApps" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\MicrosoftApps" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Privileges" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Privileges" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Privileges" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Privileges" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\SavedReplies" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\SavedReplies" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\SavedReplies" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\SavedReplies" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\SwiftMailer" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\SwiftMailer" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\SwiftMailer" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\SwiftMailer" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Tags" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Tags" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Tags" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Tags" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Teams" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Teams" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Teams" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\Teams" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\TicketTypes" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\TicketTypes" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\TicketTypes" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Items\TicketTypes" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Sections\Productivity" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Sections\Productivity" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Sections\Productivity" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Sections\Productivity" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Sections\Reports" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Sections\Reports" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Sections\Reports" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Sections\Reports" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Sections\Settings" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Sections\Settings" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Sections\Settings" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Sections\Settings" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Sections\Users" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Sections\Users" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Sections\Users" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Homepage\Sections\Users" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\NavigationInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Navigation\Home" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Navigation\Home" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Navigation\Home" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Navigation\Home" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\NavigationInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Navigation\Reports" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Navigation\Reports" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Navigation\Reports" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Navigation\Reports" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\NavigationInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Navigation\Ticket" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Navigation\Ticket" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Navigation\Ticket" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Navigation\Ticket" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Account\Profile" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Account\Profile" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Account\Profile" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Account\Profile" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Productivity\SavedReplies" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Productivity\SavedReplies" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Productivity\SavedReplies" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Productivity\SavedReplies" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Productivity\Tags" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Productivity\Tags" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Productivity\Tags" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Productivity\Tags" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Productivity\TicketTypes" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Productivity\TicketTypes" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Productivity\TicketTypes" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Productivity\TicketTypes" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Reports\AgentActivity" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Reports\AgentActivity" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Reports\AgentActivity" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Reports\AgentActivity" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Reports\Kudos" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Reports\Kudos" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Reports\Kudos" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Reports\Kudos" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Settings\Branding" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Settings\Branding" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Settings\Branding" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Settings\Branding" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Settings\EmailSettings" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Settings\EmailSettings" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Settings\EmailSettings" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Settings\EmailSettings" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Settings\EmailTemplates" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Settings\EmailTemplates" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Settings\EmailTemplates" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Settings\EmailTemplates" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Settings\MicrosoftApps" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Settings\MicrosoftApps" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Settings\MicrosoftApps" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Settings\MicrosoftApps" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Settings\SwiftMailer" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Settings\SwiftMailer" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Settings\SwiftMailer" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Settings\SwiftMailer" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Themes\Helpdesk" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Themes\Helpdesk" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Themes\Helpdesk" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Themes\Helpdesk" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Users\Agents" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Users\Agents" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Users\Agents" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Users\Agents" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Users\Customers" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Users\Customers" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Users\Customers" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Users\Customers" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Users\Groups" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Users\Groups" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Users\Groups" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Users\Groups" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Users\Privileges" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Users\Privileges" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Users\Privileges" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Users\Privileges" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Users\Teams" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Users\Teams" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Users\Teams" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Items\Users\Teams" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Account" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Account" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Account" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Account" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Apps" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Apps" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Apps" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Apps" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Branding" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Branding" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Branding" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Branding" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Productivity" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Productivity" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Productivity" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Productivity" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Reports" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Reports" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Reports" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Reports" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Settings" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Settings" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Settings" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Settings" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Users" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Users" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Users" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Panel\Sidebars\Users" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\AgentActivity" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\AgentActivity" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\AgentActivity" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\AgentActivity" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Agents" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Agents" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Agents" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Agents" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Apps" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Apps" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Apps" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Apps" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Branding" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Branding" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Branding" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Branding" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\EmailSettings" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\EmailSettings" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\EmailSettings" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\EmailSettings" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\EmailTemplates" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\EmailTemplates" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\EmailTemplates" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\EmailTemplates" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Groups" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Groups" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Groups" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Groups" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Kudos" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Kudos" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Kudos" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Kudos" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Privileges" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Privileges" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Privileges" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Privileges" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\SavedReplies" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\SavedReplies" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\SavedReplies" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\SavedReplies" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Tags" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Tags" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Tags" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Tags" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Teams" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Teams" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Teams" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Teams" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\TicketTypes" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\TicketTypes" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\TicketTypes" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\TicketTypes" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Tickets" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Tickets" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Tickets" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Dashboard\Search\Tickets" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Tickets\QuickActionButtonInterface.0.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Ticket\QuickActionButtons\SavedReplies" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Ticket\QuickActionButtons\SavedReplies" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Ticket\QuickActionButtons\SavedReplies" class="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Ticket\QuickActionButtons\SavedReplies" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\AutomationBundle\Controller\Automations\PreparedResponse" class="Webkul\UVDesk\AutomationBundle\Controller\Automations\PreparedResponse" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\AutomationBundle\Controller\Automations\PreparedResponse" class="Webkul\UVDesk\AutomationBundle\Controller\Automations\PreparedResponse" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\AutomationBundle\Controller\Automations\PreparedResponse" class="Webkul\UVDesk\AutomationBundle\Controller\Automations\PreparedResponse" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\AutomationBundle\Controller\Automations\PreparedResponseXHR" class="Webkul\UVDesk\AutomationBundle\Controller\Automations\PreparedResponseXHR" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\AutomationBundle\Controller\Automations\PreparedResponseXHR" class="Webkul\UVDesk\AutomationBundle\Controller\Automations\PreparedResponseXHR" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\AutomationBundle\Controller\Automations\PreparedResponseXHR" class="Webkul\UVDesk\AutomationBundle\Controller\Automations\PreparedResponseXHR" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\AutomationBundle\Controller\Automations\Workflow" class="Webkul\UVDesk\AutomationBundle\Controller\Automations\Workflow" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\AutomationBundle\Controller\Automations\Workflow" class="Webkul\UVDesk\AutomationBundle\Controller\Automations\Workflow" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\AutomationBundle\Controller\Automations\Workflow" class="Webkul\UVDesk\AutomationBundle\Controller\Automations\Workflow" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\AutomationBundle\Controller\Automations\WorkflowXHR" class="Webkul\UVDesk\AutomationBundle\Controller\Automations\WorkflowXHR" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\AutomationBundle\Controller\Automations\WorkflowXHR" class="Webkul\UVDesk\AutomationBundle\Controller\Automations\WorkflowXHR" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\AutomationBundle\Controller\Automations\WorkflowXHR" class="Webkul\UVDesk\AutomationBundle\Controller\Automations\WorkflowXHR" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.Webkul\UVDesk\AutomationBundle\Fixtures\AutomationWorkflowFixtures" class="Webkul\UVDesk\AutomationBundle\Fixtures\AutomationWorkflowFixtures" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\AutomationBundle\Fixtures\AutomationWorkflowFixtures" class="Webkul\UVDesk\AutomationBundle\Fixtures\AutomationWorkflowFixtures" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Webkul\UVDesk\AutomationBundle\Form\DefaultForm" class="Webkul\UVDesk\AutomationBundle\Form\DefaultForm" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\AutomationBundle\Form\DefaultForm" class="Webkul\UVDesk\AutomationBundle\Form\DefaultForm" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Definition\RoutingResourceInterface.0.Webkul\UVDesk\AutomationBundle\Routing\RoutingResource" class="Webkul\UVDesk\AutomationBundle\Routing\RoutingResource" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\AutomationBundle\Routing\RoutingResource" class="Webkul\UVDesk\AutomationBundle\Routing\RoutingResource" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface.0.Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Homepage\Items\PreparedResponses" class="Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Homepage\Items\PreparedResponses" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Homepage\Items\PreparedResponses" class="Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Homepage\Items\PreparedResponses" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface.0.Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Homepage\Items\Workflows" class="Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Homepage\Items\Workflows" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Homepage\Items\Workflows" class="Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Homepage\Items\Workflows" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface.0.Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Panel\Items\Productivity\PreparedResponses" class="Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Panel\Items\Productivity\PreparedResponses" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Panel\Items\Productivity\PreparedResponses" class="Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Panel\Items\Productivity\PreparedResponses" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface.0.Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Panel\Items\Productivity\Workflows" class="Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Panel\Items\Productivity\Workflows" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Panel\Items\Productivity\Workflows" class="Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Panel\Items\Productivity\Workflows" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface.0.Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Search\PreparedResponses" class="Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Search\PreparedResponses" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Search\PreparedResponses" class="Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Search\PreparedResponses" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface.0.Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Search\Workflows" class="Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Search\Workflows" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Search\Workflows" class="Webkul\UVDesk\AutomationBundle\UIComponents\Dashboard\Search\Workflows" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Tickets\QuickActionButtonInterface.0.Webkul\UVDesk\AutomationBundle\UIComponents\Ticket\QuickActionButtons\PreparedResponses" class="Webkul\UVDesk\AutomationBundle\UIComponents\Ticket\QuickActionButtons\PreparedResponses" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\AutomationBundle\UIComponents\Ticket\QuickActionButtons\PreparedResponses" class="Webkul\UVDesk\AutomationBundle\UIComponents\Ticket\QuickActionButtons\PreparedResponses" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.Webkul\UVDesk\ExtensionFrameworkBundle\Console\BuildExtensions" class="Webkul\UVDesk\ExtensionFrameworkBundle\Console\BuildExtensions" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\ExtensionFrameworkBundle\Console\BuildExtensions" class="Webkul\UVDesk\ExtensionFrameworkBundle\Console\BuildExtensions" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\ExtensionFrameworkBundle\Controller\Application" class="Webkul\UVDesk\ExtensionFrameworkBundle\Controller\Application" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\ExtensionFrameworkBundle\Controller\Application" class="Webkul\UVDesk\ExtensionFrameworkBundle\Controller\Application" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\ExtensionFrameworkBundle\Controller\Application" class="Webkul\UVDesk\ExtensionFrameworkBundle\Controller\Application" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\ExtensionFrameworkBundle\Controller\Dashboard" class="Webkul\UVDesk\ExtensionFrameworkBundle\Controller\Dashboard" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\ExtensionFrameworkBundle\Controller\Dashboard" class="Webkul\UVDesk\ExtensionFrameworkBundle\Controller\Dashboard" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\ExtensionFrameworkBundle\Controller\Dashboard" class="Webkul\UVDesk\ExtensionFrameworkBundle\Controller\Dashboard" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Definition\RouterInterface.0.Webkul\UVDesk\ExtensionFrameworkBundle\Definition\RouteLoader" class="Webkul\UVDesk\ExtensionFrameworkBundle\Definition\RouteLoader" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\ExtensionFrameworkBundle\Definition\RouteLoader" class="Webkul\UVDesk\ExtensionFrameworkBundle\Definition\RouteLoader" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Definition\RoutingResourceInterface.0.Webkul\UVDesk\ExtensionFrameworkBundle\Routing\RoutingResource" class="Webkul\UVDesk\ExtensionFrameworkBundle\Routing\RoutingResource" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\ExtensionFrameworkBundle\Routing\RoutingResource" class="Webkul\UVDesk\ExtensionFrameworkBundle\Routing\RoutingResource" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface.0.Webkul\UVDesk\ExtensionFrameworkBundle\UIComponents\Dashboard\Homepage\Items\ExploreApps" class="Webkul\UVDesk\ExtensionFrameworkBundle\UIComponents\Dashboard\Homepage\Items\ExploreApps" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\ExtensionFrameworkBundle\UIComponents\Dashboard\Homepage\Items\ExploreApps" class="Webkul\UVDesk\ExtensionFrameworkBundle\UIComponents\Dashboard\Homepage\Items\ExploreApps" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionInterface.0.Webkul\UVDesk\ExtensionFrameworkBundle\UIComponents\Dashboard\Homepage\Sections\Apps" class="Webkul\UVDesk\ExtensionFrameworkBundle\UIComponents\Dashboard\Homepage\Sections\Apps" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\ExtensionFrameworkBundle\UIComponents\Dashboard\Homepage\Sections\Apps" class="Webkul\UVDesk\ExtensionFrameworkBundle\UIComponents\Dashboard\Homepage\Sections\Apps" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\NavigationInterface.0.Webkul\UVDesk\ExtensionFrameworkBundle\UIComponents\Dashboard\Navigation\Apps" class="Webkul\UVDesk\ExtensionFrameworkBundle\UIComponents\Dashboard\Navigation\Apps" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\ExtensionFrameworkBundle\UIComponents\Dashboard\Navigation\Apps" class="Webkul\UVDesk\ExtensionFrameworkBundle\UIComponents\Dashboard\Navigation\Apps" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface.0.Webkul\UVDesk\ExtensionFrameworkBundle\UIComponents\Dashboard\Search\Apps" class="Webkul\UVDesk\ExtensionFrameworkBundle\UIComponents\Dashboard\Search\Apps" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\ExtensionFrameworkBundle\UIComponents\Dashboard\Search\Apps" class="Webkul\UVDesk\ExtensionFrameworkBundle\UIComponents\Dashboard\Search\Apps" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.Webkul\UVDesk\MailboxBundle\Console\RefreshMailboxCommand" class="Webkul\UVDesk\MailboxBundle\Console\RefreshMailboxCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\MailboxBundle\Console\RefreshMailboxCommand" class="Webkul\UVDesk\MailboxBundle\Console\RefreshMailboxCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\MailboxBundle\Controller\MailboxChannel" class="Webkul\UVDesk\MailboxBundle\Controller\MailboxChannel" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\MailboxBundle\Controller\MailboxChannel" class="Webkul\UVDesk\MailboxBundle\Controller\MailboxChannel" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\MailboxBundle\Controller\MailboxChannel" class="Webkul\UVDesk\MailboxBundle\Controller\MailboxChannel" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\MailboxBundle\Controller\MailboxChannelXHR" class="Webkul\UVDesk\MailboxBundle\Controller\MailboxChannelXHR" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\MailboxBundle\Controller\MailboxChannelXHR" class="Webkul\UVDesk\MailboxBundle\Controller\MailboxChannelXHR" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\MailboxBundle\Controller\MailboxChannelXHR" class="Webkul\UVDesk\MailboxBundle\Controller\MailboxChannelXHR" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Definition\RoutingResourceInterface.0.Webkul\UVDesk\MailboxBundle\Routing\RoutingResource" class="Webkul\UVDesk\MailboxBundle\Routing\RoutingResource" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\MailboxBundle\Routing\RoutingResource" class="Webkul\UVDesk\MailboxBundle\Routing\RoutingResource" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface.0.Webkul\UVDesk\MailboxBundle\UIComponents\Dashboard\Homepage\Items\Mailbox" class="Webkul\UVDesk\MailboxBundle\UIComponents\Dashboard\Homepage\Items\Mailbox" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\MailboxBundle\UIComponents\Dashboard\Homepage\Items\Mailbox" class="Webkul\UVDesk\MailboxBundle\UIComponents\Dashboard\Homepage\Items\Mailbox" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface.0.Webkul\UVDesk\MailboxBundle\UIComponents\Dashboard\Panel\Items\Settings\Mailboxes" class="Webkul\UVDesk\MailboxBundle\UIComponents\Dashboard\Panel\Items\Settings\Mailboxes" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\MailboxBundle\UIComponents\Dashboard\Panel\Items\Settings\Mailboxes" class="Webkul\UVDesk\MailboxBundle\UIComponents\Dashboard\Panel\Items\Settings\Mailboxes" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface.0.Webkul\UVDesk\MailboxBundle\UIComponents\Dashboard\Search\Mailbox" class="Webkul\UVDesk\MailboxBundle\UIComponents\Dashboard\Search\Mailbox" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\MailboxBundle\UIComponents\Dashboard\Search\Mailbox" class="Webkul\UVDesk\MailboxBundle\UIComponents\Dashboard\Search\Mailbox" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface.0.Webkul\UVDesk\MailboxBundle\UIComponents\Dashboard\Search\SwiftMailer" class="Webkul\UVDesk\MailboxBundle\UIComponents\Dashboard\Search\SwiftMailer" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\MailboxBundle\UIComponents\Dashboard\Search\SwiftMailer" class="Webkul\UVDesk\MailboxBundle\UIComponents\Dashboard\Search\SwiftMailer" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\SupportCenterBundle\Controller\Announcement" class="Webkul\UVDesk\SupportCenterBundle\Controller\Announcement" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\SupportCenterBundle\Controller\Announcement" class="Webkul\UVDesk\SupportCenterBundle\Controller\Announcement" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\Controller\Announcement" class="Webkul\UVDesk\SupportCenterBundle\Controller\Announcement" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\SupportCenterBundle\Controller\Article" class="Webkul\UVDesk\SupportCenterBundle\Controller\Article" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\SupportCenterBundle\Controller\Article" class="Webkul\UVDesk\SupportCenterBundle\Controller\Article" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\Controller\Article" class="Webkul\UVDesk\SupportCenterBundle\Controller\Article" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\SupportCenterBundle\Controller\Branding" class="Webkul\UVDesk\SupportCenterBundle\Controller\Branding" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\SupportCenterBundle\Controller\Branding" class="Webkul\UVDesk\SupportCenterBundle\Controller\Branding" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\Controller\Branding" class="Webkul\UVDesk\SupportCenterBundle\Controller\Branding" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\SupportCenterBundle\Controller\Category" class="Webkul\UVDesk\SupportCenterBundle\Controller\Category" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\SupportCenterBundle\Controller\Category" class="Webkul\UVDesk\SupportCenterBundle\Controller\Category" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\Controller\Category" class="Webkul\UVDesk\SupportCenterBundle\Controller\Category" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\SupportCenterBundle\Controller\Customer" class="Webkul\UVDesk\SupportCenterBundle\Controller\Customer" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\SupportCenterBundle\Controller\Customer" class="Webkul\UVDesk\SupportCenterBundle\Controller\Customer" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\Controller\Customer" class="Webkul\UVDesk\SupportCenterBundle\Controller\Customer" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\SupportCenterBundle\Controller\Folder" class="Webkul\UVDesk\SupportCenterBundle\Controller\Folder" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\SupportCenterBundle\Controller\Folder" class="Webkul\UVDesk\SupportCenterBundle\Controller\Folder" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\Controller\Folder" class="Webkul\UVDesk\SupportCenterBundle\Controller\Folder" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\SupportCenterBundle\Controller\KnowledgebaseXHR" class="Webkul\UVDesk\SupportCenterBundle\Controller\KnowledgebaseXHR" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\SupportCenterBundle\Controller\KnowledgebaseXHR" class="Webkul\UVDesk\SupportCenterBundle\Controller\KnowledgebaseXHR" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\Controller\KnowledgebaseXHR" class="Webkul\UVDesk\SupportCenterBundle\Controller\KnowledgebaseXHR" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\SupportCenterBundle\Controller\MarketingModule" class="Webkul\UVDesk\SupportCenterBundle\Controller\MarketingModule" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\SupportCenterBundle\Controller\MarketingModule" class="Webkul\UVDesk\SupportCenterBundle\Controller\MarketingModule" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\Controller\MarketingModule" class="Webkul\UVDesk\SupportCenterBundle\Controller\MarketingModule" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\SupportCenterBundle\Controller\Ticket" class="Webkul\UVDesk\SupportCenterBundle\Controller\Ticket" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\SupportCenterBundle\Controller\Ticket" class="Webkul\UVDesk\SupportCenterBundle\Controller\Ticket" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\Controller\Ticket" class="Webkul\UVDesk\SupportCenterBundle\Controller\Ticket" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\SupportCenterBundle\Controller\Website" class="Webkul\UVDesk\SupportCenterBundle\Controller\Website" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\SupportCenterBundle\Controller\Website" class="Webkul\UVDesk\SupportCenterBundle\Controller\Website" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\Controller\Website" class="Webkul\UVDesk\SupportCenterBundle\Controller\Website" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.Webkul\UVDesk\SupportCenterBundle\Fixtures\EmailTemplates" class="Webkul\UVDesk\SupportCenterBundle\Fixtures\EmailTemplates" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\Fixtures\EmailTemplates" class="Webkul\UVDesk\SupportCenterBundle\Fixtures\EmailTemplates" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.Webkul\UVDesk\SupportCenterBundle\Fixtures\KnowledgebaseWebsite" class="Webkul\UVDesk\SupportCenterBundle\Fixtures\KnowledgebaseWebsite" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\Fixtures\KnowledgebaseWebsite" class="Webkul\UVDesk\SupportCenterBundle\Fixtures\KnowledgebaseWebsite" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Webkul\UVDesk\SupportCenterBundle\Form\AccountValidation" class="Webkul\UVDesk\SupportCenterBundle\Form\AccountValidation" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\Form\AccountValidation" class="Webkul\UVDesk\SupportCenterBundle\Form\AccountValidation" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Webkul\UVDesk\SupportCenterBundle\Form\ForgotPassword" class="Webkul\UVDesk\SupportCenterBundle\Form\ForgotPassword" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\Form\ForgotPassword" class="Webkul\UVDesk\SupportCenterBundle\Form\ForgotPassword" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Webkul\UVDesk\SupportCenterBundle\Form\SolutionModal" class="Webkul\UVDesk\SupportCenterBundle\Form\SolutionModal" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\Form\SolutionModal" class="Webkul\UVDesk\SupportCenterBundle\Form\SolutionModal" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Webkul\UVDesk\SupportCenterBundle\Form\Ticket" class="Webkul\UVDesk\SupportCenterBundle\Form\Ticket" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\Form\Ticket" class="Webkul\UVDesk\SupportCenterBundle\Form\Ticket" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.Webkul\UVDesk\SupportCenterBundle\Repository\AnnouncementRepository" class="Webkul\UVDesk\SupportCenterBundle\Repository\AnnouncementRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\Repository\AnnouncementRepository" class="Webkul\UVDesk\SupportCenterBundle\Repository\AnnouncementRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.Webkul\UVDesk\SupportCenterBundle\Repository\MarketingModuleRepository" class="Webkul\UVDesk\SupportCenterBundle\Repository\MarketingModuleRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\Repository\MarketingModuleRepository" class="Webkul\UVDesk\SupportCenterBundle\Repository\MarketingModuleRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Definition\RoutingResourceInterface.0.Webkul\UVDesk\SupportCenterBundle\Routing\RoutingResource" class="Webkul\UVDesk\SupportCenterBundle\Routing\RoutingResource" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\Routing\RoutingResource" class="Webkul\UVDesk\SupportCenterBundle\Routing\RoutingResource" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface.0.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\Announcement" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\Announcement" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\Announcement" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\Announcement" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface.0.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\Articles" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\Articles" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\Articles" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\Articles" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface.0.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\Categories" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\Categories" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\Categories" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\Categories" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface.0.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\Folders" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\Folders" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\Folders" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\Folders" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface.0.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\MarketingModule" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\MarketingModule" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\MarketingModule" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\MarketingModule" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface.0.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\SpamSettings" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\SpamSettings" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\SpamSettings" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Items\SpamSettings" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionInterface.0.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Sections\Knowledgebase" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Sections\Knowledgebase" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Sections\Knowledgebase" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Homepage\Sections\Knowledgebase" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\NavigationInterface.0.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Navigation\Knowledgebase" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Navigation\Knowledgebase" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Navigation\Knowledgebase" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Navigation\Knowledgebase" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface.0.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Knowledgebase\Announcement" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Knowledgebase\Announcement" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Knowledgebase\Announcement" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Knowledgebase\Announcement" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface.0.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Knowledgebase\Articles" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Knowledgebase\Articles" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Knowledgebase\Articles" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Knowledgebase\Articles" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface.0.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Knowledgebase\Categories" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Knowledgebase\Categories" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Knowledgebase\Categories" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Knowledgebase\Categories" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface.0.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Knowledgebase\Folders" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Knowledgebase\Folders" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Knowledgebase\Folders" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Knowledgebase\Folders" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface.0.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Knowledgebase\MarketingModule" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Knowledgebase\MarketingModule" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Knowledgebase\MarketingModule" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Knowledgebase\MarketingModule" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface.0.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Settings\BlockSpam" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Settings\BlockSpam" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Settings\BlockSpam" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Settings\BlockSpam" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface.0.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Themes\SupportCenter" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Themes\SupportCenter" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Themes\SupportCenter" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Items\Themes\SupportCenter" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarInterface.0.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Sidebars\Knowledgebase" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Sidebars\Knowledgebase" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Sidebars\Knowledgebase" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Panel\Sidebars\Knowledgebase" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface.0.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\Announcement" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\Announcement" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\Announcement" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\Announcement" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface.0.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\Articles" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\Articles" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\Articles" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\Articles" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface.0.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\Categories" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\Categories" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\Categories" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\Categories" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface.0.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\Customers" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\Customers" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\Customers" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\Customers" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface.0.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\Folders" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\Folders" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\Folders" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\Folders" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface.0.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\MarketingModule" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\MarketingModule" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\MarketingModule" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\MarketingModule" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface.0.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\SpamSettings" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\SpamSettings" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\SpamSettings" class="Webkul\UVDesk\SupportCenterBundle\UIComponents\Dashboard\Search\SpamSettings" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\ApiBundle\API\Agents" class="Webkul\UVDesk\ApiBundle\API\Agents" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\ApiBundle\API\Agents" class="Webkul\UVDesk\ApiBundle\API\Agents" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\ApiBundle\API\Agents" class="Webkul\UVDesk\ApiBundle\API\Agents" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\ApiBundle\API\Customers" class="Webkul\UVDesk\ApiBundle\API\Customers" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\ApiBundle\API\Customers" class="Webkul\UVDesk\ApiBundle\API\Customers" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\ApiBundle\API\Customers" class="Webkul\UVDesk\ApiBundle\API\Customers" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\ApiBundle\API\Group" class="Webkul\UVDesk\ApiBundle\API\Group" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\ApiBundle\API\Group" class="Webkul\UVDesk\ApiBundle\API\Group" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\ApiBundle\API\Group" class="Webkul\UVDesk\ApiBundle\API\Group" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\ApiBundle\API\Me" class="Webkul\UVDesk\ApiBundle\API\Me" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\ApiBundle\API\Me" class="Webkul\UVDesk\ApiBundle\API\Me" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\ApiBundle\API\Me" class="Webkul\UVDesk\ApiBundle\API\Me" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\ApiBundle\API\Sessions" class="Webkul\UVDesk\ApiBundle\API\Sessions" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\ApiBundle\API\Sessions" class="Webkul\UVDesk\ApiBundle\API\Sessions" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\ApiBundle\API\Sessions" class="Webkul\UVDesk\ApiBundle\API\Sessions" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\ApiBundle\API\Team" class="Webkul\UVDesk\ApiBundle\API\Team" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\ApiBundle\API\Team" class="Webkul\UVDesk\ApiBundle\API\Team" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\ApiBundle\API\Team" class="Webkul\UVDesk\ApiBundle\API\Team" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\ApiBundle\API\Threads" class="Webkul\UVDesk\ApiBundle\API\Threads" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\ApiBundle\API\Threads" class="Webkul\UVDesk\ApiBundle\API\Threads" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\ApiBundle\API\Threads" class="Webkul\UVDesk\ApiBundle\API\Threads" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\ApiBundle\API\TicketTypes" class="Webkul\UVDesk\ApiBundle\API\TicketTypes" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\ApiBundle\API\TicketTypes" class="Webkul\UVDesk\ApiBundle\API\TicketTypes" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\ApiBundle\API\TicketTypes" class="Webkul\UVDesk\ApiBundle\API\TicketTypes" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\ApiBundle\API\Tickets" class="Webkul\UVDesk\ApiBundle\API\Tickets" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\ApiBundle\API\Tickets" class="Webkul\UVDesk\ApiBundle\API\Tickets" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\ApiBundle\API\Tickets" class="Webkul\UVDesk\ApiBundle\API\Tickets" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Webkul\UVDesk\ApiBundle\Controller\ApiSettings" class="Webkul\UVDesk\ApiBundle\Controller\ApiSettings" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Webkul\UVDesk\ApiBundle\Controller\ApiSettings" class="Webkul\UVDesk\ApiBundle\Controller\ApiSettings" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\ApiBundle\Controller\ApiSettings" class="Webkul\UVDesk\ApiBundle\Controller\ApiSettings" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.Webkul\UVDesk\ApiBundle\Repository\ApiAccessCredentialRepository" class="Webkul\UVDesk\ApiBundle\Repository\ApiAccessCredentialRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\ApiBundle\Repository\ApiAccessCredentialRepository" class="Webkul\UVDesk\ApiBundle\Repository\ApiAccessCredentialRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Definition\RoutingResourceInterface.0.Webkul\UVDesk\ApiBundle\Routing\RoutingResource" class="Webkul\UVDesk\ApiBundle\Routing\RoutingResource" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\ApiBundle\Routing\RoutingResource" class="Webkul\UVDesk\ApiBundle\Routing\RoutingResource" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\HomepageSectionItemInterface.0.Webkul\UVDesk\ApiBundle\UIComponents\Dashboard\Homepage\Items\ApiSettings" class="Webkul\UVDesk\ApiBundle\UIComponents\Dashboard\Homepage\Items\ApiSettings" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\ApiBundle\UIComponents\Dashboard\Homepage\Items\ApiSettings" class="Webkul\UVDesk\ApiBundle\UIComponents\Dashboard\Homepage\Items\ApiSettings" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\PanelSidebarItemInterface.0.Webkul\UVDesk\ApiBundle\UIComponents\Dashboard\Panel\Items\Settings\ApiSettings" class="Webkul\UVDesk\ApiBundle\UIComponents\Dashboard\Panel\Items\Settings\ApiSettings" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\ApiBundle\UIComponents\Dashboard\Panel\Items\Settings\ApiSettings" class="Webkul\UVDesk\ApiBundle\UIComponents\Dashboard\Panel\Items\Settings\ApiSettings" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Webkul\UVDesk\CoreFrameworkBundle\Dashboard\Segments\SearchItemInterface.0.Webkul\UVDesk\ApiBundle\UIComponents\Dashboard\Search\ApiSettings" class="Webkul\UVDesk\ApiBundle\UIComponents\Dashboard\Search\ApiSettings" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Webkul\UVDesk\ApiBundle\UIComponents\Dashboard\Search\ApiSettings" class="Webkul\UVDesk\ApiBundle\UIComponents\Dashboard\Search\ApiSettings" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".service_locator.gSv9zYw" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="base64" type="service_closure" id="container.env_var_processor"/>
        <argument key="bool" type="service_closure" id="container.env_var_processor"/>
        <argument key="const" type="service_closure" id="container.env_var_processor"/>
        <argument key="csv" type="service_closure" id="container.env_var_processor"/>
        <argument key="default" type="service_closure" id="container.env_var_processor"/>
        <argument key="file" type="service_closure" id="container.env_var_processor"/>
        <argument key="float" type="service_closure" id="container.env_var_processor"/>
        <argument key="int" type="service_closure" id="container.env_var_processor"/>
        <argument key="json" type="service_closure" id="container.env_var_processor"/>
        <argument key="key" type="service_closure" id="container.env_var_processor"/>
        <argument key="not" type="service_closure" id="container.env_var_processor"/>
        <argument key="query_string" type="service_closure" id="container.env_var_processor"/>
        <argument key="require" type="service_closure" id="container.env_var_processor"/>
        <argument key="resolve" type="service_closure" id="container.env_var_processor"/>
        <argument key="string" type="service_closure" id="container.env_var_processor"/>
        <argument key="trim" type="service_closure" id="container.env_var_processor"/>
        <argument key="url" type="service_closure" id="container.env_var_processor"/>
      </argument>
    </service>
    <service id="maker.auto_command.make_auth" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:auth" description="Creates a Guard authenticator of different flavors"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_authenticator"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:auth</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a Guard authenticator of different flavors</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_command" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:command" description="Creates a new console command class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:command</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new console command class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_twig_component" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:twig-component" description="Creates a twig (or live) component"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_twig_component"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:twig-component</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a twig (or live) component</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_controller" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:controller" description="Creates a new controller class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_controller"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:controller</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new controller class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_crud" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:crud" description="Creates CRUD for Doctrine entity class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_crud"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:crud</argument>
      </call>
      <call method="setDescription">
        <argument>Creates CRUD for Doctrine entity class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_docker_database" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:docker:database" description="Adds a database container to your docker-compose.yaml file"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_docker_database"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:docker:database</argument>
      </call>
      <call method="setDescription">
        <argument>Adds a database container to your docker-compose.yaml file</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_entity" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:entity" description="Creates or updates a Doctrine entity class, and optionally an API Platform resource"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_entity"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:entity</argument>
      </call>
      <call method="setDescription">
        <argument>Creates or updates a Doctrine entity class, and optionally an API Platform resource</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_fixtures" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:fixtures" description="Creates a new class to load Doctrine fixtures"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_fixtures"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:fixtures</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new class to load Doctrine fixtures</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_form" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:form" description="Creates a new form class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_form"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:form</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new form class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_message" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:message" description="Creates a new message and handler"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_message"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:message</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new message and handler</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_messenger_middleware" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:messenger-middleware" description="Creates a new messenger middleware"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_messenger_middleware"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:messenger-middleware</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new messenger middleware</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_registration_form" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:registration-form" description="Creates a new registration form system"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_registration_form"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:registration-form</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new registration form system</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_reset_password" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:reset-password" description="Create controller, entity, and repositories for use with symfonycasts/reset-password-bundle"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_reset_password"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:reset-password</argument>
      </call>
      <call method="setDescription">
        <argument>Create controller, entity, and repositories for use with symfonycasts/reset-password-bundle</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_serializer_encoder" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:serializer:encoder" description="Creates a new serializer encoder class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_serializer_encoder"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:serializer:encoder</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new serializer encoder class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_serializer_normalizer" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:serializer:normalizer" description="Creates a new serializer normalizer class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_serializer_normalizer"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:serializer:normalizer</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new serializer normalizer class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_subscriber" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:subscriber" description="Creates a new event subscriber class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_subscriber"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:subscriber</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new event subscriber class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_twig_extension" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:twig-extension" description="Creates a new Twig extension with its runtime class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_twig_extension"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:twig-extension</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new Twig extension with its runtime class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_test" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:test" description="Creates a new test class"/>
      <tag name="console.command" command="make:unit-test" description="Deprecated alias of &quot;make:test&quot;"/>
      <tag name="console.command" command="make:functional-test" description="Deprecated alias of &quot;make:test&quot;"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_test"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:test</argument>
      </call>
      <call method="setAliases">
        <argument type="collection">
          <argument>make:unit-test</argument>
          <argument>make:functional-test</argument>
        </argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new test class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_validator" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:validator" description="Creates a new validator and constraint class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_validator"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:validator</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new validator and constraint class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_voter" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:voter" description="Creates a new security voter class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_voter"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:voter</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new security voter class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_user" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:user" description="Creates a new security user class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_user"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:user</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new security user class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_migration" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:migration" description="Creates a new migration based on database changes"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_migration"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:migration</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new migration based on database changes</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_stimulus_controller" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:stimulus-controller" description="Creates a new Stimulus controller"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_stimulus_controller"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:stimulus-controller</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new Stimulus controller</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_security_form_login" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:security:form-login" description="Generate the code needed for the form_login authenticator"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_form_login"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:security:form-login</argument>
      </call>
      <call method="setDescription">
        <argument>Generate the code needed for the form_login authenticator</argument>
      </call>
    </service>
    <service id=".service_locator.xUrKPVU" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="loader" type="service_closure" id=".errored..service_locator.xUrKPVU.Symfony\Component\Config\Loader\LoaderInterface"/>
      </argument>
    </service>
    <service id=".service_locator.CctwNnK" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="entityManager" type="service_closure" id="doctrine.orm.default_entity_manager"/>
        <argument key="kernel" type="service_closure" id="kernel"/>
      </argument>
    </service>
    <service id=".service_locator.6H7qA2B" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="kernel" type="service_closure" id="kernel"/>
      </argument>
    </service>
    <service id=".service_locator.Isyi.eu" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="encoder" type="service_closure" id="security.user_password_encoder.generic"/>
      </argument>
    </service>
    <service id=".service_locator.r23Vwnj" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="uvdesk" type="service_closure" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UVDeskService"/>
      </argument>
    </service>
    <service id=".service_locator.hsfYii4" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="callback" type="service_closure" id=".errored..service_locator.hsfYii4.Closure"/>
      </argument>
    </service>
    <service id=".service_locator.H_5dZOt" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="container" type="service_closure" id="service_container"/>
      </argument>
    </service>
    <service id=".service_locator.AqqXaUO" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="userService" type="service_closure" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      </argument>
    </service>
    <service id=".service_locator.mwdcwjc" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="entityManager" type="service_closure" id="doctrine.orm.default_entity_manager"/>
        <argument key="microsoftIntegration" type="service_closure" id="Webkul\UVDesk\CoreFrameworkBundle\Services\MicrosoftIntegration"/>
        <argument key="userService" type="service_closure" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      </argument>
    </service>
    <service id=".service_locator.VzninxD" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="entityManager" type="service_closure" id="doctrine.orm.default_entity_manager"/>
        <argument key="microsoftIntegration" type="service_closure" id="Webkul\UVDesk\CoreFrameworkBundle\Services\MicrosoftIntegration"/>
        <argument key="translator" type="service_closure" id="translator.data_collector"/>
        <argument key="userService" type="service_closure" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      </argument>
    </service>
    <service id=".service_locator.XWDbXBG" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="entityManager" type="service_closure" id="doctrine.orm.default_entity_manager"/>
        <argument key="microsoftIntegration" type="service_closure" id="Webkul\UVDesk\CoreFrameworkBundle\Services\MicrosoftIntegration"/>
        <argument key="translator" type="service_closure" id="translator.data_collector"/>
      </argument>
    </service>
    <service id=".service_locator.ZPQH3Ui" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="microsoftIntegration" type="service_closure" id="Webkul\UVDesk\CoreFrameworkBundle\Services\MicrosoftIntegration"/>
        <argument key="translator" type="service_closure" id="translator.data_collector"/>
      </argument>
    </service>
    <service id=".service_locator.rhm0r3z" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="entityManager" type="service_closure" id="doctrine.orm.default_entity_manager"/>
        <argument key="microsoftIntegration" type="service_closure" id="Webkul\UVDesk\CoreFrameworkBundle\Services\MicrosoftIntegration"/>
      </argument>
    </service>
    <service id=".service_locator.q2ji3lu" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translator" type="service_closure" id="translator.data_collector"/>
      </argument>
    </service>
    <service id=".service_locator.1hkzPeN" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="container" type="service_closure" id="service_container"/>
        <argument key="quickActionButtonCollection" type="service_closure" id="Webkul\UVDesk\CoreFrameworkBundle\Tickets\QuickActionButtonCollection"/>
      </argument>
    </service>
    <service id=".service_locator.UToq_Ob" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="applicationCollection" type="service_closure" id="Webkul\UVDesk\ExtensionFrameworkBundle\Utils\ApplicationCollection"/>
        <argument key="event" type="service_closure" id="Webkul\UVDesk\ExtensionFrameworkBundle\Application\Routine\RenderDashboardRoutine"/>
      </argument>
    </service>
    <service id=".service_locator.LwcGnq5" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="applicationCollection" type="service_closure" id="Webkul\UVDesk\ExtensionFrameworkBundle\Utils\ApplicationCollection"/>
        <argument key="event" type="service_closure" id="Webkul\UVDesk\ExtensionFrameworkBundle\Application\Routine\ApiRoutine"/>
      </argument>
    </service>
    <service id=".service_locator.qgIdpU1" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="applications" type="service_closure" id="Webkul\UVDesk\ExtensionFrameworkBundle\Utils\ApplicationCollection"/>
        <argument key="container" type="service_closure" id="service_container"/>
      </argument>
    </service>
    <service id=".service_locator.vuNdeAY" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="entityManager" type="service_closure" id="doctrine.orm.default_entity_manager"/>
        <argument key="mailboxService" type="service_closure" id="Webkul\UVDesk\MailboxBundle\Services\MailboxService"/>
        <argument key="swiftMailer" type="service_closure" id="Webkul\UVDesk\CoreFrameworkBundle\SwiftMailer\SwiftMailer"/>
        <argument key="translator" type="service_closure" id="translator.data_collector"/>
        <argument key="userService" type="service_closure" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      </argument>
    </service>
    <service id=".service_locator.diu05Wv" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="mailboxService" type="service_closure" id="Webkul\UVDesk\MailboxBundle\Services\MailboxService"/>
      </argument>
    </service>
    <service id=".service_locator.aKM6MDa" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="entityManager" type="service_closure" id="doctrine.orm.default_entity_manager"/>
      </argument>
    </service>
    <service id=".service_locator.93GkAao" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="container" type="service_closure" id="service_container"/>
        <argument key="entityManager" type="service_closure" id="doctrine.orm.default_entity_manager"/>
        <argument key="userService" type="service_closure" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      </argument>
    </service>
    <service id=".service_locator.cWYmD9L" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="container" type="service_closure" id="service_container"/>
        <argument key="eventDispatcher" type="service_closure" id="debug.event_dispatcher"/>
        <argument key="fileSystem" type="service_closure" id="Webkul\UVDesk\CoreFrameworkBundle\FileSystem\FileSystem"/>
        <argument key="passwordEncoder" type="service_closure" id="security.user_password_encoder.generic"/>
        <argument key="uvdeskService" type="service_closure" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UVDeskService"/>
      </argument>
    </service>
    <service id=".errored.9J4O58a" class="Webkul\UVDesk\ApiBundle\API\UserPasswordEncoderInterface"/>
    <service id=".service_locator.2jqOiLn" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="container" type="service_closure" id="service_container"/>
        <argument key="eventDispatcher" type="service_closure" id="debug.event_dispatcher"/>
        <argument key="fileSystem" type="service_closure" id="Webkul\UVDesk\CoreFrameworkBundle\FileSystem\FileSystem"/>
        <argument key="passwordEncoder" type="service_closure" id=".errored.9J4O58a"/>
      </argument>
    </service>
    <service id=".service_locator.DLRxWCH" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="eventDispatcher" type="service_closure" id="debug.event_dispatcher"/>
        <argument key="userService" type="service_closure" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService"/>
      </argument>
    </service>
    <service id=".service_locator.GJOAXQX" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="entityManager" type="service_closure" id="doctrine.orm.default_entity_manager"/>
        <argument key="uvdesk" type="service_closure" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UVDeskService"/>
      </argument>
    </service>
    <service id=".service_locator.i4_pXUi" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="container" type="service_closure" id="service_container"/>
        <argument key="uvdesk" type="service_closure" id="Webkul\UVDesk\CoreFrameworkBundle\Services\UVDeskService"/>
      </argument>
    </service>
    <service id=".service_locator.xV8zwpH" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="entityManager" type="service_closure" id="doctrine.orm.default_entity_manager"/>
        <argument key="user" type="service_closure" id=".errored..service_locator.xV8zwpH.Symfony\Component\Security\Core\User\UserInterface"/>
      </argument>
    </service>
    <service id=".service_locator.9No.Nxb" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Controller\BaseController::base" type="service_closure" id=".service_locator.CctwNnK"/>
        <argument key="App\Controller\ConfigureHelpdesk::createDefaultSuperUserXHR" type="service_closure" id=".service_locator.Isyi.eu"/>
        <argument key="App\Controller\ConfigureHelpdesk::evaluateSystemRequirements" type="service_closure" id=".service_locator.6H7qA2B"/>
        <argument key="App\Controller\ConfigureHelpdesk::migrateDatabaseSchemaXHR" type="service_closure" id=".service_locator.6H7qA2B"/>
        <argument key="App\Controller\ConfigureHelpdesk::populateDatabaseEntitiesXHR" type="service_closure" id=".service_locator.6H7qA2B"/>
        <argument key="App\Controller\ConfigureHelpdesk::updateConfigurationsXHR" type="service_closure" id=".service_locator.6H7qA2B"/>
        <argument key="App\Controller\ConfigureHelpdesk::updateWebsiteConfigurationXHR" type="service_closure" id=".service_locator.r23Vwnj"/>
        <argument key="App\Controller\ConfigureHelpdesk::websiteConfigurationXHR" type="service_closure" id=".service_locator.r23Vwnj"/>
        <argument key="App\Controller\ImageCache\ImageManager::cache" type="service_closure" id=".service_locator.hsfYii4"/>
        <argument key="App\Kernel::loadRoutes" type="service_closure" id=".service_locator.xUrKPVU"/>
        <argument key="App\Kernel::registerContainerConfiguration" type="service_closure" id=".service_locator.xUrKPVU"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Agents::createAgentRecord" type="service_closure" id=".service_locator.93GkAao"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Agents::deleteAgentRecord" type="service_closure" id=".service_locator.DLRxWCH"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Agents::loadAgents" type="service_closure" id=".service_locator.aKM6MDa"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Agents::updateAgentRecord" type="service_closure" id=".service_locator.cWYmD9L"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Customers::createCustomerRecord" type="service_closure" id=".service_locator.93GkAao"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Customers::deleteCustomerRecord" type="service_closure" id=".service_locator.DLRxWCH"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Customers::loadCustomers" type="service_closure" id=".service_locator.aKM6MDa"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Customers::updateCustomerRecord" type="service_closure" id=".service_locator.2jqOiLn"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Group::createGroupRecord" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Group::loadGroup" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Group::updateGroupRecord" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Me::loadCurrentAgentDetails" type="service_closure" id=".service_locator.r23Vwnj"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Sessions::loginSession" type="service_closure" id=".service_locator.GJOAXQX"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Sessions::logoutSession" type="service_closure" id=".service_locator.aKM6MDa"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Team::createTeams" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Team::loadTeams" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Team::updateTeamsDetails" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Threads::saveThread" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Tickets::addRemoveTicketCollaborator" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Tickets::assignAgent" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Tickets::createTicket" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Tickets::deleteTicketForever" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Tickets::downloadAttachment" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Tickets::editTicketProperties" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Tickets::fetchTickets" type="service_closure" id=".service_locator.i4_pXUi"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Tickets::trashTicket" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Tickets::viewTicket" type="service_closure" id=".service_locator.i4_pXUi"/>
        <argument key="Webkul\UVDesk\ApiBundle\Controller\ApiSettings::createAccessCredentials" type="service_closure" id=".service_locator.xV8zwpH"/>
        <argument key="Webkul\UVDesk\ApiBundle\Controller\ApiSettings::loadConfigurations" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\ApiBundle\Controller\ApiSettings::loadConfigurationsXHR" type="service_closure" id=".service_locator.xV8zwpH"/>
        <argument key="Webkul\UVDesk\ApiBundle\Controller\ApiSettings::updateAccessCredentialsXHR" type="service_closure" id=".service_locator.xV8zwpH"/>
        <argument key="Webkul\UVDesk\AutomationBundle\Controller\Automations\PreparedResponse::editPrepareResponse" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\AutomationBundle\Controller\Automations\PreparedResponseXHR::getPreparedResponseActionOptionsXHR" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\AutomationBundle\Controller\Automations\PreparedResponseXHR::prepareResponseListXhr" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\AutomationBundle\Controller\Automations\WorkflowXHR::getWorkflowActionOptionsXHR" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\AutomationBundle\Controller\Automations\WorkflowXHR::workflowsListXhr" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\AccountXHR::listAgentsXHR" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\Authentication::updateCredentials" type="service_closure" id=".service_locator.Isyi.eu"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\CustomerXHR::listCustomersXHR" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\Email::templatesxhr" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\GroupXHR::listGroupsXHR" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\Microsoft\MicrosoftApps::addMicrosoftAccount" type="service_closure" id=".service_locator.XWDbXBG"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\Microsoft\MicrosoftApps::createConfiguration" type="service_closure" id=".service_locator.mwdcwjc"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\Microsoft\MicrosoftApps::handleOAuthCallback" type="service_closure" id=".service_locator.ZPQH3Ui"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\Microsoft\MicrosoftApps::loadSettings" type="service_closure" id=".service_locator.AqqXaUO"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\Microsoft\MicrosoftApps::updateConfiguration" type="service_closure" id=".service_locator.VzninxD"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\Microsoft\MicrosoftAppsXHR::loadSettingsXHR" type="service_closure" id=".service_locator.rhm0r3z"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\Microsoft\MicrosoftAppsXHR::removeConfiguration" type="service_closure" id=".service_locator.VzninxD"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\Microsoft\MicrosoftAppsXHR::toggleConfigurationStatus" type="service_closure" id=".service_locator.VzninxD"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\PrivilegeXHR::listPrivilegeXHR" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\Report::getAchievementsXhr" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\SavedReplies::savedRepliesXHR" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\SavedReplies::updateSavedReplies" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\SwiftMailer::updateMailerConfiguration" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\SwiftMailerXHR::removeMailerConfiguration" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\TeamXHR::deleteTeamXHR" type="service_closure" id=".service_locator.q2ji3lu"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\TeamXHR::listTeamsXHR" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\Ticket::loadTicket" type="service_closure" id=".service_locator.1hkzPeN"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\TicketXHR::getTicketQuickViewDetailsXhr" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\ExtensionFrameworkBundle\Controller\Application::apiEndpointXHR" type="service_closure" id=".service_locator.LwcGnq5"/>
        <argument key="Webkul\UVDesk\ExtensionFrameworkBundle\Controller\Application::dashboard" type="service_closure" id=".service_locator.UToq_Ob"/>
        <argument key="Webkul\UVDesk\ExtensionFrameworkBundle\Controller\Dashboard::applications" type="service_closure" id=".service_locator.AqqXaUO"/>
        <argument key="Webkul\UVDesk\ExtensionFrameworkBundle\Controller\Dashboard::applicationsXHR" type="service_closure" id=".service_locator.qgIdpU1"/>
        <argument key="Webkul\UVDesk\MailboxBundle\Controller\MailboxChannel::createMailboxConfiguration" type="service_closure" id=".service_locator.vuNdeAY"/>
        <argument key="Webkul\UVDesk\MailboxBundle\Controller\MailboxChannel::loadMailboxes" type="service_closure" id=".service_locator.AqqXaUO"/>
        <argument key="Webkul\UVDesk\MailboxBundle\Controller\MailboxChannel::updateMailboxConfiguration" type="service_closure" id=".service_locator.vuNdeAY"/>
        <argument key="Webkul\UVDesk\MailboxBundle\Controller\MailboxChannelXHR::processMailXHR" type="service_closure" id=".service_locator.diu05Wv"/>
        <argument key="Webkul\UVDesk\MailboxBundle\Controller\MailboxChannelXHR::processOutlookMailXHR" type="service_closure" id=".service_locator.diu05Wv"/>
        <argument key="Webkul\UVDesk\SupportCenterBundle\Controller\Announcement::listAnnouncementXHR" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\SupportCenterBundle\Controller\Article::ArticleList" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\SupportCenterBundle\Controller\Article::ArticleListByCategory" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\SupportCenterBundle\Controller\Article::ArticleListXhr" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\SupportCenterBundle\Controller\Article::article" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\SupportCenterBundle\Controller\Category::Category" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\SupportCenterBundle\Controller\Category::CategoryList" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\SupportCenterBundle\Controller\Category::CategoryListXhr" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\SupportCenterBundle\Controller\Category::CategoryXhr" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\SupportCenterBundle\Controller\KnowledgebaseXHR::listFoldersXHR" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\SupportCenterBundle\Controller\MarketingModule::listModulesXHR" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\SupportCenterBundle\Controller\MarketingModule::marketingModuleCustomerListXHR" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\SupportCenterBundle\Controller\Ticket::threadListXhr" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\SupportCenterBundle\Controller\Ticket::ticketListXhr" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\SupportCenterBundle\Controller\Ticket::ticketadd" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="kernel::loadRoutes" type="service_closure" id=".service_locator.xUrKPVU"/>
        <argument key="kernel::registerContainerConfiguration" type="service_closure" id=".service_locator.xUrKPVU"/>
        <argument key="App\Controller\BaseController:base" type="service_closure" id=".service_locator.CctwNnK"/>
        <argument key="App\Controller\ConfigureHelpdesk:createDefaultSuperUserXHR" type="service_closure" id=".service_locator.Isyi.eu"/>
        <argument key="App\Controller\ConfigureHelpdesk:evaluateSystemRequirements" type="service_closure" id=".service_locator.6H7qA2B"/>
        <argument key="App\Controller\ConfigureHelpdesk:migrateDatabaseSchemaXHR" type="service_closure" id=".service_locator.6H7qA2B"/>
        <argument key="App\Controller\ConfigureHelpdesk:populateDatabaseEntitiesXHR" type="service_closure" id=".service_locator.6H7qA2B"/>
        <argument key="App\Controller\ConfigureHelpdesk:updateConfigurationsXHR" type="service_closure" id=".service_locator.6H7qA2B"/>
        <argument key="App\Controller\ConfigureHelpdesk:updateWebsiteConfigurationXHR" type="service_closure" id=".service_locator.r23Vwnj"/>
        <argument key="App\Controller\ConfigureHelpdesk:websiteConfigurationXHR" type="service_closure" id=".service_locator.r23Vwnj"/>
        <argument key="App\Controller\ImageCache\ImageManager:cache" type="service_closure" id=".service_locator.hsfYii4"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Agents:createAgentRecord" type="service_closure" id=".service_locator.93GkAao"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Agents:deleteAgentRecord" type="service_closure" id=".service_locator.DLRxWCH"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Agents:loadAgents" type="service_closure" id=".service_locator.aKM6MDa"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Agents:updateAgentRecord" type="service_closure" id=".service_locator.cWYmD9L"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Customers:createCustomerRecord" type="service_closure" id=".service_locator.93GkAao"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Customers:deleteCustomerRecord" type="service_closure" id=".service_locator.DLRxWCH"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Customers:loadCustomers" type="service_closure" id=".service_locator.aKM6MDa"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Customers:updateCustomerRecord" type="service_closure" id=".service_locator.2jqOiLn"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Group:createGroupRecord" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Group:loadGroup" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Group:updateGroupRecord" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Me:loadCurrentAgentDetails" type="service_closure" id=".service_locator.r23Vwnj"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Sessions:loginSession" type="service_closure" id=".service_locator.GJOAXQX"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Sessions:logoutSession" type="service_closure" id=".service_locator.aKM6MDa"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Team:createTeams" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Team:loadTeams" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Team:updateTeamsDetails" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Threads:saveThread" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Tickets:addRemoveTicketCollaborator" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Tickets:assignAgent" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Tickets:createTicket" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Tickets:deleteTicketForever" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Tickets:downloadAttachment" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Tickets:editTicketProperties" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Tickets:fetchTickets" type="service_closure" id=".service_locator.i4_pXUi"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Tickets:trashTicket" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\ApiBundle\API\Tickets:viewTicket" type="service_closure" id=".service_locator.i4_pXUi"/>
        <argument key="Webkul\UVDesk\ApiBundle\Controller\ApiSettings:createAccessCredentials" type="service_closure" id=".service_locator.xV8zwpH"/>
        <argument key="Webkul\UVDesk\ApiBundle\Controller\ApiSettings:loadConfigurations" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\ApiBundle\Controller\ApiSettings:loadConfigurationsXHR" type="service_closure" id=".service_locator.xV8zwpH"/>
        <argument key="Webkul\UVDesk\ApiBundle\Controller\ApiSettings:updateAccessCredentialsXHR" type="service_closure" id=".service_locator.xV8zwpH"/>
        <argument key="Webkul\UVDesk\AutomationBundle\Controller\Automations\PreparedResponse:editPrepareResponse" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\AutomationBundle\Controller\Automations\PreparedResponseXHR:getPreparedResponseActionOptionsXHR" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\AutomationBundle\Controller\Automations\PreparedResponseXHR:prepareResponseListXhr" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\AutomationBundle\Controller\Automations\WorkflowXHR:getWorkflowActionOptionsXHR" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\AutomationBundle\Controller\Automations\WorkflowXHR:workflowsListXhr" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\AccountXHR:listAgentsXHR" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\Authentication:updateCredentials" type="service_closure" id=".service_locator.Isyi.eu"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\CustomerXHR:listCustomersXHR" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\Email:templatesxhr" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\GroupXHR:listGroupsXHR" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\Microsoft\MicrosoftApps:addMicrosoftAccount" type="service_closure" id=".service_locator.XWDbXBG"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\Microsoft\MicrosoftApps:createConfiguration" type="service_closure" id=".service_locator.mwdcwjc"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\Microsoft\MicrosoftApps:handleOAuthCallback" type="service_closure" id=".service_locator.ZPQH3Ui"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\Microsoft\MicrosoftApps:loadSettings" type="service_closure" id=".service_locator.AqqXaUO"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\Microsoft\MicrosoftApps:updateConfiguration" type="service_closure" id=".service_locator.VzninxD"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\Microsoft\MicrosoftAppsXHR:loadSettingsXHR" type="service_closure" id=".service_locator.rhm0r3z"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\Microsoft\MicrosoftAppsXHR:removeConfiguration" type="service_closure" id=".service_locator.VzninxD"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\Microsoft\MicrosoftAppsXHR:toggleConfigurationStatus" type="service_closure" id=".service_locator.VzninxD"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\PrivilegeXHR:listPrivilegeXHR" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\Report:getAchievementsXhr" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\SavedReplies:savedRepliesXHR" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\SavedReplies:updateSavedReplies" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\SwiftMailer:updateMailerConfiguration" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\SwiftMailerXHR:removeMailerConfiguration" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\TeamXHR:deleteTeamXHR" type="service_closure" id=".service_locator.q2ji3lu"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\TeamXHR:listTeamsXHR" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\Ticket:loadTicket" type="service_closure" id=".service_locator.1hkzPeN"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Controller\TicketXHR:getTicketQuickViewDetailsXhr" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\ExtensionFrameworkBundle\Controller\Application:apiEndpointXHR" type="service_closure" id=".service_locator.LwcGnq5"/>
        <argument key="Webkul\UVDesk\ExtensionFrameworkBundle\Controller\Application:dashboard" type="service_closure" id=".service_locator.UToq_Ob"/>
        <argument key="Webkul\UVDesk\ExtensionFrameworkBundle\Controller\Dashboard:applications" type="service_closure" id=".service_locator.AqqXaUO"/>
        <argument key="Webkul\UVDesk\ExtensionFrameworkBundle\Controller\Dashboard:applicationsXHR" type="service_closure" id=".service_locator.qgIdpU1"/>
        <argument key="Webkul\UVDesk\MailboxBundle\Controller\MailboxChannel:createMailboxConfiguration" type="service_closure" id=".service_locator.vuNdeAY"/>
        <argument key="Webkul\UVDesk\MailboxBundle\Controller\MailboxChannel:loadMailboxes" type="service_closure" id=".service_locator.AqqXaUO"/>
        <argument key="Webkul\UVDesk\MailboxBundle\Controller\MailboxChannel:updateMailboxConfiguration" type="service_closure" id=".service_locator.vuNdeAY"/>
        <argument key="Webkul\UVDesk\MailboxBundle\Controller\MailboxChannelXHR:processMailXHR" type="service_closure" id=".service_locator.diu05Wv"/>
        <argument key="Webkul\UVDesk\MailboxBundle\Controller\MailboxChannelXHR:processOutlookMailXHR" type="service_closure" id=".service_locator.diu05Wv"/>
        <argument key="Webkul\UVDesk\SupportCenterBundle\Controller\Announcement:listAnnouncementXHR" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\SupportCenterBundle\Controller\Article:ArticleList" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\SupportCenterBundle\Controller\Article:ArticleListByCategory" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\SupportCenterBundle\Controller\Article:ArticleListXhr" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\SupportCenterBundle\Controller\Article:article" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\SupportCenterBundle\Controller\Category:Category" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\SupportCenterBundle\Controller\Category:CategoryList" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\SupportCenterBundle\Controller\Category:CategoryListXhr" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\SupportCenterBundle\Controller\Category:CategoryXhr" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\SupportCenterBundle\Controller\KnowledgebaseXHR:listFoldersXHR" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\SupportCenterBundle\Controller\MarketingModule:listModulesXHR" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\SupportCenterBundle\Controller\MarketingModule:marketingModuleCustomerListXHR" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\SupportCenterBundle\Controller\Ticket:threadListXhr" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\SupportCenterBundle\Controller\Ticket:ticketListXhr" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="Webkul\UVDesk\SupportCenterBundle\Controller\Ticket:ticketadd" type="service_closure" id=".service_locator.H_5dZOt"/>
        <argument key="kernel:loadRoutes" type="service_closure" id=".service_locator.xUrKPVU"/>
        <argument key="kernel:registerContainerConfiguration" type="service_closure" id=".service_locator.xUrKPVU"/>
      </argument>
    </service>
    <service id=".service_locator.19_mNxd" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator" type="service_closure" id="doctrine.orm.validator.unique"/>
        <argument key="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator" type="service_closure" id="security.validator.user_password"/>
        <argument key="Symfony\Component\Validator\Constraints\EmailValidator" type="service_closure" id="validator.email"/>
        <argument key="Symfony\Component\Validator\Constraints\ExpressionValidator" type="service_closure" id="validator.expression"/>
        <argument key="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" type="service_closure" id="validator.not_compromised_password"/>
        <argument key="doctrine.orm.validator.unique" type="service_closure" id="doctrine.orm.validator.unique"/>
        <argument key="security.validator.user_password" type="service_closure" id="security.validator.user_password"/>
        <argument key="validator.expression" type="service_closure" id="validator.expression"/>
      </argument>
    </service>
    <service id=".service_locator.lLv4pWF" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="inline" type="service_closure" id="fragment.renderer.inline"/>
      </argument>
    </service>
    <service id="debug.argument_resolver.request_attribute" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="100"/>
      <tag name="container.decorator" id="argument_resolver.request_attribute"/>
      <argument type="service" id="debug.argument_resolver.request_attribute.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.request" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="50"/>
      <tag name="container.decorator" id="argument_resolver.request"/>
      <argument type="service" id="debug.argument_resolver.request.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.session" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="50"/>
      <tag name="container.decorator" id="argument_resolver.session"/>
      <argument type="service" id="debug.argument_resolver.session.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.security.user_value_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="40"/>
      <tag name="container.decorator" id="security.user_value_resolver"/>
      <argument type="service" id="debug.security.user_value_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.service" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-50"/>
      <tag name="container.decorator" id="argument_resolver.service"/>
      <argument type="service" id="debug.argument_resolver.service.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.default" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-100"/>
      <tag name="container.decorator" id="argument_resolver.default"/>
      <argument type="service" id="debug.argument_resolver.default.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.variadic" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-150"/>
      <tag name="container.decorator" id="argument_resolver.variadic"/>
      <argument type="service" id="debug.argument_resolver.variadic.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.not_tagged_controller" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-200"/>
      <tag name="container.decorator" id="argument_resolver.not_tagged_controller"/>
      <argument type="service" id="debug.argument_resolver.not_tagged_controller.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".service_locator.X9CzMyE" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Symfony\Bridge\Doctrine\Form\Type\EntityType" type="service_closure" id="form.type.entity"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType" type="service_closure" id="form.type.choice"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ColorType" type="service_closure" id="form.type.color"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FileType" type="service_closure" id="form.type.file"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="service_closure" id="form.type.form"/>
        <argument key="Webkul\UVDesk\AutomationBundle\Form\DefaultForm" type="service_closure" id="Webkul\UVDesk\AutomationBundle\Form\DefaultForm"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Form\CreateTicket" type="service_closure" id="Webkul\UVDesk\CoreFrameworkBundle\Form\CreateTicket"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Form\Mailbox" type="service_closure" id="Webkul\UVDesk\CoreFrameworkBundle\Form\Mailbox"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Form\UserProfile" type="service_closure" id="Webkul\UVDesk\CoreFrameworkBundle\Form\UserProfile"/>
        <argument key="Webkul\UVDesk\SupportCenterBundle\Form\AccountValidation" type="service_closure" id="Webkul\UVDesk\SupportCenterBundle\Form\AccountValidation"/>
        <argument key="Webkul\UVDesk\SupportCenterBundle\Form\ForgotPassword" type="service_closure" id="Webkul\UVDesk\SupportCenterBundle\Form\ForgotPassword"/>
        <argument key="Webkul\UVDesk\SupportCenterBundle\Form\SolutionModal" type="service_closure" id="Webkul\UVDesk\SupportCenterBundle\Form\SolutionModal"/>
        <argument key="Webkul\UVDesk\SupportCenterBundle\Form\Ticket" type="service_closure" id="Webkul\UVDesk\SupportCenterBundle\Form\Ticket"/>
      </argument>
    </service>
    <service id=".debug.http_client" class="Symfony\Component\HttpClient\TraceableHttpClient">
      <tag name="monolog.logger" channel="http_client"/>
      <tag name="kernel.reset" method="reset"/>
      <tag name="http_client.client"/>
      <tag name="container.decorator" id="http_client"/>
      <argument type="service" id=".debug.http_client.inner"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id=".service_locator.GYNkv9O" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\EventListener\Doctrine\Lifecycle" type="service_closure" id="Webkul\UVDesk\CoreFrameworkBundle\EventListener\Doctrine\Lifecycle"/>
        <argument key="doctrine.orm.default_listeners.attach_entity_listeners" type="service_closure" id="doctrine.orm.default_listeners.attach_entity_listeners"/>
        <argument key="doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_subscriber" type="service_closure" id="doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_subscriber"/>
        <argument key="doctrine.orm.listeners.doctrine_token_provider_schema_subscriber" type="service_closure" id="doctrine.orm.listeners.doctrine_token_provider_schema_subscriber"/>
        <argument key="doctrine.orm.listeners.pdo_cache_adapter_doctrine_schema_subscriber" type="service_closure" id="doctrine.orm.listeners.pdo_cache_adapter_doctrine_schema_subscriber"/>
      </argument>
    </service>
    <service id=".service_locator.du0z04N" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Webkul\UVDesk\ApiBundle\Repository\ApiAccessCredentialRepository" type="service_closure" id="Webkul\UVDesk\ApiBundle\Repository\ApiAccessCredentialRepository"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Repository\AgentActivityRepository" type="service_closure" id="Webkul\UVDesk\CoreFrameworkBundle\Repository\AgentActivityRepository"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Repository\Microsoft\MicrosoftAccountRepository" type="service_closure" id="Webkul\UVDesk\CoreFrameworkBundle\Repository\Microsoft\MicrosoftAccountRepository"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Repository\Microsoft\MicrosoftAppRepository" type="service_closure" id="Webkul\UVDesk\CoreFrameworkBundle\Repository\Microsoft\MicrosoftAppRepository"/>
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Repository\RecaptchaRepository" type="service_closure" id="Webkul\UVDesk\CoreFrameworkBundle\Repository\RecaptchaRepository"/>
        <argument key="Webkul\UVDesk\SupportCenterBundle\Repository\AnnouncementRepository" type="service_closure" id="Webkul\UVDesk\SupportCenterBundle\Repository\AnnouncementRepository"/>
        <argument key="Webkul\UVDesk\SupportCenterBundle\Repository\MarketingModuleRepository" type="service_closure" id="Webkul\UVDesk\SupportCenterBundle\Repository\MarketingModuleRepository"/>
      </argument>
    </service>
    <service id=".service_locator.KLVvNIq" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine.ulid_generator" type="service_closure" id="doctrine.ulid_generator"/>
        <argument key="doctrine.uuid_generator" type="service_closure" id="doctrine.uuid_generator"/>
      </argument>
    </service>
    <service id=".doctrine.orm.default_metadata_driver" class="Doctrine\Bundle\DoctrineBundle\Mapping\MappingDriver">
      <tag name="container.decorator" id="doctrine.orm.default_metadata_driver"/>
      <argument type="service" id=".doctrine.orm.default_metadata_driver.inner"/>
      <argument type="service" id=".service_locator.KLVvNIq"/>
    </service>
    <service id="monolog.logger.request" class="Symfony\Bridge\Monolog\Logger">
      <argument>request</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.console" class="Symfony\Bridge\Monolog\Logger">
      <argument>console</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.cache" class="Symfony\Bridge\Monolog\Logger">
      <argument>cache</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.http_client" class="Symfony\Bridge\Monolog\Logger">
      <argument>http_client</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.mailer" class="Symfony\Bridge\Monolog\Logger">
      <argument>mailer</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.translation" class="Symfony\Bridge\Monolog\Logger">
      <argument>translation</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.php" class="Symfony\Bridge\Monolog\Logger">
      <argument>php</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.event" class="Symfony\Bridge\Monolog\Logger">
      <argument>event</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.router" class="Symfony\Bridge\Monolog\Logger">
      <argument>router</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.profiler" class="Symfony\Bridge\Monolog\Logger">
      <argument>profiler</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.doctrine" class="Symfony\Bridge\Monolog\Logger">
      <argument>doctrine</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.debug" class="Symfony\Bridge\Monolog\Logger">
      <argument>debug</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.security" class="Symfony\Bridge\Monolog\Logger">
      <argument>security</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.deprecation" class="Symfony\Bridge\Monolog\Logger" public="true">
      <argument>deprecation</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.handler.null_internal" class="Monolog\Handler\NullHandler"/>
    <service id="debug.security.voter.security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.authenticated_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.security.access.role_hierarchy_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.role_hierarchy_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.security.access.expression_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.expression_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.Webkul\UVDesk\CoreFrameworkBundle\Security\TicketVoter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="Webkul\UVDesk\CoreFrameworkBundle\Security\TicketVoter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="security.logout.listener.csrf_token_clearing" class="Symfony\Component\Security\Http\EventListener\CsrfTokenClearingLogoutListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="security.csrf.token_storage"/>
    </service>
    <service id="security.ldap_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <argument type="collection"/>
    </service>
    <service id=".service_locator.yY.p4P7" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translation.loader.csv" type="service_closure" id="translation.loader.csv"/>
        <argument key="translation.loader.dat" type="service_closure" id="translation.loader.dat"/>
        <argument key="translation.loader.ini" type="service_closure" id="translation.loader.ini"/>
        <argument key="translation.loader.json" type="service_closure" id="translation.loader.json"/>
        <argument key="translation.loader.mo" type="service_closure" id="translation.loader.mo"/>
        <argument key="translation.loader.php" type="service_closure" id="translation.loader.php"/>
        <argument key="translation.loader.po" type="service_closure" id="translation.loader.po"/>
        <argument key="translation.loader.qt" type="service_closure" id="translation.loader.qt"/>
        <argument key="translation.loader.res" type="service_closure" id="translation.loader.res"/>
        <argument key="translation.loader.xliff" type="service_closure" id="translation.loader.xliff"/>
        <argument key="translation.loader.yml" type="service_closure" id="translation.loader.yml"/>
      </argument>
    </service>
    <service id=".service_locator.mx0UMmY" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine" type="service_closure" id="doctrine" on-invalid="ignore"/>
        <argument key="form.factory" type="service_closure" id="form.factory" on-invalid="ignore"/>
        <argument key="http_kernel" type="service_closure" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service_closure" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service_closure" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service_closure" id="router.default" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service_closure" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service_closure" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service_closure" id="security.token_storage" on-invalid="ignore"/>
        <argument key="serializer" type="service_closure" id="serializer" on-invalid="ignore"/>
        <argument key="session" type="service_closure" id=".session.deprecated" on-invalid="ignore"/>
        <argument key="twig" type="service_closure" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.mx0UMmY.App\Controller\BaseController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\BaseController"/>
      <argument>App\Controller\BaseController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.App\Controller\ConfigureHelpdesk" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\ConfigureHelpdesk"/>
      <argument>App\Controller\ConfigureHelpdesk</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.App\Controller\ImageCache\ImageCacheController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\ImageCache\ImageCacheController"/>
      <argument>App\Controller\ImageCache\ImageCacheController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\Account" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\CoreFrameworkBundle\Controller\Account"/>
      <argument>Webkul\UVDesk\CoreFrameworkBundle\Controller\Account</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\AccountXHR" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\CoreFrameworkBundle\Controller\AccountXHR"/>
      <argument>Webkul\UVDesk\CoreFrameworkBundle\Controller\AccountXHR</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\Authentication" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\CoreFrameworkBundle\Controller\Authentication"/>
      <argument>Webkul\UVDesk\CoreFrameworkBundle\Controller\Authentication</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\Customer" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\CoreFrameworkBundle\Controller\Customer"/>
      <argument>Webkul\UVDesk\CoreFrameworkBundle\Controller\Customer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\CustomerXHR" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\CoreFrameworkBundle\Controller\CustomerXHR"/>
      <argument>Webkul\UVDesk\CoreFrameworkBundle\Controller\CustomerXHR</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\Email" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\CoreFrameworkBundle\Controller\Email"/>
      <argument>Webkul\UVDesk\CoreFrameworkBundle\Controller\Email</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\EmailSettings" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\CoreFrameworkBundle\Controller\EmailSettings"/>
      <argument>Webkul\UVDesk\CoreFrameworkBundle\Controller\EmailSettings</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\EmailSettingsXHR" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\CoreFrameworkBundle\Controller\EmailSettingsXHR"/>
      <argument>Webkul\UVDesk\CoreFrameworkBundle\Controller\EmailSettingsXHR</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\Group" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\CoreFrameworkBundle\Controller\Group"/>
      <argument>Webkul\UVDesk\CoreFrameworkBundle\Controller\Group</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\GroupXHR" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\CoreFrameworkBundle\Controller\GroupXHR"/>
      <argument>Webkul\UVDesk\CoreFrameworkBundle\Controller\GroupXHR</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\Microsoft\MicrosoftApps" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\CoreFrameworkBundle\Controller\Microsoft\MicrosoftApps"/>
      <argument>Webkul\UVDesk\CoreFrameworkBundle\Controller\Microsoft\MicrosoftApps</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\Microsoft\MicrosoftAppsXHR" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\CoreFrameworkBundle\Controller\Microsoft\MicrosoftAppsXHR"/>
      <argument>Webkul\UVDesk\CoreFrameworkBundle\Controller\Microsoft\MicrosoftAppsXHR</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\Privilege" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\CoreFrameworkBundle\Controller\Privilege"/>
      <argument>Webkul\UVDesk\CoreFrameworkBundle\Controller\Privilege</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\PrivilegeXHR" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\CoreFrameworkBundle\Controller\PrivilegeXHR"/>
      <argument>Webkul\UVDesk\CoreFrameworkBundle\Controller\PrivilegeXHR</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\Report" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\CoreFrameworkBundle\Controller\Report"/>
      <argument>Webkul\UVDesk\CoreFrameworkBundle\Controller\Report</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\SavedReplies" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\CoreFrameworkBundle\Controller\SavedReplies"/>
      <argument>Webkul\UVDesk\CoreFrameworkBundle\Controller\SavedReplies</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\SwiftMailer" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\CoreFrameworkBundle\Controller\SwiftMailer"/>
      <argument>Webkul\UVDesk\CoreFrameworkBundle\Controller\SwiftMailer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\SwiftMailerXHR" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\CoreFrameworkBundle\Controller\SwiftMailerXHR"/>
      <argument>Webkul\UVDesk\CoreFrameworkBundle\Controller\SwiftMailerXHR</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\Team" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\CoreFrameworkBundle\Controller\Team"/>
      <argument>Webkul\UVDesk\CoreFrameworkBundle\Controller\Team</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\TeamXHR" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\CoreFrameworkBundle\Controller\TeamXHR"/>
      <argument>Webkul\UVDesk\CoreFrameworkBundle\Controller\TeamXHR</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\Theme" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\CoreFrameworkBundle\Controller\Theme"/>
      <argument>Webkul\UVDesk\CoreFrameworkBundle\Controller\Theme</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\Thread" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\CoreFrameworkBundle\Controller\Thread"/>
      <argument>Webkul\UVDesk\CoreFrameworkBundle\Controller\Thread</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\ThreadXHR" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\CoreFrameworkBundle\Controller\ThreadXHR"/>
      <argument>Webkul\UVDesk\CoreFrameworkBundle\Controller\ThreadXHR</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\Ticket" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\CoreFrameworkBundle\Controller\Ticket"/>
      <argument>Webkul\UVDesk\CoreFrameworkBundle\Controller\Ticket</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\CoreFrameworkBundle\Controller\TicketXHR" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\CoreFrameworkBundle\Controller\TicketXHR"/>
      <argument>Webkul\UVDesk\CoreFrameworkBundle\Controller\TicketXHR</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\AutomationBundle\Controller\Automations\PreparedResponse" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\AutomationBundle\Controller\Automations\PreparedResponse"/>
      <argument>Webkul\UVDesk\AutomationBundle\Controller\Automations\PreparedResponse</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\AutomationBundle\Controller\Automations\PreparedResponseXHR" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\AutomationBundle\Controller\Automations\PreparedResponseXHR"/>
      <argument>Webkul\UVDesk\AutomationBundle\Controller\Automations\PreparedResponseXHR</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\AutomationBundle\Controller\Automations\Workflow" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\AutomationBundle\Controller\Automations\Workflow"/>
      <argument>Webkul\UVDesk\AutomationBundle\Controller\Automations\Workflow</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\AutomationBundle\Controller\Automations\WorkflowXHR" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\AutomationBundle\Controller\Automations\WorkflowXHR"/>
      <argument>Webkul\UVDesk\AutomationBundle\Controller\Automations\WorkflowXHR</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\ExtensionFrameworkBundle\Controller\Application" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\ExtensionFrameworkBundle\Controller\Application"/>
      <argument>Webkul\UVDesk\ExtensionFrameworkBundle\Controller\Application</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\ExtensionFrameworkBundle\Controller\Dashboard" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\ExtensionFrameworkBundle\Controller\Dashboard"/>
      <argument>Webkul\UVDesk\ExtensionFrameworkBundle\Controller\Dashboard</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\MailboxBundle\Controller\MailboxChannel" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\MailboxBundle\Controller\MailboxChannel"/>
      <argument>Webkul\UVDesk\MailboxBundle\Controller\MailboxChannel</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\MailboxBundle\Controller\MailboxChannelXHR" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\MailboxBundle\Controller\MailboxChannelXHR"/>
      <argument>Webkul\UVDesk\MailboxBundle\Controller\MailboxChannelXHR</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\SupportCenterBundle\Controller\Announcement" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\SupportCenterBundle\Controller\Announcement"/>
      <argument>Webkul\UVDesk\SupportCenterBundle\Controller\Announcement</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\SupportCenterBundle\Controller\Article" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\SupportCenterBundle\Controller\Article"/>
      <argument>Webkul\UVDesk\SupportCenterBundle\Controller\Article</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\SupportCenterBundle\Controller\Branding" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\SupportCenterBundle\Controller\Branding"/>
      <argument>Webkul\UVDesk\SupportCenterBundle\Controller\Branding</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\SupportCenterBundle\Controller\Category" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\SupportCenterBundle\Controller\Category"/>
      <argument>Webkul\UVDesk\SupportCenterBundle\Controller\Category</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\SupportCenterBundle\Controller\Customer" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\SupportCenterBundle\Controller\Customer"/>
      <argument>Webkul\UVDesk\SupportCenterBundle\Controller\Customer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\SupportCenterBundle\Controller\Folder" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\SupportCenterBundle\Controller\Folder"/>
      <argument>Webkul\UVDesk\SupportCenterBundle\Controller\Folder</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\SupportCenterBundle\Controller\KnowledgebaseXHR" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\SupportCenterBundle\Controller\KnowledgebaseXHR"/>
      <argument>Webkul\UVDesk\SupportCenterBundle\Controller\KnowledgebaseXHR</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\SupportCenterBundle\Controller\MarketingModule" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\SupportCenterBundle\Controller\MarketingModule"/>
      <argument>Webkul\UVDesk\SupportCenterBundle\Controller\MarketingModule</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\SupportCenterBundle\Controller\Ticket" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\SupportCenterBundle\Controller\Ticket"/>
      <argument>Webkul\UVDesk\SupportCenterBundle\Controller\Ticket</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\SupportCenterBundle\Controller\Website" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\SupportCenterBundle\Controller\Website"/>
      <argument>Webkul\UVDesk\SupportCenterBundle\Controller\Website</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\ApiBundle\API\Agents" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\ApiBundle\API\Agents"/>
      <argument>Webkul\UVDesk\ApiBundle\API\Agents</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\ApiBundle\API\Customers" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\ApiBundle\API\Customers"/>
      <argument>Webkul\UVDesk\ApiBundle\API\Customers</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\ApiBundle\API\Group" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\ApiBundle\API\Group"/>
      <argument>Webkul\UVDesk\ApiBundle\API\Group</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\ApiBundle\API\Me" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\ApiBundle\API\Me"/>
      <argument>Webkul\UVDesk\ApiBundle\API\Me</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\ApiBundle\API\Sessions" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\ApiBundle\API\Sessions"/>
      <argument>Webkul\UVDesk\ApiBundle\API\Sessions</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\ApiBundle\API\Team" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\ApiBundle\API\Team"/>
      <argument>Webkul\UVDesk\ApiBundle\API\Team</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\ApiBundle\API\Threads" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\ApiBundle\API\Threads"/>
      <argument>Webkul\UVDesk\ApiBundle\API\Threads</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\ApiBundle\API\TicketTypes" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\ApiBundle\API\TicketTypes"/>
      <argument>Webkul\UVDesk\ApiBundle\API\TicketTypes</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\ApiBundle\API\Tickets" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\ApiBundle\API\Tickets"/>
      <argument>Webkul\UVDesk\ApiBundle\API\Tickets</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.Webkul\UVDesk\ApiBundle\Controller\ApiSettings" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Webkul\UVDesk\ApiBundle\Controller\ApiSettings"/>
      <argument>Webkul\UVDesk\ApiBundle\Controller\ApiSettings</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.wSgjnB6" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translator" type="service_closure" id="translator.data_collector"/>
      </argument>
    </service>
    <service id=".service_locator.wSgjnB6.translation.warmer" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="translation.warmer"/>
      <argument>translation.warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.wSgjnB6" method="withContext"/>
    </service>
    <service id=".service_locator.OSH1YoD" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="routing.loader" type="service_closure" id="routing.loader"/>
      </argument>
    </service>
    <service id=".service_locator.OSH1YoD.router.default" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="router.default"/>
      <argument>router.default</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.OSH1YoD" method="withContext"/>
    </service>
    <service id=".service_locator.oCg4uHe" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="router" type="service_closure" id="router.default"/>
      </argument>
    </service>
    <service id=".service_locator.oCg4uHe.router.cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="router.cache_warmer"/>
      <argument>router.cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.oCg4uHe" method="withContext"/>
    </service>
    <service id=".service_locator.aNklfos" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="twig" type="service_closure" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.aNklfos.sensio_framework_extra.view.listener" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="sensio_framework_extra.view.listener"/>
      <argument>sensio_framework_extra.view.listener</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.aNklfos" method="withContext"/>
    </service>
    <service id=".service_locator.v.Wwsjy" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="twig" type="service_closure" id="twig"/>
      </argument>
    </service>
    <service id=".service_locator.v.Wwsjy.twig.template_cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="twig.template_cache_warmer"/>
      <argument>twig.template_cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.v.Wwsjy" method="withContext"/>
    </service>
    <service id=".service_locator.XXv1IfR" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="reverse_container" type="service_closure" id="reverse_container" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id=".service_locator.FkiYa_u" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Webkul\UVDesk\CoreFrameworkBundle\Framework\EventDispatcher" type="service_closure" id="Webkul\UVDesk\CoreFrameworkBundle\Framework\EventDispatcher"/>
        <argument key="event_dispatcher" type="service_closure" id="debug.event_dispatcher"/>
        <argument key="security.event_dispatcher.back_support" type="service_closure" id="security.event_dispatcher.back_support"/>
        <argument key="security.event_dispatcher.customer" type="service_closure" id="security.event_dispatcher.customer"/>
        <argument key="security.event_dispatcher.uvdesk_api" type="service_closure" id="security.event_dispatcher.uvdesk_api"/>
      </argument>
    </service>
    <service id=".service_locator.XWmhzGa" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="kernel" type="service_closure" id="kernel"/>
      </argument>
    </service>
    <service id=".service_locator.Kr.dDlB" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="env" type="service_closure" id="container.getenv"/>
      </argument>
    </service>
    <service id=".service_locator.XmPJruK" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="initialized_session" type="service_closure" id=".session.do-not-use" on-invalid="ignore_uninitialized"/>
        <argument key="logger" type="service_closure" id="monolog.logger" on-invalid="ignore"/>
        <argument key="request_stack" type="service_closure" id="request_stack" on-invalid="ignore"/>
        <argument key="session" type="service_closure" id=".session.do-not-use" on-invalid="ignore"/>
        <argument key="session_collector" type="service_closure" id="data_collector.request.session_collector" on-invalid="ignore"/>
        <argument key="session_factory" type="service_closure" id="session.factory" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.UkE3SaZ" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="browser" type="service_closure" id="notifier.channel.browser"/>
        <argument key="chat" type="service_closure" id="notifier.channel.chat"/>
        <argument key="email" type="service_closure" id="notifier.channel.email"/>
        <argument key="push" type="service_closure" id="notifier.channel.push"/>
        <argument key="sms" type="service_closure" id="notifier.channel.sms"/>
      </argument>
    </service>
    <service id=".service_locator.LcVn9Hr" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="request_stack" type="service_closure" id="request_stack"/>
      </argument>
    </service>
    <service id=".service_locator.nLgZj7R" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.authorization_checker" type="service_closure" id="security.authorization_checker"/>
        <argument key="security.token_storage" type="service_closure" id="security.token_storage"/>
      </argument>
    </service>
    <service id="debug.validator.inner" class="Symfony\Component\Validator\Validator\ValidatorInterface">
      <factory service="validator.builder" method="getValidator"/>
    </service>
    <service id=".debug.http_client.inner" class="Symfony\Contracts\HttpClient\HttpClientInterface">
      <argument type="collection"/>
      <argument>6</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.http_client" on-invalid="ignore"/>
      </call>
      <factory class="Symfony\Component\HttpClient\HttpClient" method="create"/>
    </service>
    <service id="debug.event_dispatcher.inner" class="Symfony\Component\EventDispatcher\EventDispatcher"/>
    <service id="debug.controller_resolver.inner" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver">
      <argument type="service" id="service_container"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
    </service>
    <service id="debug.argument_resolver.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver">
      <argument type="service" id="argument_metadata_factory"/>
      <argument type="iterator">
        <argument type="service" id="debug.argument_resolver.request_attribute"/>
        <argument type="service" id="debug.argument_resolver.request"/>
        <argument type="service" id="debug.argument_resolver.session"/>
        <argument type="service" id="debug.security.user_value_resolver"/>
        <argument type="service" id="debug.argument_resolver.service"/>
        <argument type="service" id="debug.argument_resolver.default"/>
        <argument type="service" id="debug.argument_resolver.variadic"/>
        <argument type="service" id="debug.argument_resolver.not_tagged_controller"/>
      </argument>
    </service>
    <service id="var_dumper.contextualized_cli_dumper.inner" class="Symfony\Component\VarDumper\Dumper\CliDumper">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>0</argument>
      <call method="setDisplayOptions">
        <argument type="collection">
          <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
        </argument>
      </call>
    </service>
    <service id="debug.security.access.decision_manager.inner" class="Symfony\Component\Security\Core\Authorization\AccessDecisionManager">
      <argument type="iterator">
        <argument type="service" id="debug.security.voter.security.access.authenticated_voter"/>
        <argument type="service" id="debug.security.voter.security.access.role_hierarchy_voter"/>
        <argument type="service" id="debug.security.voter.security.access.expression_voter"/>
        <argument type="service" id="debug.security.voter.Webkul\UVDesk\CoreFrameworkBundle\Security\TicketVoter"/>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\Security\Core\Authorization\Strategy\AffirmativeStrategy">
          <argument>false</argument>
        </service>
      </argument>
    </service>
    <service id="debug.argument_resolver.request_attribute.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver"/>
    <service id="debug.argument_resolver.request.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver"/>
    <service id="debug.argument_resolver.session.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver"/>
    <service id="debug.security.user_value_resolver.inner" class="Symfony\Component\Security\Http\Controller\UserValueResolver">
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="debug.argument_resolver.service.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver">
      <argument type="service" id=".service_locator.9No.Nxb"/>
    </service>
    <service id="debug.argument_resolver.default.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver"/>
    <service id="debug.argument_resolver.variadic.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver"/>
    <service id="debug.argument_resolver.not_tagged_controller.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\NotTaggedControllerValueResolver">
      <argument type="service" id=".service_locator.9No.Nxb"/>
    </service>
    <service id=".doctrine.orm.default_metadata_driver.inner" class="Doctrine\Persistence\Mapping\Driver\MappingDriverChain">
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>App\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>Webkul\UVDesk\CoreFrameworkBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>Webkul\UVDesk\AutomationBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>Webkul\UVDesk\SupportCenterBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>Webkul\UVDesk\ApiBundle\Entity</argument>
      </call>
    </service>
    <service id=".errored..service_locator.xUrKPVU.Symfony\Component\Config\Loader\LoaderInterface" class="Symfony\Component\Config\Loader\LoaderInterface"/>
    <service id=".errored..service_locator.hsfYii4.Closure" class="Closure"/>
    <service id=".errored..service_locator.xV8zwpH.Symfony\Component\Security\Core\User\UserInterface" class="Symfony\Component\Security\Core\User\UserInterface"/>
    <service id=".console.command.about.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>about</argument>
      <argument type="collection"/>
      <argument>Display information about the current project</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.about"/>
    </service>
    <service id=".console.command.assets_install.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>assets:install</argument>
      <argument type="collection"/>
      <argument>Install bundle's web assets under a public directory</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.assets_install"/>
    </service>
    <service id=".console.command.cache_clear.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:clear</argument>
      <argument type="collection"/>
      <argument>Clear the cache</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_clear"/>
    </service>
    <service id=".console.command.cache_pool_clear.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:clear</argument>
      <argument type="collection"/>
      <argument>Clear cache pools</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_clear"/>
    </service>
    <service id=".console.command.cache_pool_prune.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:prune</argument>
      <argument type="collection"/>
      <argument>Prune cache pools</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_prune"/>
    </service>
    <service id=".console.command.cache_pool_delete.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:delete</argument>
      <argument type="collection"/>
      <argument>Delete an item from a cache pool</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_delete"/>
    </service>
    <service id=".console.command.cache_pool_list.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:list</argument>
      <argument type="collection"/>
      <argument>List available cache pools</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_list"/>
    </service>
    <service id=".console.command.cache_warmup.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:warmup</argument>
      <argument type="collection"/>
      <argument>Warm up an empty cache</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_warmup"/>
    </service>
    <service id=".console.command.config_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:config</argument>
      <argument type="collection"/>
      <argument>Dump the current configuration for an extension</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.config_debug"/>
    </service>
    <service id=".console.command.config_dump_reference.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>config:dump-reference</argument>
      <argument type="collection"/>
      <argument>Dump the default configuration for an extension</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.config_dump_reference"/>
    </service>
    <service id=".console.command.container_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:container</argument>
      <argument type="collection"/>
      <argument>Display current services for an application</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.container_debug"/>
    </service>
    <service id=".console.command.container_lint.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lint:container</argument>
      <argument type="collection"/>
      <argument>Ensure that arguments injected into services match type declarations</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.container_lint"/>
    </service>
    <service id=".console.command.debug_autowiring.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:autowiring</argument>
      <argument type="collection"/>
      <argument>List classes/interfaces you can use for autowiring</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.debug_autowiring"/>
    </service>
    <service id=".console.command.dotenv_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:dotenv</argument>
      <argument type="collection"/>
      <argument>Lists all dotenv files with variables and values</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.dotenv_debug"/>
    </service>
    <service id=".console.command.event_dispatcher_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:event-dispatcher</argument>
      <argument type="collection"/>
      <argument>Display configured listeners for an application</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.event_dispatcher_debug"/>
    </service>
    <service id=".console.command.router_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:router</argument>
      <argument type="collection"/>
      <argument>Display current routes for an application</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.router_debug"/>
    </service>
    <service id=".console.command.router_match.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>router:match</argument>
      <argument type="collection"/>
      <argument>Help debug routes by simulating a path info match</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.router_match"/>
    </service>
    <service id=".console.command.translation_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:translation</argument>
      <argument type="collection"/>
      <argument>Display translation messages information</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.translation_debug"/>
    </service>
    <service id=".console.command.translation_extract.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>translation:extract</argument>
      <argument type="collection">
        <argument>translation:update</argument>
      </argument>
      <argument>Extract missing translations keys from code to translation files.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.translation_extract"/>
    </service>
    <service id=".console.command.validator_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:validator</argument>
      <argument type="collection"/>
      <argument>Display validation constraints for classes</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.validator_debug"/>
    </service>
    <service id=".console.command.translation_pull.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>translation:pull</argument>
      <argument type="collection"/>
      <argument>Pull translations from a given provider.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.translation_pull"/>
    </service>
    <service id=".console.command.translation_push.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>translation:push</argument>
      <argument type="collection"/>
      <argument>Push translations to a given provider.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.translation_push"/>
    </service>
    <service id=".console.command.xliff_lint.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lint:xliff</argument>
      <argument type="collection"/>
      <argument>Lint an XLIFF file and outputs encountered errors</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.xliff_lint"/>
    </service>
    <service id=".console.command.yaml_lint.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lint:yaml</argument>
      <argument type="collection"/>
      <argument>Lint a YAML file and outputs encountered errors</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.yaml_lint"/>
    </service>
    <service id=".console.command.form_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:form</argument>
      <argument type="collection"/>
      <argument>Display form type information</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.form_debug"/>
    </service>
    <service id=".console.command.secrets_set.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:set</argument>
      <argument type="collection"/>
      <argument>Set a secret in the vault</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_set"/>
    </service>
    <service id=".console.command.secrets_remove.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:remove</argument>
      <argument type="collection"/>
      <argument>Remove a secret from the vault</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_remove"/>
    </service>
    <service id=".console.command.secrets_generate_key.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:generate-keys</argument>
      <argument type="collection"/>
      <argument>Generate new encryption keys</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_generate_key"/>
    </service>
    <service id=".console.command.secrets_list.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:list</argument>
      <argument type="collection"/>
      <argument>List all secrets</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_list"/>
    </service>
    <service id=".console.command.secrets_decrypt_to_local.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:decrypt-to-local</argument>
      <argument type="collection"/>
      <argument>Decrypt all secrets and stores them in the local vault</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_decrypt_to_local"/>
    </service>
    <service id=".console.command.secrets_encrypt_from_local.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:encrypt-from-local</argument>
      <argument type="collection"/>
      <argument>Encrypt all local secrets to the vault</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_encrypt_from_local"/>
    </service>
    <service id=".twig.command.debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:twig</argument>
      <argument type="collection"/>
      <argument>Show a list of twig functions, filters, globals and tests</argument>
      <argument>false</argument>
      <argument type="service_closure" id="twig.command.debug"/>
    </service>
    <service id=".twig.command.lint.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lint:twig</argument>
      <argument type="collection"/>
      <argument>Lint a Twig template and outputs encountered errors</argument>
      <argument>false</argument>
      <argument type="service_closure" id="twig.command.lint"/>
    </service>
    <service id=".var_dumper.command.server_dump.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>server:dump</argument>
      <argument type="collection"/>
      <argument>Start a dump server that collects and displays dumps in a single place</argument>
      <argument>false</argument>
      <argument type="service_closure" id="var_dumper.command.server_dump"/>
    </service>
    <service id=".monolog.command.server_log.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>server:log</argument>
      <argument type="collection"/>
      <argument>Start a log server that displays logs in real time</argument>
      <argument>false</argument>
      <argument type="service_closure" id="monolog.command.server_log"/>
    </service>
    <service id=".security.command.debug_firewall.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:firewall</argument>
      <argument type="collection"/>
      <argument>Display information about your security firewall(s)</argument>
      <argument>false</argument>
      <argument type="service_closure" id="security.command.debug_firewall"/>
    </service>
    <service id=".security.command.user_password_encoder.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>security:encode-password</argument>
      <argument type="collection"/>
      <argument>Encode a password</argument>
      <argument>false</argument>
      <argument type="service_closure" id="security.command.user_password_encoder"/>
    </service>
    <service id=".security.command.user_password_hash.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>security:hash-password</argument>
      <argument type="collection"/>
      <argument>Hash a user password</argument>
      <argument>false</argument>
      <argument type="service_closure" id="security.command.user_password_hash"/>
    </service>
    <service id=".maker.auto_command.make_auth.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:auth</argument>
      <argument type="collection"/>
      <argument>Creates a Guard authenticator of different flavors</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_auth"/>
    </service>
    <service id=".maker.auto_command.make_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:command</argument>
      <argument type="collection"/>
      <argument>Creates a new console command class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_command"/>
    </service>
    <service id=".maker.auto_command.make_twig_component.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:twig-component</argument>
      <argument type="collection"/>
      <argument>Creates a twig (or live) component</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_twig_component"/>
    </service>
    <service id=".maker.auto_command.make_controller.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:controller</argument>
      <argument type="collection"/>
      <argument>Creates a new controller class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_controller"/>
    </service>
    <service id=".maker.auto_command.make_crud.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:crud</argument>
      <argument type="collection"/>
      <argument>Creates CRUD for Doctrine entity class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_crud"/>
    </service>
    <service id=".maker.auto_command.make_docker_database.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:docker:database</argument>
      <argument type="collection"/>
      <argument>Adds a database container to your docker-compose.yaml file</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_docker_database"/>
    </service>
    <service id=".maker.auto_command.make_entity.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:entity</argument>
      <argument type="collection"/>
      <argument>Creates or updates a Doctrine entity class, and optionally an API Platform resource</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_entity"/>
    </service>
    <service id=".maker.auto_command.make_fixtures.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:fixtures</argument>
      <argument type="collection"/>
      <argument>Creates a new class to load Doctrine fixtures</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_fixtures"/>
    </service>
    <service id=".maker.auto_command.make_form.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:form</argument>
      <argument type="collection"/>
      <argument>Creates a new form class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_form"/>
    </service>
    <service id=".maker.auto_command.make_message.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:message</argument>
      <argument type="collection"/>
      <argument>Creates a new message and handler</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_message"/>
    </service>
    <service id=".maker.auto_command.make_messenger_middleware.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:messenger-middleware</argument>
      <argument type="collection"/>
      <argument>Creates a new messenger middleware</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_messenger_middleware"/>
    </service>
    <service id=".maker.auto_command.make_registration_form.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:registration-form</argument>
      <argument type="collection"/>
      <argument>Creates a new registration form system</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_registration_form"/>
    </service>
    <service id=".maker.auto_command.make_reset_password.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:reset-password</argument>
      <argument type="collection"/>
      <argument>Create controller, entity, and repositories for use with symfonycasts/reset-password-bundle</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_reset_password"/>
    </service>
    <service id=".maker.auto_command.make_serializer_encoder.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:serializer:encoder</argument>
      <argument type="collection"/>
      <argument>Creates a new serializer encoder class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_serializer_encoder"/>
    </service>
    <service id=".maker.auto_command.make_serializer_normalizer.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:serializer:normalizer</argument>
      <argument type="collection"/>
      <argument>Creates a new serializer normalizer class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_serializer_normalizer"/>
    </service>
    <service id=".maker.auto_command.make_subscriber.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:subscriber</argument>
      <argument type="collection"/>
      <argument>Creates a new event subscriber class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_subscriber"/>
    </service>
    <service id=".maker.auto_command.make_twig_extension.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:twig-extension</argument>
      <argument type="collection"/>
      <argument>Creates a new Twig extension with its runtime class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_twig_extension"/>
    </service>
    <service id=".maker.auto_command.make_test.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:test</argument>
      <argument type="collection">
        <argument>make:unit-test</argument>
        <argument>make:functional-test</argument>
      </argument>
      <argument>Creates a new test class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_test"/>
    </service>
    <service id=".maker.auto_command.make_validator.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:validator</argument>
      <argument type="collection"/>
      <argument>Creates a new validator and constraint class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_validator"/>
    </service>
    <service id=".maker.auto_command.make_voter.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:voter</argument>
      <argument type="collection"/>
      <argument>Creates a new security voter class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_voter"/>
    </service>
    <service id=".maker.auto_command.make_user.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:user</argument>
      <argument type="collection"/>
      <argument>Creates a new security user class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_user"/>
    </service>
    <service id=".maker.auto_command.make_migration.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:migration</argument>
      <argument type="collection"/>
      <argument>Creates a new migration based on database changes</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_migration"/>
    </service>
    <service id=".maker.auto_command.make_stimulus_controller.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:stimulus-controller</argument>
      <argument type="collection"/>
      <argument>Creates a new Stimulus controller</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_stimulus_controller"/>
    </service>
    <service id=".maker.auto_command.make_security_form_login.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:security:form-login</argument>
      <argument type="collection"/>
      <argument>Generate the code needed for the form_login authenticator</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_security_form_login"/>
    </service>
    <service id="console.command_loader" class="Symfony\Component\Console\CommandLoader\ContainerCommandLoader" public="true">
      <tag name="container.no_preload"/>
      <argument type="service" id=".service_locator.c3l_rMV"/>
      <argument type="collection">
        <argument key="about">console.command.about</argument>
        <argument key="assets:install">console.command.assets_install</argument>
        <argument key="cache:clear">console.command.cache_clear</argument>
        <argument key="cache:pool:clear">console.command.cache_pool_clear</argument>
        <argument key="cache:pool:prune">console.command.cache_pool_prune</argument>
        <argument key="cache:pool:delete">console.command.cache_pool_delete</argument>
        <argument key="cache:pool:list">console.command.cache_pool_list</argument>
        <argument key="cache:warmup">console.command.cache_warmup</argument>
        <argument key="debug:config">console.command.config_debug</argument>
        <argument key="config:dump-reference">console.command.config_dump_reference</argument>
        <argument key="debug:container">console.command.container_debug</argument>
        <argument key="lint:container">console.command.container_lint</argument>
        <argument key="debug:autowiring">console.command.debug_autowiring</argument>
        <argument key="debug:dotenv">console.command.dotenv_debug</argument>
        <argument key="debug:event-dispatcher">console.command.event_dispatcher_debug</argument>
        <argument key="debug:router">console.command.router_debug</argument>
        <argument key="router:match">console.command.router_match</argument>
        <argument key="debug:translation">console.command.translation_debug</argument>
        <argument key="translation:extract">console.command.translation_extract</argument>
        <argument key="translation:update">console.command.translation_extract</argument>
        <argument key="debug:validator">console.command.validator_debug</argument>
        <argument key="translation:pull">console.command.translation_pull</argument>
        <argument key="translation:push">console.command.translation_push</argument>
        <argument key="lint:xliff">console.command.xliff_lint</argument>
        <argument key="lint:yaml">console.command.yaml_lint</argument>
        <argument key="debug:form">console.command.form_debug</argument>
        <argument key="secrets:set">console.command.secrets_set</argument>
        <argument key="secrets:remove">console.command.secrets_remove</argument>
        <argument key="secrets:generate-keys">console.command.secrets_generate_key</argument>
        <argument key="secrets:list">console.command.secrets_list</argument>
        <argument key="secrets:decrypt-to-local">console.command.secrets_decrypt_to_local</argument>
        <argument key="secrets:encrypt-from-local">console.command.secrets_encrypt_from_local</argument>
        <argument key="doctrine:database:create">doctrine.database_create_command</argument>
        <argument key="doctrine:database:drop">doctrine.database_drop_command</argument>
        <argument key="doctrine:query:sql">doctrine.query_sql_command</argument>
        <argument key="dbal:run-sql">Doctrine\DBAL\Tools\Console\Command\RunSqlCommand</argument>
        <argument key="doctrine:database:import">doctrine.database_import_command</argument>
        <argument key="doctrine:cache:clear-metadata">doctrine.cache_clear_metadata_command</argument>
        <argument key="doctrine:cache:clear-query">doctrine.cache_clear_query_cache_command</argument>
        <argument key="doctrine:cache:clear-result">doctrine.cache_clear_result_command</argument>
        <argument key="doctrine:cache:clear-collection-region">doctrine.cache_collection_region_command</argument>
        <argument key="doctrine:mapping:convert">doctrine.mapping_convert_command</argument>
        <argument key="doctrine:schema:create">doctrine.schema_create_command</argument>
        <argument key="doctrine:schema:drop">doctrine.schema_drop_command</argument>
        <argument key="doctrine:ensure-production-settings">doctrine.ensure_production_settings_command</argument>
        <argument key="doctrine:cache:clear-entity-region">doctrine.clear_entity_region_command</argument>
        <argument key="doctrine:mapping:info">doctrine.mapping_info_command</argument>
        <argument key="doctrine:cache:clear-query-region">doctrine.clear_query_region_command</argument>
        <argument key="doctrine:query:dql">doctrine.query_dql_command</argument>
        <argument key="doctrine:schema:update">doctrine.schema_update_command</argument>
        <argument key="doctrine:schema:validate">doctrine.schema_validate_command</argument>
        <argument key="doctrine:mapping:import">doctrine.mapping_import_command</argument>
        <argument key="doctrine:fixtures:load">doctrine.fixtures_load_command</argument>
        <argument key="debug:twig">twig.command.debug</argument>
        <argument key="lint:twig">twig.command.lint</argument>
        <argument key="server:dump">var_dumper.command.server_dump</argument>
        <argument key="server:log">monolog.command.server_log</argument>
        <argument key="doctrine:migrations:diff">doctrine_migrations.diff_command</argument>
        <argument key="doctrine:migrations:dump-schema">doctrine_migrations.dump_schema_command</argument>
        <argument key="doctrine:migrations:execute">doctrine_migrations.execute_command</argument>
        <argument key="doctrine:migrations:generate">doctrine_migrations.generate_command</argument>
        <argument key="doctrine:migrations:latest">doctrine_migrations.latest_command</argument>
        <argument key="doctrine:migrations:migrate">doctrine_migrations.migrate_command</argument>
        <argument key="doctrine:migrations:rollup">doctrine_migrations.rollup_command</argument>
        <argument key="doctrine:migrations:status">doctrine_migrations.status_command</argument>
        <argument key="doctrine:migrations:up-to-date">doctrine_migrations.up_to_date_command</argument>
        <argument key="doctrine:migrations:version">doctrine_migrations.version_command</argument>
        <argument key="debug:firewall">security.command.debug_firewall</argument>
        <argument key="security:encode-password">security.command.user_password_encoder</argument>
        <argument key="security:hash-password">security.command.user_password_hash</argument>
        <argument key="debug:swiftmailer">swiftmailer.command.debug</argument>
        <argument key="swiftmailer:email:send">swiftmailer.command.new_email</argument>
        <argument key="swiftmailer:spool:send">swiftmailer.command.send_email</argument>
        <argument key="make:auth">maker.auto_command.make_auth</argument>
        <argument key="make:command">maker.auto_command.make_command</argument>
        <argument key="make:twig-component">maker.auto_command.make_twig_component</argument>
        <argument key="make:controller">maker.auto_command.make_controller</argument>
        <argument key="make:crud">maker.auto_command.make_crud</argument>
        <argument key="make:docker:database">maker.auto_command.make_docker_database</argument>
        <argument key="make:entity">maker.auto_command.make_entity</argument>
        <argument key="make:fixtures">maker.auto_command.make_fixtures</argument>
        <argument key="make:form">maker.auto_command.make_form</argument>
        <argument key="make:message">maker.auto_command.make_message</argument>
        <argument key="make:messenger-middleware">maker.auto_command.make_messenger_middleware</argument>
        <argument key="make:registration-form">maker.auto_command.make_registration_form</argument>
        <argument key="make:reset-password">maker.auto_command.make_reset_password</argument>
        <argument key="make:serializer:encoder">maker.auto_command.make_serializer_encoder</argument>
        <argument key="make:serializer:normalizer">maker.auto_command.make_serializer_normalizer</argument>
        <argument key="make:subscriber">maker.auto_command.make_subscriber</argument>
        <argument key="make:twig-extension">maker.auto_command.make_twig_extension</argument>
        <argument key="make:test">maker.auto_command.make_test</argument>
        <argument key="make:unit-test">maker.auto_command.make_test</argument>
        <argument key="make:functional-test">maker.auto_command.make_test</argument>
        <argument key="make:validator">maker.auto_command.make_validator</argument>
        <argument key="make:voter">maker.auto_command.make_voter</argument>
        <argument key="make:user">maker.auto_command.make_user</argument>
        <argument key="make:migration">maker.auto_command.make_migration</argument>
        <argument key="make:stimulus-controller">maker.auto_command.make_stimulus_controller</argument>
        <argument key="make:security:form-login">maker.auto_command.make_security_form_login</argument>
      </argument>
    </service>
    <service id=".service_locator.c3l_rMV" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="console.command.about" type="service_closure" id=".console.command.about.lazy"/>
        <argument key="console.command.assets_install" type="service_closure" id=".console.command.assets_install.lazy"/>
        <argument key="console.command.cache_clear" type="service_closure" id=".console.command.cache_clear.lazy"/>
        <argument key="console.command.cache_pool_clear" type="service_closure" id=".console.command.cache_pool_clear.lazy"/>
        <argument key="console.command.cache_pool_prune" type="service_closure" id=".console.command.cache_pool_prune.lazy"/>
        <argument key="console.command.cache_pool_delete" type="service_closure" id=".console.command.cache_pool_delete.lazy"/>
        <argument key="console.command.cache_pool_list" type="service_closure" id=".console.command.cache_pool_list.lazy"/>
        <argument key="console.command.cache_warmup" type="service_closure" id=".console.command.cache_warmup.lazy"/>
        <argument key="console.command.config_debug" type="service_closure" id=".console.command.config_debug.lazy"/>
        <argument key="console.command.config_dump_reference" type="service_closure" id=".console.command.config_dump_reference.lazy"/>
        <argument key="console.command.container_debug" type="service_closure" id=".console.command.container_debug.lazy"/>
        <argument key="console.command.container_lint" type="service_closure" id=".console.command.container_lint.lazy"/>
        <argument key="console.command.debug_autowiring" type="service_closure" id=".console.command.debug_autowiring.lazy"/>
        <argument key="console.command.dotenv_debug" type="service_closure" id=".console.command.dotenv_debug.lazy"/>
        <argument key="console.command.event_dispatcher_debug" type="service_closure" id=".console.command.event_dispatcher_debug.lazy"/>
        <argument key="console.command.router_debug" type="service_closure" id=".console.command.router_debug.lazy"/>
        <argument key="console.command.router_match" type="service_closure" id=".console.command.router_match.lazy"/>
        <argument key="console.command.translation_debug" type="service_closure" id=".console.command.translation_debug.lazy"/>
        <argument key="console.command.translation_extract" type="service_closure" id=".console.command.translation_extract.lazy"/>
        <argument key="console.command.validator_debug" type="service_closure" id=".console.command.validator_debug.lazy"/>
        <argument key="console.command.translation_pull" type="service_closure" id=".console.command.translation_pull.lazy"/>
        <argument key="console.command.translation_push" type="service_closure" id=".console.command.translation_push.lazy"/>
        <argument key="console.command.xliff_lint" type="service_closure" id=".console.command.xliff_lint.lazy"/>
        <argument key="console.command.yaml_lint" type="service_closure" id=".console.command.yaml_lint.lazy"/>
        <argument key="console.command.form_debug" type="service_closure" id=".console.command.form_debug.lazy"/>
        <argument key="console.command.secrets_set" type="service_closure" id=".console.command.secrets_set.lazy"/>
        <argument key="console.command.secrets_remove" type="service_closure" id=".console.command.secrets_remove.lazy"/>
        <argument key="console.command.secrets_generate_key" type="service_closure" id=".console.command.secrets_generate_key.lazy"/>
        <argument key="console.command.secrets_list" type="service_closure" id=".console.command.secrets_list.lazy"/>
        <argument key="console.command.secrets_decrypt_to_local" type="service_closure" id=".console.command.secrets_decrypt_to_local.lazy"/>
        <argument key="console.command.secrets_encrypt_from_local" type="service_closure" id=".console.command.secrets_encrypt_from_local.lazy"/>
        <argument key="doctrine.database_create_command" type="service_closure" id="doctrine.database_create_command"/>
        <argument key="doctrine.database_drop_command" type="service_closure" id="doctrine.database_drop_command"/>
        <argument key="doctrine.query_sql_command" type="service_closure" id="doctrine.query_sql_command"/>
        <argument key="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand" type="service_closure" id="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand"/>
        <argument key="doctrine.database_import_command" type="service_closure" id="doctrine.database_import_command"/>
        <argument key="doctrine.cache_clear_metadata_command" type="service_closure" id="doctrine.cache_clear_metadata_command"/>
        <argument key="doctrine.cache_clear_query_cache_command" type="service_closure" id="doctrine.cache_clear_query_cache_command"/>
        <argument key="doctrine.cache_clear_result_command" type="service_closure" id="doctrine.cache_clear_result_command"/>
        <argument key="doctrine.cache_collection_region_command" type="service_closure" id="doctrine.cache_collection_region_command"/>
        <argument key="doctrine.mapping_convert_command" type="service_closure" id="doctrine.mapping_convert_command"/>
        <argument key="doctrine.schema_create_command" type="service_closure" id="doctrine.schema_create_command"/>
        <argument key="doctrine.schema_drop_command" type="service_closure" id="doctrine.schema_drop_command"/>
        <argument key="doctrine.ensure_production_settings_command" type="service_closure" id="doctrine.ensure_production_settings_command"/>
        <argument key="doctrine.clear_entity_region_command" type="service_closure" id="doctrine.clear_entity_region_command"/>
        <argument key="doctrine.mapping_info_command" type="service_closure" id="doctrine.mapping_info_command"/>
        <argument key="doctrine.clear_query_region_command" type="service_closure" id="doctrine.clear_query_region_command"/>
        <argument key="doctrine.query_dql_command" type="service_closure" id="doctrine.query_dql_command"/>
        <argument key="doctrine.schema_update_command" type="service_closure" id="doctrine.schema_update_command"/>
        <argument key="doctrine.schema_validate_command" type="service_closure" id="doctrine.schema_validate_command"/>
        <argument key="doctrine.mapping_import_command" type="service_closure" id="doctrine.mapping_import_command"/>
        <argument key="doctrine.fixtures_load_command" type="service_closure" id="doctrine.fixtures_load_command"/>
        <argument key="twig.command.debug" type="service_closure" id=".twig.command.debug.lazy"/>
        <argument key="twig.command.lint" type="service_closure" id=".twig.command.lint.lazy"/>
        <argument key="var_dumper.command.server_dump" type="service_closure" id=".var_dumper.command.server_dump.lazy"/>
        <argument key="monolog.command.server_log" type="service_closure" id=".monolog.command.server_log.lazy"/>
        <argument key="doctrine_migrations.diff_command" type="service_closure" id="doctrine_migrations.diff_command"/>
        <argument key="doctrine_migrations.dump_schema_command" type="service_closure" id="doctrine_migrations.dump_schema_command"/>
        <argument key="doctrine_migrations.execute_command" type="service_closure" id="doctrine_migrations.execute_command"/>
        <argument key="doctrine_migrations.generate_command" type="service_closure" id="doctrine_migrations.generate_command"/>
        <argument key="doctrine_migrations.latest_command" type="service_closure" id="doctrine_migrations.latest_command"/>
        <argument key="doctrine_migrations.migrate_command" type="service_closure" id="doctrine_migrations.migrate_command"/>
        <argument key="doctrine_migrations.rollup_command" type="service_closure" id="doctrine_migrations.rollup_command"/>
        <argument key="doctrine_migrations.status_command" type="service_closure" id="doctrine_migrations.status_command"/>
        <argument key="doctrine_migrations.up_to_date_command" type="service_closure" id="doctrine_migrations.up_to_date_command"/>
        <argument key="doctrine_migrations.version_command" type="service_closure" id="doctrine_migrations.version_command"/>
        <argument key="security.command.debug_firewall" type="service_closure" id=".security.command.debug_firewall.lazy"/>
        <argument key="security.command.user_password_encoder" type="service_closure" id=".security.command.user_password_encoder.lazy"/>
        <argument key="security.command.user_password_hash" type="service_closure" id=".security.command.user_password_hash.lazy"/>
        <argument key="swiftmailer.command.debug" type="service_closure" id="swiftmailer.command.debug"/>
        <argument key="swiftmailer.command.new_email" type="service_closure" id="swiftmailer.command.new_email"/>
        <argument key="swiftmailer.command.send_email" type="service_closure" id="swiftmailer.command.send_email"/>
        <argument key="maker.auto_command.make_auth" type="service_closure" id=".maker.auto_command.make_auth.lazy"/>
        <argument key="maker.auto_command.make_command" type="service_closure" id=".maker.auto_command.make_command.lazy"/>
        <argument key="maker.auto_command.make_twig_component" type="service_closure" id=".maker.auto_command.make_twig_component.lazy"/>
        <argument key="maker.auto_command.make_controller" type="service_closure" id=".maker.auto_command.make_controller.lazy"/>
        <argument key="maker.auto_command.make_crud" type="service_closure" id=".maker.auto_command.make_crud.lazy"/>
        <argument key="maker.auto_command.make_docker_database" type="service_closure" id=".maker.auto_command.make_docker_database.lazy"/>
        <argument key="maker.auto_command.make_entity" type="service_closure" id=".maker.auto_command.make_entity.lazy"/>
        <argument key="maker.auto_command.make_fixtures" type="service_closure" id=".maker.auto_command.make_fixtures.lazy"/>
        <argument key="maker.auto_command.make_form" type="service_closure" id=".maker.auto_command.make_form.lazy"/>
        <argument key="maker.auto_command.make_message" type="service_closure" id=".maker.auto_command.make_message.lazy"/>
        <argument key="maker.auto_command.make_messenger_middleware" type="service_closure" id=".maker.auto_command.make_messenger_middleware.lazy"/>
        <argument key="maker.auto_command.make_registration_form" type="service_closure" id=".maker.auto_command.make_registration_form.lazy"/>
        <argument key="maker.auto_command.make_reset_password" type="service_closure" id=".maker.auto_command.make_reset_password.lazy"/>
        <argument key="maker.auto_command.make_serializer_encoder" type="service_closure" id=".maker.auto_command.make_serializer_encoder.lazy"/>
        <argument key="maker.auto_command.make_serializer_normalizer" type="service_closure" id=".maker.auto_command.make_serializer_normalizer.lazy"/>
        <argument key="maker.auto_command.make_subscriber" type="service_closure" id=".maker.auto_command.make_subscriber.lazy"/>
        <argument key="maker.auto_command.make_twig_extension" type="service_closure" id=".maker.auto_command.make_twig_extension.lazy"/>
        <argument key="maker.auto_command.make_test" type="service_closure" id=".maker.auto_command.make_test.lazy"/>
        <argument key="maker.auto_command.make_validator" type="service_closure" id=".maker.auto_command.make_validator.lazy"/>
        <argument key="maker.auto_command.make_voter" type="service_closure" id=".maker.auto_command.make_voter.lazy"/>
        <argument key="maker.auto_command.make_user" type="service_closure" id=".maker.auto_command.make_user.lazy"/>
        <argument key="maker.auto_command.make_migration" type="service_closure" id=".maker.auto_command.make_migration.lazy"/>
        <argument key="maker.auto_command.make_stimulus_controller" type="service_closure" id=".maker.auto_command.make_stimulus_controller.lazy"/>
        <argument key="maker.auto_command.make_security_form_login" type="service_closure" id=".maker.auto_command.make_security_form_login.lazy"/>
      </argument>
    </service>
    <service id="cache.app.recorder_inner" class="Symfony\Component\Cache\Adapter\FilesystemAdapter">
      <argument>ml5MOKch2l</argument>
      <argument>0</argument>
      <argument>/home/maksim/Desktop/uvdesk/var/cache/dev/pools/app</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.system.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>-U2lxvLxXX</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/maksim/Desktop/uvdesk/var/cache/dev/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.validator.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>ILVc3+DX3d</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/maksim/Desktop/uvdesk/var/cache/dev/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.serializer.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>B56hs1yhpb</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/maksim/Desktop/uvdesk/var/cache/dev/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.annotations.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>8w1bRS1SDJ</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/maksim/Desktop/uvdesk/var/cache/dev/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.property_info.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>-yvmSjfrdl</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/maksim/Desktop/uvdesk/var/cache/dev/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.validator_expression_language.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>B4QFeQfJ-u</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/maksim/Desktop/uvdesk/var/cache/dev/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.doctrine.orm.default.result.recorder_inner" class="Symfony\Component\Cache\Adapter\ArrayAdapter"/>
    <service id="cache.doctrine.orm.default.query.recorder_inner" class="Symfony\Component\Cache\Adapter\ArrayAdapter"/>
    <service id="cache.security_expression_language.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>iohkXYv+hi</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/maksim/Desktop/uvdesk/var/cache/dev/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id=".service_locator.pTeli0u" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Symfony\Bridge\Twig\Extension\CsrfRuntime" type="service_closure" id="twig.runtime.security_csrf"/>
        <argument key="Symfony\Bridge\Twig\Extension\HttpKernelRuntime" type="service_closure" id="twig.runtime.httpkernel"/>
        <argument key="Symfony\Bridge\Twig\Extension\SerializerRuntime" type="service_closure" id="twig.runtime.serializer"/>
        <argument key="Symfony\Component\Form\FormRenderer" type="service_closure" id="twig.form.renderer"/>
      </argument>
    </service>
    <service id="Psr\Container\ContainerInterface" alias="service_container">
      <deprecated package="symfony/dependency-injection" version="5.1">The "%alias_id%" autowiring alias is deprecated. Define it explicitly in your app if you want to keep using it.</deprecated>
    </service>
    <service id="Symfony\Component\DependencyInjection\ContainerInterface" alias="service_container">
      <deprecated package="symfony/dependency-injection" version="5.1">The "%alias_id%" autowiring alias is deprecated. Define it explicitly in your app if you want to keep using it.</deprecated>
    </service>
    <service id="App\Kernel" alias="kernel" public="true"/>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Definition\RouterInterface" alias="Webkul\UVDesk\CoreFrameworkBundle\Definition\RouteLoader"/>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Definition\RoutingResourceInterface" alias="Webkul\UVDesk\CoreFrameworkBundle\Routing\RoutingResource"/>
    <service id="Webkul\UVDesk\CoreFrameworkBundle\Tickets\QuickActionButtonInterface" alias="Webkul\UVDesk\CoreFrameworkBundle\UIComponents\Ticket\QuickActionButtons\SavedReplies"/>
    <service id="uvdesk.service" alias="Webkul\UVDesk\CoreFrameworkBundle\Services\UVDeskService" public="true"/>
    <service id="user.provider" alias="Webkul\UVDesk\CoreFrameworkBundle\Providers\UserProvider" public="true"/>
    <service id="user.service" alias="Webkul\UVDesk\CoreFrameworkBundle\Services\UserService" public="true"/>
    <service id="email.service" alias="Webkul\UVDesk\CoreFrameworkBundle\Services\EmailService" public="true"/>
    <service id="ticket.service" alias="Webkul\UVDesk\CoreFrameworkBundle\Services\TicketService" public="true"/>
    <service id="recaptcha.service" alias="Webkul\UVDesk\CoreFrameworkBundle\Services\ReCaptchaService" public="true"/>
    <service id="report.service" alias="Webkul\UVDesk\CoreFrameworkBundle\Services\ReportService" public="true"/>
    <service id="validation.service" alias="Webkul\UVDesk\CoreFrameworkBundle\Services\ValidationService" public="true"/>
    <service id="uvdesk.core.file_system.service" alias="Webkul\UVDesk\CoreFrameworkBundle\FileSystem\FileSystem" public="true"/>
    <service id="swiftmailer.service" alias="Webkul\UVDesk\CoreFrameworkBundle\SwiftMailer\SwiftMailer" public="true"/>
    <service id="uvdesk.core.event_dispatcher" alias="Webkul\UVDesk\CoreFrameworkBundle\Framework\EventDispatcher" public="true"/>
    <service id="uvdesk.extensibles" alias="Webkul\UVDesk\CoreFrameworkBundle\Framework\ExtendableComponentManager" public="true"/>
    <service id="uvdesk.automations.workflows" alias="Webkul\UVDesk\AutomationBundle\EventListener\WorkflowListener" public="true"/>
    <service id="uvdesk.automations.prepared_responses" alias="Webkul\UVDesk\AutomationBundle\EventListener\PreparedResponseListener" public="true"/>
    <service id="uvdesk_extension.twig_loader" alias="twig.loader.native_filesystem" public="true"/>
    <service id="uvdesk_extension.assets_manager" alias="assets.packages" public="true"/>
    <service id="Webkul\UVDesk\MailboxBundle\Utils\IMAP\Transport\AppTransportConfigurationInterface" alias="Webkul\UVDesk\MailboxBundle\Utils\IMAP\Transport\Type\OutlookModernAuth"/>
    <service id="Webkul\UVDesk\MailboxBundle\Utils\IMAP\Transport\DefaultTransportConfigurationInterface" alias="Webkul\UVDesk\MailboxBundle\Utils\IMAP\Transport\Type\IMAP"/>
    <service id="Webkul\UVDesk\MailboxBundle\Utils\IMAP\Transport\SimpleTransportConfigurationInterface" alias="Webkul\UVDesk\MailboxBundle\Utils\IMAP\Transport\Type\Webhook"/>
    <service id="Webkul\UVDesk\MailboxBundle\Utils\Imap\CustomConfigurationInterface" alias="Webkul\UVDesk\MailboxBundle\Utils\Imap\Transport\Custom"/>
    <service id="Webkul\UVDesk\MailboxBundle\Utils\SMTP\Transport\AppTransportConfigurationInterface" alias="Webkul\UVDesk\MailboxBundle\Utils\SMTP\Transport\Type\OutlookModernAuth"/>
    <service id="Webkul\UVDesk\MailboxBundle\Utils\SMTP\Transport\DefaultTransportConfigurationInterface" alias="Webkul\UVDesk\MailboxBundle\Utils\SMTP\Transport\Type\SMTP"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ContainerBagInterface" alias="parameter_bag"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface" alias="parameter_bag"/>
    <service id="Symfony\Component\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher"/>
    <service id="Symfony\Contracts\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher"/>
    <service id="Symfony\Component\HttpKernel\HttpKernelInterface" alias="http_kernel"/>
    <service id="Symfony\Component\HttpFoundation\RequestStack" alias="request_stack"/>
    <service id="Symfony\Component\HttpKernel\HttpCache\StoreInterface" alias="http_cache.store"/>
    <service id="Symfony\Component\HttpFoundation\UrlHelper" alias="url_helper"/>
    <service id="Symfony\Component\HttpKernel\KernelInterface" alias="kernel"/>
    <service id="Symfony\Component\Filesystem\Filesystem" alias="filesystem"/>
    <service id="Symfony\Component\HttpKernel\Config\FileLocator" alias="file_locator"/>
    <service id="Symfony\Component\HttpKernel\UriSigner" alias="uri_signer"/>
    <service id="Symfony\Component\DependencyInjection\ReverseContainer" alias="reverse_container"/>
    <service id="Symfony\Component\String\Slugger\SluggerInterface" alias="slugger"/>
    <service id="Symfony\Component\HttpKernel\Fragment\FragmentUriGeneratorInterface" alias="fragment.uri_generator"/>
    <service id="error_renderer.html" alias="twig.error_renderer.html"/>
    <service id="error_renderer" alias="error_handler.error_renderer.serializer"/>
    <service id="Psr\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher"/>
    <service id="Psr\Container\ContainerInterface $parameterBag" alias="parameter_bag"/>
    <service id="cache.app_clearer" alias="cache.default_clearer" public="true"/>
    <service id="Psr\Cache\CacheItemPoolInterface" alias="cache.app"/>
    <service id="Symfony\Component\Cache\Adapter\AdapterInterface" alias="cache.app">
      <deprecated package="symfony/framework-bundle" version="5.4">The "%alias_id%" alias is deprecated, use "Psr\Cache\CacheItemPoolInterface" instead.</deprecated>
    </service>
    <service id="Symfony\Contracts\Cache\CacheInterface" alias="cache.app"/>
    <service id="Symfony\Contracts\Cache\TagAwareCacheInterface" alias="cache.app.taggable"/>
    <service id="Symfony\Contracts\Translation\TranslatorInterface" alias="translator.data_collector"/>
    <service id="Symfony\Component\Asset\Packages" alias="assets.packages"/>
    <service id="Symfony\Contracts\HttpClient\HttpClientInterface" alias=".debug.http_client"/>
    <service id="mailer" alias="swiftmailer.mailer.default" public="true"/>
    <service id="Symfony\Component\Mailer\MailerInterface" alias="mailer.mailer"/>
    <service id="Symfony\Component\Mailer\Transport\TransportInterface" alias="mailer.default_transport"/>
    <service id="mailer.logger_message_listener" alias="mailer.message_logger_listener">
      <deprecated package="symfony/framework-bundle" version="5.2">The "%alias_id%" alias is deprecated, use "mailer.message_logger_listener" instead.</deprecated>
    </service>
    <service id="Symfony\Component\Translation\Reader\TranslationReaderInterface" alias="translation.reader"/>
    <service id="Symfony\Component\Translation\Extractor\ExtractorInterface" alias="translation.extractor"/>
    <service id="Symfony\Component\Translation\Writer\TranslationWriterInterface" alias="translation.writer"/>
    <service id="translator" alias="translator.data_collector" public="true"/>
    <service id="translator.formatter" alias="translator.formatter.default"/>
    <service id="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" alias="debug.file_link_formatter"/>
    <service id="Symfony\Component\Stopwatch\Stopwatch" alias="debug.stopwatch"/>
    <service id="router" alias="router.default" public="true"/>
    <service id="Symfony\Component\Routing\RouterInterface" alias="router.default"/>
    <service id="Symfony\Component\Routing\Generator\UrlGeneratorInterface" alias="router.default"/>
    <service id="Symfony\Component\Routing\Matcher\UrlMatcherInterface" alias="router.default"/>
    <service id="Symfony\Component\Routing\RequestContextAwareInterface" alias="router.default"/>
    <service id="Symfony\Component\Routing\RequestContext" alias="router.request_context"/>
    <service id="annotation_reader" alias="annotations.cached_reader"/>
    <service id="Doctrine\Common\Annotations\Reader" alias="annotations.cached_reader"/>
    <service id="Symfony\Component\PropertyAccess\PropertyAccessorInterface" alias="property_accessor"/>
    <service id="Symfony\Component\Serializer\SerializerInterface" alias="serializer"/>
    <service id="Symfony\Component\Serializer\Normalizer\NormalizerInterface" alias="serializer"/>
    <service id="Symfony\Component\Serializer\Normalizer\DenormalizerInterface" alias="serializer"/>
    <service id="Symfony\Component\Serializer\Encoder\EncoderInterface" alias="serializer"/>
    <service id="Symfony\Component\Serializer\Encoder\DecoderInterface" alias="serializer"/>
    <service id="serializer.property_accessor" alias="property_accessor"/>
    <service id="Symfony\Component\Serializer\Mapping\ClassDiscriminatorResolverInterface" alias="serializer.mapping.class_discriminator_resolver"/>
    <service id="Symfony\Component\Serializer\Normalizer\ObjectNormalizer" alias="serializer.normalizer.object"/>
    <service id="Symfony\Component\Serializer\Normalizer\PropertyNormalizer" alias="serializer.normalizer.property"/>
    <service id="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactoryInterface" alias="serializer.mapping.class_metadata_factory"/>
    <service id="error_renderer.serializer" alias="error_handler.error_renderer.serializer"/>
    <service id="Symfony\Component\PropertyInfo\PropertyAccessExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyDescriptionExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyInfoExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyTypeExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyListExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyInitializableExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyReadInfoExtractorInterface" alias="property_info.reflection_extractor"/>
    <service id="Symfony\Component\PropertyInfo\PropertyWriteInfoExtractorInterface" alias="property_info.reflection_extractor"/>
    <service id="cache.default_redis_provider" alias=".cache_connection.GD_MSZC"/>
    <service id="cache.default_memcached_provider" alias=".cache_connection.JKE6keX"/>
    <service id="cache.default_doctrine_dbal_provider" alias="doctrine.dbal.default_connection"/>
    <service id="cache.default_pdo_provider" alias="doctrine.dbal.default_connection"/>
    <service id="Symfony\Component\HttpFoundation\Session\SessionInterface" alias=".session.do-not-use">
      <deprecated package="symfony/framework-bundle" version="5.3">The "%alias_id%" and "SessionInterface" aliases are deprecated, use "$requestStack-&gt;getSession()" instead.</deprecated>
    </service>
    <service id="SessionHandlerInterface" alias="session.handler.native"/>
    <service id="Symfony\Component\HttpFoundation\Session\Flash\FlashBagInterface" alias="session.flash_bag"/>
    <service id="session.storage.factory" alias="session.storage.factory.native"/>
    <service id="session.handler" alias="session.handler.native"/>
    <service id="Symfony\Component\Security\Csrf\TokenGenerator\TokenGeneratorInterface" alias="security.csrf.token_generator"/>
    <service id="Symfony\Component\Security\Csrf\TokenStorage\TokenStorageInterface" alias="security.csrf.token_storage"/>
    <service id="Symfony\Component\Security\Csrf\CsrfTokenManagerInterface" alias="security.csrf.token_manager"/>
    <service id="Symfony\Component\Form\ResolvedFormTypeFactoryInterface" alias="form.resolved_type_factory"/>
    <service id="Symfony\Component\Form\FormRegistryInterface" alias="form.registry"/>
    <service id="Symfony\Component\Form\FormFactoryInterface" alias="form.factory"/>
    <service id="form.property_accessor" alias="property_accessor"/>
    <service id="form.choice_list_factory" alias="form.choice_list_factory.cached"/>
    <service id="Symfony\Component\Validator\Validator\ValidatorInterface" alias="debug.validator"/>
    <service id="validator.mapping.class_metadata_factory" alias="debug.validator"/>
    <service id="Symfony\Component\Notifier\NotifierInterface" alias="notifier"/>
    <service id="Symfony\Component\Mime\MimeTypesInterface" alias="mime_types"/>
    <service id="Symfony\Component\Mime\MimeTypeGuesserInterface" alias="mime_types"/>
    <service id="Doctrine\DBAL\Driver\Connection" alias="doctrine.dbal.default_connection"/>
    <service id="Doctrine\DBAL\Connection" alias="doctrine.dbal.default_connection"/>
    <service id="Doctrine\Persistence\ManagerRegistry" alias="doctrine"/>
    <service id="Doctrine\Common\Persistence\ManagerRegistry" alias="doctrine"/>
    <service id="database_connection" alias="doctrine.dbal.default_connection" public="true"/>
    <service id="doctrine.dbal.event_manager" alias="doctrine.dbal.default_connection.event_manager"/>
    <service id="Doctrine\DBAL\Connection $defaultConnection" alias="doctrine.dbal.default_connection"/>
    <service id="Doctrine\ORM\EntityManagerInterface" alias="doctrine.orm.default_entity_manager"/>
    <service id="doctrine.orm.metadata.annotation_reader" alias="annotations.cached_reader"/>
    <service id="doctrine.orm.entity_manager" alias="doctrine.orm.default_entity_manager" public="true"/>
    <service id="doctrine.orm.default_metadata_cache" alias="cache.doctrine.orm.default.metadata"/>
    <service id="doctrine.orm.default_result_cache" alias="cache.doctrine.orm.default.result"/>
    <service id="doctrine.orm.default_query_cache" alias="cache.doctrine.orm.default.query"/>
    <service id="Doctrine\ORM\EntityManagerInterface $defaultEntityManager" alias="doctrine.orm.default_entity_manager"/>
    <service id="doctrine.orm.default_entity_manager.event_manager" alias="doctrine.dbal.default_connection.event_manager"/>
    <service id="Knp\Component\Pager\PaginatorInterface" alias="knp_paginator"/>
    <service id="sensio_framework_extra.converter.doctrine.orm.expression_language" alias="sensio_framework_extra.converter.doctrine.orm.expression_language.default"/>
    <service id="sensio_framework_extra.security.expression_language" alias="sensio_framework_extra.security.expression_language.default"/>
    <service id="Twig_Environment" alias="twig"/>
    <service id="Twig\Environment" alias="twig"/>
    <service id="logger" alias="monolog.logger"/>
    <service id="Psr\Log\LoggerInterface" alias="monolog.logger"/>
    <service id="Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface" alias="security.authorization_checker"/>
    <service id="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface" alias="security.token_storage"/>
    <service id="Symfony\Component\Security\Core\Security" alias="security.helper"/>
    <service id="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategyInterface" alias="security.authentication.session_strategy"/>
    <service id="security.encoder_factory" alias="security.encoder_factory.generic">
      <deprecated package="symfony/security-bundle" version="5.3">The "%alias_id%" service is deprecated, use "security.password_hasher_factory" instead.</deprecated>
    </service>
    <service id="Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" alias="security.encoder_factory.generic"/>
    <service id="security.password_encoder" alias="security.user_password_encoder.generic" public="true">
      <deprecated package="symfony/security-bundle" version="5.3">The "%alias_id%" service is deprecated, use "security.password_hasher"" instead.</deprecated>
    </service>
    <service id="Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface" alias="security.user_password_encoder.generic"/>
    <service id="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" alias="security.authentication_utils"/>
    <service id="Symfony\Component\Security\Core\Authorization\AccessDecisionManagerInterface" alias="debug.security.access.decision_manager"/>
    <service id="Symfony\Component\Security\Core\Role\RoleHierarchyInterface" alias="security.role_hierarchy"/>
    <service id="Symfony\Component\Security\Http\Firewall" alias="debug.security.firewall"/>
    <service id="Symfony\Component\Security\Http\FirewallMapInterface" alias="security.firewall.map"/>
    <service id="Symfony\Component\Security\Http\HttpUtils" alias="security.http_utils"/>
    <service id="Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactoryInterface" alias="security.password_hasher_factory"/>
    <service id="security.password_hasher" alias="security.user_password_hasher"/>
    <service id="Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface" alias="security.user_password_hasher"/>
    <service id="Symfony\Component\Security\Core\Authentication\AuthenticationManagerInterface" alias="security.authentication.manager">
      <deprecated package="symfony/security-bundle" version="5.3">The "%alias_id%" alias is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="Symfony\Component\Security\Guard\GuardAuthenticatorHandler" alias="security.authentication.guard_handler">
      <deprecated package="symfony/security-bundle" version="5.3">The "%alias_id%" alias is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.firewall" alias="debug.security.firewall"/>
    <service id="security.user.provider.concrete.user_provider" alias="Webkul\UVDesk\CoreFrameworkBundle\Providers\UserProvider"/>
    <service id="security.user.provider.concrete.api_user_provider" alias="Webkul\UVDesk\ApiBundle\Providers\ApiCredentials"/>
    <service id="security.authentication.session_strategy.back_support" alias="security.authentication.session_strategy"/>
    <service id="security.user_checker.back_support" alias="security.user_checker"/>
    <service id="security.authentication.session_strategy.uvdesk_api" alias="security.authentication.session_strategy"/>
    <service id="security.user_checker.uvdesk_api" alias="security.user_checker"/>
    <service id="security.authentication.session_strategy.customer" alias="security.authentication.session_strategy"/>
    <service id="security.user_checker.customer" alias="security.user_checker"/>
    <service id="security.firewall.context_locator" alias=".service_locator.Y0rYR9K"/>
    <service id="Symfony\Component\Security\Core\User\UserCheckerInterface" alias="security.user_checker"/>
    <service id="swiftmailer.mailer.default.transport" alias="swiftmailer.mailer.default.transport.spool"/>
    <service id="swiftmailer.mailer.default.spool" alias="swiftmailer.mailer.default.spool.memory"/>
    <service id="swiftmailer.mailer.default.transport.real" alias="swiftmailer.mailer.default.transport.dynamic" public="true"/>
    <service id="swiftmailer.spool" alias="swiftmailer.mailer.default.spool.memory"/>
    <service id="swiftmailer.transport.real" alias="swiftmailer.mailer.default.transport.dynamic"/>
    <service id="Swift_Spool" alias="swiftmailer.mailer.default.spool.memory"/>
    <service id="swiftmailer.plugin.messagelogger" alias="swiftmailer.mailer.default.plugin.messagelogger"/>
    <service id="swiftmailer.mailer" alias="swiftmailer.mailer.default"/>
    <service id="swiftmailer.transport" alias="swiftmailer.mailer.default.transport.spool" public="true"/>
    <service id="Swift_Mailer" alias="swiftmailer.mailer.default"/>
    <service id="Swift_Transport" alias="swiftmailer.mailer.default.transport.spool"/>
    <service id="container.env_var_processors_locator" alias=".service_locator.gSv9zYw" public="true"/>
    <service id="twig.loader.filesystem" alias="twig.loader.native_filesystem"/>
    <service id="argument_resolver.controller_locator" alias=".service_locator.9No.Nxb"/>
    <service id="session" alias=".session.do-not-use" public="true">
      <deprecated package="symfony/framework-bundle" version="5.3">The "%alias_id%" service and "SessionInterface" alias are deprecated, use "$requestStack-&gt;getSession()" instead.</deprecated>
    </service>
    <service id="doctrine.id_generator_locator" alias=".service_locator.KLVvNIq"/>
    <service id="twig.loader" alias="twig.loader.native_filesystem"/>
    <service id="Psr\Log\LoggerInterface $requestLogger" alias="monolog.logger.request"/>
    <service id="Psr\Log\LoggerInterface $consoleLogger" alias="monolog.logger.console"/>
    <service id="Psr\Log\LoggerInterface $cacheLogger" alias="monolog.logger.cache"/>
    <service id="Psr\Log\LoggerInterface $httpClientLogger" alias="monolog.logger.http_client"/>
    <service id="Psr\Log\LoggerInterface $mailerLogger" alias="monolog.logger.mailer"/>
    <service id="Psr\Log\LoggerInterface $translationLogger" alias="monolog.logger.translation"/>
    <service id="Psr\Log\LoggerInterface $phpLogger" alias="monolog.logger.php"/>
    <service id="Psr\Log\LoggerInterface $eventLogger" alias="monolog.logger.event"/>
    <service id="Psr\Log\LoggerInterface $routerLogger" alias="monolog.logger.router"/>
    <service id="Psr\Log\LoggerInterface $profilerLogger" alias="monolog.logger.profiler"/>
    <service id="Psr\Log\LoggerInterface $doctrineLogger" alias="monolog.logger.doctrine"/>
    <service id="Psr\Log\LoggerInterface $debugLogger" alias="monolog.logger.debug"/>
    <service id="Psr\Log\LoggerInterface $securityLogger" alias="monolog.logger.security"/>
    <service id="Psr\Log\LoggerInterface $deprecationLogger" alias="monolog.logger.deprecation"/>
    <service id=".service_locator.NIIYWXs" alias=".service_locator.Y0rYR9K"/>
    <service id=".service_locator.0GV1BZZ" alias=".service_locator.gSv9zYw"/>
    <service id=".service_locator.hQMHQbm" alias=".service_locator.mwdcwjc"/>
    <service id=".service_locator.uS93F_j" alias=".service_locator.VzninxD"/>
    <service id=".service_locator.h7MtBfn" alias=".service_locator.1hkzPeN"/>
    <service id=".service_locator.Qaw3EmU" alias=".service_locator.vuNdeAY"/>
    <service id=".service_locator.9JhKvtx" alias=".service_locator.cWYmD9L"/>
    <service id=".service_locator.JPZJTHP" alias=".service_locator.2jqOiLn"/>
    <service id=".service_locator.8KKkZtp" alias=".service_locator.DLRxWCH"/>
    <service id=".service_locator.Qpmzlc4" alias=".service_locator.xV8zwpH"/>
    <service id=".service_locator.EIqIFBo" alias=".service_locator.9No.Nxb"/>
    <service id=".service_locator.wKF4yn1" alias=".service_locator.19_mNxd"/>
    <service id=".service_locator.PD7p..X" alias=".service_locator.X9CzMyE"/>
    <service id=".service_locator.LaDDee0" alias=".service_locator.GYNkv9O"/>
    <service id=".service_locator.UrwqDxA" alias=".service_locator.du0z04N"/>
    <service id=".service_locator.O24_MAy" alias=".service_locator.yY.p4P7"/>
    <service id=".service_locator.0ghLsew" alias=".service_locator.mx0UMmY"/>
    <service id="validator" alias="debug.validator" public="true"/>
    <service id="http_client" alias=".debug.http_client"/>
    <service id="event_dispatcher" alias="debug.event_dispatcher" public="true"/>
    <service id="controller_resolver" alias="debug.controller_resolver"/>
    <service id="argument_resolver" alias="debug.argument_resolver"/>
    <service id="translator.data_collector.inner" alias="translator.default"/>
    <service id="twig.error_renderer.html.inner" alias="error_handler.error_renderer.html"/>
    <service id="var_dumper.cli_dumper" alias="var_dumper.contextualized_cli_dumper"/>
    <service id="security.access.decision_manager" alias="debug.security.access.decision_manager"/>
    <service id="argument_resolver.request_attribute" alias="debug.argument_resolver.request_attribute"/>
    <service id="argument_resolver.request" alias="debug.argument_resolver.request"/>
    <service id="argument_resolver.session" alias="debug.argument_resolver.session"/>
    <service id="security.user_value_resolver" alias="debug.security.user_value_resolver"/>
    <service id="argument_resolver.service" alias="debug.argument_resolver.service"/>
    <service id="argument_resolver.default" alias="debug.argument_resolver.default"/>
    <service id="argument_resolver.variadic" alias="debug.argument_resolver.variadic"/>
    <service id="argument_resolver.not_tagged_controller" alias="debug.argument_resolver.not_tagged_controller"/>
    <service id="doctrine.orm.default_metadata_driver" alias=".doctrine.orm.default_metadata_driver"/>
    <service id=".service_locator.uo5c0SP" alias=".service_locator.xUrKPVU"/>
    <service id=".service_locator.i.SqCHf" alias=".service_locator.CctwNnK"/>
    <service id=".service_locator.4Nh8kgC" alias=".service_locator.6H7qA2B"/>
    <service id=".service_locator.CBTsee1" alias=".service_locator.Isyi.eu"/>
    <service id=".service_locator.gTwWGk8" alias=".service_locator.r23Vwnj"/>
    <service id=".service_locator.XCqo1vv" alias=".service_locator.hsfYii4"/>
    <service id=".service_locator.a.pz9i4" alias=".service_locator.H_5dZOt"/>
    <service id=".service_locator.UmiWvPt" alias=".service_locator.AqqXaUO"/>
    <service id=".service_locator.pdXyIZC" alias=".service_locator.mwdcwjc"/>
    <service id=".service_locator.f7RtyER" alias=".service_locator.VzninxD"/>
    <service id=".service_locator.v7jGkXQ" alias=".service_locator.XWDbXBG"/>
    <service id=".service_locator.TJrEKW1" alias=".service_locator.ZPQH3Ui"/>
    <service id=".service_locator.crpXrSP" alias=".service_locator.rhm0r3z"/>
    <service id=".service_locator.426yQGu" alias=".service_locator.q2ji3lu"/>
    <service id=".service_locator.WIuarWK" alias=".service_locator.1hkzPeN"/>
    <service id=".service_locator.BwXY0s0" alias=".service_locator.UToq_Ob"/>
    <service id=".service_locator.uRr83CS" alias=".service_locator.LwcGnq5"/>
    <service id=".service_locator.fJ37Ocl" alias=".service_locator.qgIdpU1"/>
    <service id=".service_locator.wRjsWki" alias=".service_locator.vuNdeAY"/>
    <service id=".service_locator.0rMfnkx" alias=".service_locator.diu05Wv"/>
    <service id=".service_locator.bInR.ll" alias=".service_locator.aKM6MDa"/>
    <service id=".service_locator.Q4WLQ4k" alias=".service_locator.93GkAao"/>
    <service id=".service_locator.3hIBeXR" alias=".service_locator.cWYmD9L"/>
    <service id=".service_locator.EoAz0fd" alias=".service_locator.2jqOiLn"/>
    <service id=".service_locator.LLPVLb8" alias=".service_locator.DLRxWCH"/>
    <service id=".service_locator.8GlIdVJ" alias=".service_locator.GJOAXQX"/>
    <service id=".service_locator.GKm6YDr" alias=".service_locator.i4_pXUi"/>
    <service id=".service_locator.rKToEeO" alias=".service_locator.xV8zwpH"/>
    <service id=".service_locator.JmHnXRx" alias=".service_locator.mx0UMmY"/>
    <service id=".service_locator.lXCrwcp" alias=".service_locator.FkiYa_u"/>
    <service id=".service_locator.sf85gDo" alias=".service_locator.XmPJruK"/>
    <service id=".service_locator.pFwChgS" alias=".service_locator.UkE3SaZ"/>
    <service id=".service_locator.aa1PbBb" alias=".service_locator.nLgZj7R"/>
    <service id="console.command.public_alias.App\Console\EnvironmentVariables" alias="App\Console\EnvironmentVariables" public="true"/>
    <service id="console.command.public_alias.App\Console\Wizard\ConfigureHelpdesk" alias="App\Console\Wizard\ConfigureHelpdesk" public="true"/>
    <service id="console.command.public_alias.App\Console\Wizard\DefaultUser" alias="App\Console\Wizard\DefaultUser" public="true"/>
    <service id="console.command.public_alias.App\Console\Wizard\MigrateDatabase" alias="App\Console\Wizard\MigrateDatabase" public="true"/>
    <service id="console.command.public_alias.Webkul\UVDesk\CoreFrameworkBundle\Guides\BootstrappingProject" alias="Webkul\UVDesk\CoreFrameworkBundle\Guides\BootstrappingProject" public="true"/>
    <service id="console.command.public_alias.Webkul\UVDesk\ExtensionFrameworkBundle\Console\BuildExtensions" alias="Webkul\UVDesk\ExtensionFrameworkBundle\Console\BuildExtensions" public="true"/>
    <service id="console.command.public_alias.Webkul\UVDesk\MailboxBundle\Console\RefreshMailboxCommand" alias="Webkul\UVDesk\MailboxBundle\Console\RefreshMailboxCommand" public="true"/>
  </services>
</container>
